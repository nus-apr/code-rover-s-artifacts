diff --git a/src/H5Ocache.c b/src/H5Ocache.c
index 0851493959..2a6d4d185d 100644
--- a/src/H5Ocache.c
+++ b/src/H5Ocache.c
@@ -872,7 +872,7 @@ H5O__cache_chk_serialize(const H5F_t *f, void *image, size_t len, void *_thing)
     /* copy the chunk into the image -- this is potentially expensive.
      * Can we rework things so that the chunk and the cache share a buffer?
      */
-    H5MM_memcpy(image, chk_proxy->oh->chunk[chk_proxy->chunkno].image, len);
+    H5MM_memcpy(image, chk_proxy->oh->chunk[chk_proxy->chunkno].image, chk_proxy->oh->chunk[chk_proxy->chunkno].size);
 
 done:
     FUNC_LEAVE_NOAPI(ret_value)
@@ -1323,9 +1323,9 @@ H5O__chunk_deserialize(H5O_t *oh, haddr_t addr, size_t chunk_size, const uint8_t
     oh->chunk[chunkno].chunk_proxy = NULL;
 
     /* Copy disk image into chunk's image */
-    if (len < oh->chunk[chunkno].size)
+    if (len > oh->chunk[chunkno].size)
         HGOTO_ERROR(H5E_OHDR, H5E_CANTCOPY, FAIL, "attempted to copy too many disk image bytes into buffer")
-    H5MM_memcpy(oh->chunk[chunkno].image, image, oh->chunk[chunkno].size);
+    H5MM_memcpy(oh->chunk[chunkno].image, image, len);
 
     /* Point into chunk image to decode */
     chunk_image = oh->chunk[chunkno].image;
