diff --git a/src/lib/protocols/http.c b/src/lib/protocols/http.c
index 9f1dd9cf..d4b4fdd6 100644
--- a/src/lib/protocols/http.c
+++ b/src/lib/protocols/http.c
@@ -979,7 +979,8 @@ static void ndpi_check_http_header(struct ndpi_detection_module_struct *ndpi_str
       if(is_a_suspicious_header(suspicious_http_header_keys_A, packet->line[i])) {
 	char str[64];
 
-	snprintf(str, sizeof(str), "Found %s", packet->line[i].ptr);
+	size_t len = strnlen(packet->line[i].ptr, packet->line[i].len);
+	snprintf(str, sizeof(str), "Found %.*s", (int)len, packet->line[i].ptr);
 	ndpi_set_risk(ndpi_struct, flow, NDPI_HTTP_SUSPICIOUS_HEADER, str);
 	return;
       }
@@ -988,7 +989,8 @@ static void ndpi_check_http_header(struct ndpi_detection_module_struct *ndpi_str
       if(is_a_suspicious_header(suspicious_http_header_keys_C, packet->line[i])) {
 	char str[64];
 
-	snprintf(str, sizeof(str), "Found %s", packet->line[i].ptr);
+	size_t len = strnlen(packet->line[i].ptr, packet->line[i].len);
+	snprintf(str, sizeof(str), "Found %.*s", (int)len, packet->line[i].ptr);
 	ndpi_set_risk(ndpi_struct, flow, NDPI_HTTP_SUSPICIOUS_HEADER, str);
 	return;
       }
@@ -997,7 +999,8 @@ static void ndpi_check_http_header(struct ndpi_detection_module_struct *ndpi_str
       if(is_a_suspicious_header(suspicious_http_header_keys_M, packet->line[i])) {
 	char str[64];
 
-	snprintf(str, sizeof(str), "Found %s", packet->line[i].ptr);
+	size_t len = strnlen(packet->line[i].ptr, packet->line[i].len);
+	snprintf(str, sizeof(str), "Found %.*s", (int)len, packet->line[i].ptr);
 	ndpi_set_risk(ndpi_struct, flow, NDPI_HTTP_SUSPICIOUS_HEADER, str);
 	return;
       }
@@ -1006,7 +1009,8 @@ static void ndpi_check_http_header(struct ndpi_detection_module_struct *ndpi_str
       if(is_a_suspicious_header(suspicious_http_header_keys_O, packet->line[i])) {
 	char str[64];
 
-	snprintf(str, sizeof(str), "Found %s", packet->line[i].ptr);
+	size_t len = strnlen(packet->line[i].ptr, packet->line[i].len);
+	snprintf(str, sizeof(str), "Found %.*s", (int)len, packet->line[i].ptr);
 	ndpi_set_risk(ndpi_struct, flow, NDPI_HTTP_SUSPICIOUS_HEADER, str);
 	return;
       }
@@ -1015,7 +1019,8 @@ static void ndpi_check_http_header(struct ndpi_detection_module_struct *ndpi_str
       if(is_a_suspicious_header(suspicious_http_header_keys_R, packet->line[i])) {
 	char str[64];
 
-	snprintf(str, sizeof(str), "Found %s", packet->line[i].ptr);
+	size_t len = strnlen(packet->line[i].ptr, packet->line[i].len);
+	snprintf(str, sizeof(str), "Found %.*s", (int)len, packet->line[i].ptr);
 	ndpi_set_risk(ndpi_struct, flow, NDPI_HTTP_SUSPICIOUS_HEADER, str);
 	return;
       }
@@ -1024,7 +1029,8 @@ static void ndpi_check_http_header(struct ndpi_detection_module_struct *ndpi_str
       if(is_a_suspicious_header(suspicious_http_header_keys_S, packet->line[i])) {
 	char str[64];
 
-	snprintf(str, sizeof(str), "Found %s", packet->line[i].ptr);
+	size_t len = strnlen(packet->line[i].ptr, packet->line[i].len);
+	snprintf(str, sizeof(str), "Found %.*s", (int)len, packet->line[i].ptr);
 	ndpi_set_risk(ndpi_struct, flow, NDPI_HTTP_SUSPICIOUS_HEADER, str);
 	return;
       }
@@ -1033,7 +1039,8 @@ static void ndpi_check_http_header(struct ndpi_detection_module_struct *ndpi_str
       if(is_a_suspicious_header(suspicious_http_header_keys_T, packet->line[i])) {
 	char str[64];
 
-	snprintf(str, sizeof(str), "Found %s", packet->line[i].ptr);
+	size_t len = strnlen(packet->line[i].ptr, packet->line[i].len);
+	snprintf(str, sizeof(str), "Found %.*s", (int)len, packet->line[i].ptr);
 	ndpi_set_risk(ndpi_struct, flow, NDPI_HTTP_SUSPICIOUS_HEADER, str);
 	return;
       }
@@ -1042,7 +1049,8 @@ static void ndpi_check_http_header(struct ndpi_detection_module_struct *ndpi_str
       if(is_a_suspicious_header(suspicious_http_header_keys_U, packet->line[i])) {
 	char str[64];
 
-	snprintf(str, sizeof(str), "Found %s", packet->line[i].ptr);
+	size_t len = strnlen(packet->line[i].ptr, packet->line[i].len);
+	snprintf(str, sizeof(str), "Found %.*s", (int)len, packet->line[i].ptr);
 	ndpi_set_risk(ndpi_struct, flow, NDPI_HTTP_SUSPICIOUS_HEADER, str);
 	return;
       }
@@ -1051,7 +1059,8 @@ static void ndpi_check_http_header(struct ndpi_detection_module_struct *ndpi_str
       if(is_a_suspicious_header(suspicious_http_header_keys_X, packet->line[i])) {
 	char str[64];
 
-	snprintf(str, sizeof(str), "Found %s", packet->line[i].ptr);
+	size_t len = strnlen(packet->line[i].ptr, packet->line[i].len);
+	snprintf(str, sizeof(str), "Found %.*s", (int)len, packet->line[i].ptr);
 	ndpi_set_risk(ndpi_struct, flow, NDPI_HTTP_SUSPICIOUS_HEADER, str);
 	return;
       }
