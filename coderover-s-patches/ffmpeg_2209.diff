diff --git a/libavcodec/hevc_refs.c b/libavcodec/hevc_refs.c
index fc1385ca55..f823df2f04 100644
--- a/libavcodec/hevc_refs.c
+++ b/libavcodec/hevc_refs.c
@@ -448,9 +448,13 @@ static int add_candidate_ref(HEVCContext *s, RefPicList *list,
             return AVERROR(ENOMEM);
     }
 
-    list->list[list->nb_refs] = ref->poc;
-    list->ref[list->nb_refs]  = ref;
-    list->nb_refs++;
+    if (list->nb_refs < HEVC_MAX_REFS) {
+        list->list[list->nb_refs] = ref->poc;
+        list->ref[list->nb_refs]  = ref;
+        list->nb_refs++;
+    } else {
+        return AVERROR(ENOMEM); // Return an error if the list is full
+    }
 
     mark_ref(ref, ref_flag);
     return 0;
@@ -493,9 +497,11 @@ int ff_hevc_frame_rps(HEVCContext *s)
         else
             list = ST_CURR_AFT;
 
-        ret = add_candidate_ref(s, &rps[list], poc, HEVC_FRAME_FLAG_SHORT_REF);
-        if (ret < 0)
-            goto fail;
+        if (rps[list].nb_refs < HEVC_MAX_REFS) {
+            ret = add_candidate_ref(s, &rps[list], poc, HEVC_FRAME_FLAG_SHORT_REF);
+            if (ret < 0)
+                goto fail;
+        }
     }
 
     /* add the long refs */
@@ -503,9 +509,11 @@ int ff_hevc_frame_rps(HEVCContext *s)
         int poc  = long_rps->poc[i];
         int list = long_rps->used[i] ? LT_CURR : LT_FOLL;
 
-        ret = add_candidate_ref(s, &rps[list], poc, HEVC_FRAME_FLAG_LONG_REF);
-        if (ret < 0)
-            goto fail;
+        if (rps[list].nb_refs < HEVC_MAX_REFS) {
+            ret = add_candidate_ref(s, &rps[list], poc, HEVC_FRAME_FLAG_LONG_REF);
+            if (ret < 0)
+                goto fail;
+        }
     }
 
 fail:
