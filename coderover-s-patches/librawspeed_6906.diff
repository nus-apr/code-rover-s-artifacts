diff --git a/src/librawspeed/decompressors/Cr2Decompressor.cpp b/src/librawspeed/decompressors/Cr2Decompressor.cpp
index ee58cc39..e5fa3d52 100644
--- a/src/librawspeed/decompressors/Cr2Decompressor.cpp
+++ b/src/librawspeed/decompressors/Cr2Decompressor.cpp
@@ -200,14 +200,19 @@ void Cr2Decompressor::decodeN_X_Y()
         }
 
         if (X_S_F == 1) { // will be optimized out
-          unroll_loop<N_COMP>([&](int i) {
-            dest[i] = pred[i] += ht[i]->decodeNext(bitStream);
-          });
+           unroll_loop<N_COMP>([&](int i) {
+             if (dest + i < reinterpret_cast<ushort16*>(mRaw->getDataUncropped(mRaw->dim.x, mRaw->dim.y))) {
+               dest[i] = pred[i] += ht[i]->decodeNext(bitStream);
+             }
+           });
         } else {
-          unroll_loop<Y_S_F>([&](int i) {
-            dest[0 + i*pixelPitch] = pred[0] += ht[0]->decodeNext(bitStream);
-            dest[3 + i*pixelPitch] = pred[0] += ht[0]->decodeNext(bitStream);
-          });
+           unroll_loop<Y_S_F>([&](int i) {
+             if ((dest + 0 + i*pixelPitch < reinterpret_cast<ushort16*>(mRaw->getDataUncropped(mRaw->dim.x, mRaw->dim.y))) &&
+                 (dest + 3 + i*pixelPitch < reinterpret_cast<ushort16*>(mRaw->getDataUncropped(mRaw->dim.x, mRaw->dim.y)))) {
+               dest[0 + i*pixelPitch] = pred[0] += ht[0]->decodeNext(bitStream);
+               dest[3 + i*pixelPitch] = pred[0] += ht[0]->decodeNext(bitStream);
+             }
+           });
 
           dest[1] = pred[1] += ht[1]->decodeNext(bitStream);
           dest[2] = pred[2] += ht[2]->decodeNext(bitStream);
