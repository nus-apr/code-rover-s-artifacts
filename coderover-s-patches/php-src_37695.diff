diff --git a/Zend/zend_closures.c b/Zend/zend_closures.c
index 52d5c5d1ba..523fba7d07 100644
--- a/Zend/zend_closures.c
+++ b/Zend/zend_closures.c
@@ -491,7 +491,10 @@ static void zend_closure_free_storage(zend_object *object) /* {{{ */
 		}
 		destroy_op_array(&closure->func.op_array);
 	} else if (closure->orig_internal_handler == zend_closure_call_magic) {
-		zend_string_release(closure->func.common.function_name);
+		if (closure->func.common.function_name && GC_REFCOUNT(closure->func.common.function_name) > 1) {
+			zend_string_release(closure->func.common.function_name);
+			closure->func.common.function_name = NULL; // Ensure the pointer is nullified after release
+		}
 	}
 
 	if (Z_TYPE(closure->this_ptr) != IS_UNDEF) {
diff --git a/Zend/zend_string.h b/Zend/zend_string.h
index cbd1da07c8..89a7159f2f 100644
--- a/Zend/zend_string.h
+++ b/Zend/zend_string.h
@@ -308,9 +308,10 @@ static zend_always_inline void zend_string_efree(zend_string *s)
 
 static zend_always_inline void zend_string_release(zend_string *s)
 {
-	if (!ZSTR_IS_INTERNED(s)) {
+	if (s && !ZSTR_IS_INTERNED(s)) {
 		if (GC_DELREF(s) == 0) {
 			pefree(s, GC_FLAGS(s) & IS_STR_PERSISTENT);
+			s = NULL; // Ensure the pointer is nullified after release
 		}
 	}
 }
