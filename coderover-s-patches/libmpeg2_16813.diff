diff --git a/common/ideint.c b/common/ideint.c
index 24e4e72..de9a22c 100644
--- a/common/ideint.c
+++ b/common/ideint.c
@@ -264,15 +264,33 @@ IDEINT_ERROR_T ideint_process(void *pv_ctxt,
             pu1_prv = ps_prv_fld->apu1_buf[i];
             pu1_prv += (ps_prv_fld->ai4_strd[i] * row << 2);
 
-            if(ps_ctxt->s_params.i4_cur_fld_top)
+            if(ps_cur_fld && ps_nxt_fld && ps_cur_fld->apu1_buf[i] && ps_nxt_fld->apu1_buf[i])
             {
-                pu1_top = ps_cur_fld->apu1_buf[i];
-                pu1_bot = ps_nxt_fld->apu1_buf[i];
+                if(ps_ctxt->s_params.i4_cur_fld_top)
+                {
+                    pu1_top = ps_cur_fld->apu1_buf[i];
+                    pu1_bot = ps_nxt_fld->apu1_buf[i];
+                }
+                else
+                {
+                    pu1_top = ps_nxt_fld->apu1_buf[i];
+                    pu1_bot = ps_cur_fld->apu1_buf[i];
+                }
+
+                // Ensure memory access is within bounds
+                if((row + 1) * cur_strd < ps_cur_fld->ai4_ht[i] && (row + 1) * cur_strd < ps_nxt_fld->ai4_ht[i])
+                {
+                    pu1_top += (cur_strd * row << 2);
+                    pu1_bot += (cur_strd * row << 2);
+                }
+                else
+                {
+                    return IDEINT_INVALID_CTXT;
+                }
             }
             else
             {
-                pu1_top = ps_nxt_fld->apu1_buf[i];
-                pu1_bot = ps_cur_fld->apu1_buf[i];
+                return IDEINT_INVALID_CTXT;
             }
             pu1_top += (cur_strd * row << 2);
             pu1_bot += (cur_strd * row << 2);
diff --git a/decoder/impeg2d_deinterlace.c b/decoder/impeg2d_deinterlace.c
index 89e5c1a..1f04ceb 100644
--- a/decoder/impeg2d_deinterlace.c
+++ b/decoder/impeg2d_deinterlace.c
@@ -253,9 +253,25 @@ WORD32 impeg2d_deinterlace(dec_state_t *ps_dec,
                     ps_dec->u4_frm_buf_stride);
 
 
-    ret = ideint_process(ps_dec->pv_deinterlacer_ctxt, &as_inp_flds[0],
-                         &as_inp_flds[1], &as_inp_flds[2], &s_dst_frm,
-                         &s_params, start_row, num_rows);
+    if(ps_dec->pv_deinterlacer_ctxt)
+    {
+        // Validate input field dimensions
+        for(int i = 0; i < 3; i++)
+        {
+            if(as_inp_flds[i].apu1_buf[0] == NULL || as_inp_flds[i].ai4_ht[0] <= 0 || as_inp_flds[i].ai4_wd[0] <= 0)
+            {
+                return -1;
+            }
+        }
+
+        ret = ideint_process(ps_dec->pv_deinterlacer_ctxt, &as_inp_flds[0],
+                             &as_inp_flds[1], &as_inp_flds[2], &s_dst_frm,
+                             &s_params, start_row, num_rows);
+    }
+    else
+    {
+        return -1;
+    }
 
     if(IDEINT_ERROR_NONE != ret)
     {
