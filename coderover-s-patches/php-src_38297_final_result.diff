diff --git a/Zend/zend_object_handlers.c b/Zend/zend_object_handlers.c
index f10e2c58a6..d0a6c7540b 100644
--- a/Zend/zend_object_handlers.c
+++ b/Zend/zend_object_handlers.c
@@ -676,8 +676,10 @@ call_getter:
 				zend_verify_prop_assignable_by_ref(prop_info, retval, (zobj->ce->__get->common.fn_flags & ZEND_ACC_STRICT_TYPES) != 0);
 			}
 
-			OBJ_RELEASE(zobj);
-			goto exit;
+	if (GC_REFCOUNT(zobj) > 0) {
+		OBJ_RELEASE(zobj);
+	}
+	goto exit;
 		} else if (UNEXPECTED(IS_WRONG_PROPERTY_OFFSET(property_offset))) {
 			/* Trigger the correct error */
 			zend_get_property_offset(zobj->ce, name, 0, NULL, &prop_info);
diff --git a/Zend/zend_objects_API.c b/Zend/zend_objects_API.c
index 104cda6141..406b89bb26 100644
--- a/Zend/zend_objects_API.c
+++ b/Zend/zend_objects_API.c
@@ -191,6 +191,8 @@ ZEND_API void ZEND_FASTCALL zend_objects_store_del(zend_object *object) /* {{{ *
 			GC_ADD_FLAGS(object, IS_OBJ_FREE_CALLED);
 			GC_SET_REFCOUNT(object, 1);
 			object->handlers->free_obj(object);
+			/* Ensure the object is not accessed after being freed */
+			GC_SET_REFCOUNT(object, 0);
 		}
 		ptr = ((char*)object) - object->handlers->offset;
 		GC_REMOVE_FROM_BUFFER(object);
