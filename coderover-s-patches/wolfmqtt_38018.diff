diff --git a/src/mqtt_packet.c b/src/mqtt_packet.c
index d345178..8118c0a 100755
--- a/src/mqtt_packet.c
+++ b/src/mqtt_packet.c
@@ -224,8 +224,11 @@ int MqttDecode_Vbi(byte *buf, word32 *value, word32 buf_len)
     do {
         if (buf_len < rc + 1)
             return MQTT_CODE_ERROR_OUT_OF_BUFFER;
-       encodedByte = *(buf++);
-       *value += (encodedByte & ~MQTT_PACKET_LEN_ENCODE_MASK) * multiplier;
+        if (buf_len <= rc) {
+            return MQTT_CODE_ERROR_OUT_OF_BUFFER;
+        }
+        encodedByte = *(buf++);
+        *value += (encodedByte & ~MQTT_PACKET_LEN_ENCODE_MASK) * multiplier;
        multiplier *= MQTT_PACKET_LEN_ENCODE_MASK;
        if (multiplier > (MQTT_PACKET_LEN_ENCODE_MASK *
                          MQTT_PACKET_LEN_ENCODE_MASK *
@@ -495,12 +498,19 @@ int MqttDecode_Props(MqttPacketType packet, MqttProp** props, byte* pbuf,
             return MQTT_CODE_ERROR_MEMORY;
 
         /* Decode the Identifier */
+        if ((word32)(buf_len - (buf - pbuf)) <= 0) {
+            return MQTT_CODE_ERROR_OUT_OF_BUFFER;
+        }
         tmp = MqttDecode_Vbi(buf, (word32*)&cur_prop->type,
                 (word32)(buf_len - (buf - pbuf)));
         if (tmp < 0) {
             return tmp;
         }
         buf += tmp;
+        if ((word32)(buf_len - (buf - pbuf)) < prop_len) {
+            return MQTT_CODE_ERROR_OUT_OF_BUFFER;
+        }
+        buf += tmp;
         rc += (int)tmp;
         prop_len -= tmp;
 
@@ -961,10 +971,17 @@ int MqttDecode_Publish(byte *rx_buf, int rx_buf_len, MqttPublish *publish)
         int tmp;
 
         /* Decode Length of Properties */
+        if ((word32)(rx_buf_len - (rx_payload - rx_buf)) <= 0) {
+            return MQTT_CODE_ERROR_OUT_OF_BUFFER;
+        }
         tmp = MqttDecode_Vbi(rx_payload, &props_len,
                 (word32)(rx_buf_len - (rx_payload - rx_buf)));
         if (tmp < 0)
             return tmp;
+        rx_payload += tmp;
+        if ((word32)(rx_buf_len - (rx_payload - rx_buf)) < props_len) {
+            return MQTT_CODE_ERROR_OUT_OF_BUFFER;
+        }
         variable_len += tmp + props_len;
         if (variable_len + header_len <= rx_buf_len) {
             rx_payload += tmp;
