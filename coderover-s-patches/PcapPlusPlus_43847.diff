diff --git a/Packet++/src/DnsResource.cpp b/Packet++/src/DnsResource.cpp
index 423282b8..73a78eed 100644
--- a/Packet++/src/DnsResource.cpp
+++ b/Packet++/src/DnsResource.cpp
@@ -71,10 +71,13 @@ size_t IDnsResource::decodeName(const char* encodedName, char* result, int itera
 			decodeName((const char*)(m_DnsLayer->m_Data + offsetInLayer), tempResult, iteration+1);
 			while (tempResult[i] != 0 && decodedNameLength < 255)
 			{
+				if (decodedNameLength >= 255) break; // Ensure we do not exceed buffer
 				resultPtr[0] = tempResult[i++];
 				resultPtr++;
 				decodedNameLength++;
 			}
+			if (decodedNameLength < 256) // Ensure space for null terminator
+				resultPtr[0] = 0;
 
 			resultPtr[0] = 0;
 
@@ -102,11 +105,21 @@ size_t IDnsResource::decodeName(const char* encodedName, char* result, int itera
 			}
 				
 
-			memcpy(resultPtr, encodedName+1, wordLength);
-			resultPtr += wordLength;
-			resultPtr[0] = '.';
-			resultPtr++;
-			decodedNameLength += wordLength + 1;
+			if (decodedNameLength + wordLength < 255) // Ensure we do not exceed buffer
+			{
+				memcpy(resultPtr, encodedName+1, wordLength);
+				resultPtr += wordLength;
+				resultPtr[0] = '.';
+				resultPtr++;
+				decodedNameLength += wordLength + 1;
+			}
+			else
+			{
+				// Handle error or truncate appropriately
+				break;
+			}
+			if (decodedNameLength < 256) // Ensure space for null terminator
+				resultPtr[0] = 0;
 			encodedName += wordLength + 1;
 			encodedNameLength += wordLength + 1;
 
