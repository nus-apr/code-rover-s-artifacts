diff --git a/src/lib/protocols/tls.c b/src/lib/protocols/tls.c
index 71f6eb0b..45f6cdc6 100644
--- a/src/lib/protocols/tls.c
+++ b/src/lib/protocols/tls.c
@@ -2384,14 +2384,16 @@ int processClientServerHello(struct ndpi_detection_module_struct *ndpi_struct,
 
 		ja.client.num_signature_algorithms = ndpi_min(sa_size, MAX_NUM_JA);
 
-		for(i=0, id=0; i<tot_signature_algorithms_len && s_offset+i<total_len; i++) {
-		  int rc = ndpi_snprintf(&ja.client.signature_algorithms_str[i*2],
-					 sizeof(ja.client.signature_algorithms_str)-i*2,
-					 "%02X", packet->payload[s_offset+i]);
-		  ja.client.signature_algorithms[id++] = ntohs(*(u_int16_t*)&packet->payload[s_offset+i*2]);
+    for(i=0, id=0; i<tot_signature_algorithms_len && s_offset+i<total_len && s_offset+i*2+1<packet->payload_packet_len; i++) {
+      int rc = ndpi_snprintf(&ja.client.signature_algorithms_str[i*2],
+			     sizeof(ja.client.signature_algorithms_str)-i*2,
+			     "%02X", packet->payload[s_offset+i]);
+      if(s_offset + i * 2 + 1 < packet->payload_packet_len) {
+        ja.client.signature_algorithms[id++] = ntohs(*(u_int16_t*)&packet->payload[s_offset+i*2]);
+      }
 
-		  if(rc < 0) break;
-		}
+      if(rc < 0) break;
+    }
 
 		for(i=0; i<tot_signature_algorithms_len && s_offset + (int)i + 2 < packet->payload_packet_len; i+=2) {
 		  u_int16_t signature_algo = (u_int16_t)ntohs(*((u_int16_t*)&packet->payload[s_offset+i]));
