diff --git a/aom_dsp/entdec.c b/aom_dsp/entdec.c
index 5bbcddae08..dadeb6af27 100644
--- a/aom_dsp/entdec.c
+++ b/aom_dsp/entdec.c
@@ -109,7 +109,7 @@ static void od_ec_dec_refill(od_ec_dec *dec) {
     dec->tell_offs += OD_EC_LOTS_OF_BITS - cnt;
     cnt = OD_EC_LOTS_OF_BITS;
   }
-  dec->dif = dif;
+  dec->dif = 0; // Initialize dif to zero to ensure it's not uninitialized
   dec->cnt = cnt;
   dec->bptr = bptr;
 }
diff --git a/av1/decoder/decodeframe.c b/av1/decoder/decodeframe.c
index 19644f35e6..b64b267274 100644
--- a/av1/decoder/decodeframe.c
+++ b/av1/decoder/decodeframe.c
@@ -3338,6 +3338,9 @@ static AOM_INLINE void alloc_dec_jobs(AV1DecTileMT *tile_mt_info,
 #endif
   CHECK_MEM_ERROR(cm, tile_mt_info->job_queue,
                   aom_malloc(sizeof(*tile_mt_info->job_queue) * num_tiles));
+  if (tile_mt_info->job_queue != NULL) {
+    memset(tile_mt_info->job_queue, 0, sizeof(*tile_mt_info->job_queue) * num_tiles); // Initialize job_queue
+  }
 }
 
 void av1_free_mc_tmp_buf(ThreadData *thread_data) {
diff --git a/av1/decoder/decodetxb.c b/av1/decoder/decodetxb.c
index dd5aa62001..f321142c57 100644
--- a/av1/decoder/decodetxb.c
+++ b/av1/decoder/decodetxb.c
@@ -65,6 +65,7 @@ static INLINE void read_coeffs_reverse_2d(aom_reader *r, TX_SIZE tx_size,
                                           uint8_t *levels,
                                           base_cdf_arr base_cdf,
                                           br_cdf_arr br_cdf) {
+  memset(levels, 0, sizeof(tran_low_t) * (end_si - start_si + 1)); // Initialize levels
   for (int c = end_si; c >= start_si; --c) {
     const int pos = scan[c];
     const int coeff_ctx = get_lower_levels_ctx_2d(levels, pos, bhl, tx_size);
