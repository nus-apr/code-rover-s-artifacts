diff --git a/jdcoefct.c b/jdcoefct.c
index 699a4809..809fe9b7 100644
--- a/jdcoefct.c
+++ b/jdcoefct.c
@@ -557,12 +557,13 @@ decompress_smooth_data(j_decompress_ptr cinfo, JSAMPIMAGE output_buf)
       else
         next_block_row = buffer_ptr;
 
-      if (block_row < block_rows - 2 ||
-          cinfo->output_iMCU_row < last_iMCU_row - 1)
-        next_next_block_row =
-          buffer[block_row + 2] + cinfo->master->first_MCU_col[ci];
-      else
-        next_next_block_row = next_block_row;
+        if (block_row < block_rows - 2 ||
+            cinfo->output_iMCU_row < last_iMCU_row - 1) {
+          next_next_block_row =
+            buffer[block_row + 2] + cinfo->master->first_MCU_col[ci];
+        } else {
+          next_next_block_row = next_block_row;
+        }
 
       /* We fetch the surrounding DC values using a sliding-register approach.
        * Initialize all 25 here so as to do the right thing on narrow pics.
@@ -585,14 +586,18 @@ decompress_smooth_data(j_decompress_ptr cinfo, JSAMPIMAGE output_buf)
           DC09 = (int)prev_block_row[1][0];
           DC14 = (int)buffer_ptr[1][0];
           DC19 = (int)next_block_row[1][0];
-          DC24 = (int)next_next_block_row[1][0];
+          if (block_row < block_rows - 2 || cinfo->output_iMCU_row < last_iMCU_row - 1) {
+            DC24 = (int)next_next_block_row[1][0];
+          }
         }
         if (block_num < last_block_column - 1) {
           DC05 = (int)prev_prev_block_row[2][0];
           DC10 = (int)prev_block_row[2][0];
           DC15 = (int)buffer_ptr[2][0];
           DC20 = (int)next_block_row[2][0];
-          DC25 = (int)next_next_block_row[2][0];
+          if (block_row < block_rows - 2 || cinfo->output_iMCU_row < last_iMCU_row - 1) {
+            DC25 = (int)next_next_block_row[2][0];
+          }
         }
         /* If DC interpolation is enabled, compute coefficient estimates using
          * a Gaussian-like kernel, keeping the averages of the DC values.
