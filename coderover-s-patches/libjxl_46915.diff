diff --git a/lib/jxl/render_pipeline/stage_write.cc b/lib/jxl/render_pipeline/stage_write.cc
index 081f61e1..aa9ba35d 100644
--- a/lib/jxl/render_pipeline/stage_write.cc
+++ b/lib/jxl/render_pipeline/stage_write.cc
@@ -97,6 +97,14 @@ class WriteToU8Stage : public RenderPipelineStage {
     const float* JXL_RESTRICT row_in_b = GetInputRow(input_rows, 2, 0);
     const float* JXL_RESTRICT row_in_a =
         has_alpha_ ? GetInputRow(input_rows, alpha_c_, 0) : nullptr;
+
+    // Ensure pointers are valid
+    JXL_DASSERT(row_in_r != nullptr);
+    JXL_DASSERT(row_in_g != nullptr);
+    JXL_DASSERT(row_in_b != nullptr);
+    if (has_alpha_) {
+        JXL_DASSERT(row_in_a != nullptr);
+    }
     size_t base_ptr = ypos * stride_ + bytes * (xpos - xextra);
     using D = HWY_CAPPED(float, 4);
     const D d;
@@ -114,24 +122,19 @@ class WriteToU8Stage : public RenderPipelineStage {
       msan::UnpoisonMemory(row_in_a + xsize, sizeof(float) * (x1 - xsize));
     }
 
-    for (ssize_t x = 0; x < x1; x += Lanes(d)) {
-      auto rf = Clamp(zero, Load(d, row_in_r + x), one) * mul;
-      auto gf = Clamp(zero, Load(d, row_in_g + x), one) * mul;
-      auto bf = Clamp(zero, Load(d, row_in_b + x), one) * mul;
-      auto af = row_in_a ? Clamp(zero, Load(d, row_in_a + x), one) * mul
-                         : Set(d, 255.0f);
-      auto r8 = U8FromU32(BitCast(du, NearestInt(rf)));
-      auto g8 = U8FromU32(BitCast(du, NearestInt(gf)));
-      auto b8 = U8FromU32(BitCast(du, NearestInt(bf)));
-      auto a8 = U8FromU32(BitCast(du, NearestInt(af)));
-      size_t n = xsize - x;
-      if (JXL_LIKELY(n >= Lanes(d))) {
-        StoreRGBA(D::Rebind<uint8_t>(), r8, g8, b8, a8, rgba_, Lanes(d), n,
-                  rgb_ + base_ptr + bytes * x);
-      } else {
+    for (ssize_t x = 0; x < xsize; x += Lanes(d)) {
+        size_t n = std::min(Lanes(d), xsize - x);
+        auto rf = Clamp(zero, LoadU(d, row_in_r + x), one) * mul;
+        auto gf = Clamp(zero, LoadU(d, row_in_g + x), one) * mul;
+        auto bf = Clamp(zero, LoadU(d, row_in_b + x), one) * mul;
+        auto af = row_in_a ? Clamp(zero, LoadU(d, row_in_a + x), one) * mul
+                           : Set(d, 255.0f);
+        auto r8 = U8FromU32(BitCast(du, NearestInt(rf)));
+        auto g8 = U8FromU32(BitCast(du, NearestInt(gf)));
+        auto b8 = U8FromU32(BitCast(du, NearestInt(bf)));
+        auto a8 = U8FromU32(BitCast(du, NearestInt(af)));
         StoreRGBA(D::Rebind<uint8_t>(), r8, g8, b8, a8, rgba_, n, n,
                   rgb_ + base_ptr + bytes * x);
-      }
     }
   }
 
