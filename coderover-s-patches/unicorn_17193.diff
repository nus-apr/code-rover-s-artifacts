diff --git a/qemu/cputlb.c b/qemu/cputlb.c
index 87f14f75..5633de84 100644
--- a/qemu/cputlb.c
+++ b/qemu/cputlb.c
@@ -305,7 +305,7 @@ tb_page_addr_t get_page_addr_code(CPUArchState *env1, target_ulong addr)
     }
     pd = env1->iotlb[mmu_idx][page_index] & ~TARGET_PAGE_MASK;
     mr = iotlb_to_region(cpu->as, pd);
-    if (memory_region_is_unassigned(cpu->uc, mr)) {
+    if (mr == NULL || memory_region_is_unassigned(cpu->uc, mr)) {
         CPUClass *cc = CPU_GET_CLASS(env1->uc, cpu);
 
         if (cc->do_unassigned_access) {
diff --git a/qemu/exec.c b/qemu/exec.c
index e6923862..2e9f2424 100644
--- a/qemu/exec.c
+++ b/qemu/exec.c
@@ -1430,7 +1430,13 @@ static uint16_t dummy_section(PhysPageMap *map, AddressSpace *as,
 
 MemoryRegion *iotlb_to_region(AddressSpace *as, hwaddr index)
 {
-    return as->dispatch->map.sections[index & ~TARGET_PAGE_MASK].mr;
+    size_t section_index = index & ~TARGET_PAGE_MASK;
+    size_t max_sections = sizeof(as->dispatch->map.sections) / sizeof(as->dispatch->map.sections[0]);
+    if (section_index < max_sections) {
+        return as->dispatch->map.sections[section_index].mr;
+    } else {
+        return NULL; // or handle the error appropriately
+    }
 }
 
 void phys_mem_clean(struct uc_struct* uc)
