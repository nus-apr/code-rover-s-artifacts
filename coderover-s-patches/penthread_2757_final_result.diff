diff --git a/src/core/thread/lowpan.cpp b/src/core/thread/lowpan.cpp
index f3bc718b6..3b1c222e5 100644
--- a/src/core/thread/lowpan.cpp
+++ b/src/core/thread/lowpan.cpp
@@ -729,6 +729,7 @@ int Lowpan::DecompressBaseHeader(Ip6::Header &ip6Header, const Mac::Address &aMa
         VerifyOrExit(remaining >= 2);
         ip6Header.GetSource().mFields.m8[11] = 0xff;
         ip6Header.GetSource().mFields.m8[12] = 0xfe;
+        VerifyOrExit(remaining >= 2); // Ensure there is enough buffer space
         memcpy(ip6Header.GetSource().mFields.m8 + 14, cur, 2);
         cur += 2;
         remaining -= 2;
@@ -777,9 +778,10 @@ int Lowpan::DecompressBaseHeader(Ip6::Header &ip6Header, const Mac::Address &aMa
             VerifyOrExit(remaining >= 2);
             ip6Header.GetDestination().mFields.m8[11] = 0xff;
             ip6Header.GetDestination().mFields.m8[12] = 0xfe;
-            memcpy(ip6Header.GetDestination().mFields.m8 + 14, cur, 2);
-            cur += 2;
-            remaining -= 2;
+        VerifyOrExit(remaining >= 2); // Ensure there is enough buffer space
+        memcpy(ip6Header.GetDestination().mFields.m8 + 14, cur, 2);
+        cur += 2;
+        remaining -= 2;
             break;
 
         case kHcDstAddrMode3:
@@ -812,6 +814,7 @@ int Lowpan::DecompressBaseHeader(Ip6::Header &ip6Header, const Mac::Address &aMa
             {
             case kHcDstAddrMode0:
                 VerifyOrExit(remaining >= sizeof(Ip6::Address));
+                VerifyOrExit(remaining >= sizeof(Ip6::Address)); // Ensure there is enough buffer space
                 memcpy(ip6Header.GetDestination().mFields.m8, cur, sizeof(Ip6::Address));
                 cur += sizeof(Ip6::Address);
                 remaining -= sizeof(Ip6::Address);
@@ -1056,6 +1059,9 @@ int Lowpan::Decompress(Message &aMessage, const Mac::Address &aMacSource, const
     compressed = (((static_cast<uint16_t>(cur[0]) << 8) | cur[1]) & kHcNextHeader) != 0;
 
     VerifyOrExit((rval = DecompressBaseHeader(ip6Header, aMacSource, aMacDest, cur, remaining)) >= 0);
+    VerifyOrExit(remaining >= rval); // Ensure there is enough buffer space after decompression
+    cur += rval;
+    remaining -= rval;
 
     cur += rval;
     remaining -= rval;
