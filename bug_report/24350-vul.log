======================= INFO =========================
This binary is built for AFL-fuzz.
To run the target function on individual input(s) execute this:
  /out/smiles_string_to_mol_fuzzer < INPUT_FILE
or
  /out/smiles_string_to_mol_fuzzer INPUT_FILE1 [INPUT_FILE2 ... ]
To fuzz with afl-fuzz execute this:
  afl-fuzz [afl-flags] /out/smiles_string_to_mol_fuzzer [-N]
afl-fuzz will run N iterations before re-spawning the process (default: 1000)
======================================================
Reading 13 bytes from /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000081d4 at pc 0x000000813982 bp 0x7fffdedf66f0 sp 0x7fffdedf66e8
WRITE of size 4 at 0x6020000081d4 thread T0
SCARINESS: 36 (4-byte-write-heap-buffer-overflow)
    #0 0x813981 in RDKit::Chirality::iterateCIPRanks(RDKit::ROMol const&, std::__1::vector<double, std::__1::allocator<double> >&, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&, bool) /src/rdkit/Code/GraphMol/Chirality.cpp:634:33
    #1 0x82b105 in RDKit::Chirality::rerankAtoms(RDKit::ROMol const&, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&) /src/rdkit/Code/GraphMol/Chirality.cpp:1331:3
    #2 0x82d6ec in RDKit::MolOps::assignStereochemistry(RDKit::ROMol&, bool, bool, bool) /src/rdkit/Code/GraphMol/Chirality.cpp:1488:7
    #3 0x516b21 in RDKit::SmilesToMol(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, RDKit::SmilesParserParams const&) /src/rdkit/Code/GraphMol/SmilesParse/SmilesParse.cpp:396:5
    #4 0x50fd38 in SmilesToMol /src/rdkit/Code/GraphMol/SmilesParse/SmilesParse.h:79:10
    #5 0x50fd38 in LLVMFuzzerTestOneInput /src/rdkit/Code/Fuzz/smiles_string_to_mol_fuzzer.cc:30:9
    #6 0x8a323e in ExecuteFilesOnyByOne /src/libfuzzer/afl/afl_driver.cpp:217:5
    #7 0x8a323e in main /src/libfuzzer/afl/afl_driver.cpp:254:12
    #8 0x726da36e283f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #9 0x464938 in _start (/out/smiles_string_to_mol_fuzzer+0x464938)

DEDUP_TOKEN: RDKit::Chirality::iterateCIPRanks(RDKit::ROMol const&, std::__1::vector<double, std::__1::allocator<double> >&, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&, bool)--RDKit::Chirality::rerankAtoms(RDKit::ROMol const&, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&)--RDKit::MolOps::assignStereochemistry(RDKit::ROMol&, bool, bool, bool)
0x6020000081d4 is located 0 bytes to the right of 4-byte region [0x6020000081d0,0x6020000081d4)
allocated by thread T0 here:
    #0 0x50cb4d in operator new(unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:99:3
    #1 0x5d9bbe in __libcpp_allocate /usr/local/bin/../include/c++/v1/new:253:10
    #2 0x5d9bbe in allocate /usr/local/bin/../include/c++/v1/memory:1850:34
    #3 0x5d9bbe in allocate /usr/local/bin/../include/c++/v1/memory:1541:21
    #4 0x5d9bbe in __split_buffer /usr/local/bin/../include/c++/v1/__split_buffer:318:29
    #5 0x5d9bbe in void std::__1::vector<int, std::__1::allocator<int> >::__push_back_slow_path<int>(int&&) /usr/local/bin/../include/c++/v1/vector:1625:49
    #6 0x811d78 in push_back /usr/local/bin/../include/c++/v1/vector:1657:9
    #7 0x811d78 in RDKit::Chirality::iterateCIPRanks(RDKit::ROMol const&, std::__1::vector<double, std::__1::allocator<double> >&, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&, bool) /src/rdkit/Code/GraphMol/Chirality.cpp:528:21
    #8 0x82b105 in RDKit::Chirality::rerankAtoms(RDKit::ROMol const&, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&) /src/rdkit/Code/GraphMol/Chirality.cpp:1331:3
    #9 0x82d6ec in RDKit::MolOps::assignStereochemistry(RDKit::ROMol&, bool, bool, bool) /src/rdkit/Code/GraphMol/Chirality.cpp:1488:7
    #10 0x516b21 in RDKit::SmilesToMol(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, RDKit::SmilesParserParams const&) /src/rdkit/Code/GraphMol/SmilesParse/SmilesParse.cpp:396:5
    #11 0x50fd38 in SmilesToMol /src/rdkit/Code/GraphMol/SmilesParse/SmilesParse.h:79:10
    #12 0x50fd38 in LLVMFuzzerTestOneInput /src/rdkit/Code/Fuzz/smiles_string_to_mol_fuzzer.cc:30:9
    #13 0x8a323e in ExecuteFilesOnyByOne /src/libfuzzer/afl/afl_driver.cpp:217:5
    #14 0x8a323e in main /src/libfuzzer/afl/afl_driver.cpp:254:12
    #15 0x726da36e283f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: operator new(unsigned long)--__libcpp_allocate--allocate
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/rdkit/Code/GraphMol/Chirality.cpp:634:33 in RDKit::Chirality::iterateCIPRanks(RDKit::ROMol const&, std::__1::vector<double, std::__1::allocator<double> >&, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&, bool)
Shadow bytes around the buggy address:
  0x0c047fff8fe0: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa
  0x0c047fff8ff0: fa fa fd fd fa fa 00 04 fa fa fd fd fa fa fd fa
  0x0c047fff9000: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff9010: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa
  0x0c047fff9020: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
=>0x0c047fff9030: fa fa fd fa fa fa fd fd fa fa[04]fa fa fa 04 fa
  0x0c047fff9040: fa fa 04 fa fa fa fd fd fa fa fd fa fa fa fd fa
  0x0c047fff9050: fa fa fd fa fa fa fd fa fa fa fa fa fa fa fa fa
  0x0c047fff9060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff9070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff9080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
