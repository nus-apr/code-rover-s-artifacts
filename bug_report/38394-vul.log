INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2186682600
INFO: Loaded 1 modules   (4500 inline 8-bit counters): 4500 [0x657d40, 0x658ed4), 
INFO: Loaded 1 PC tables (4500 PCs): 4500 [0x6017c8,0x613108), 
/out/stbi_read_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000100 at pc 0x000000559d06 bp 0x7ffd852a5bd0 sp 0x7ffd852a5bc8
READ of size 2 at 0x602000000100 thread T0
SCARINESS: 14 (2-byte-read-heap-buffer-overflow)
    #0 0x559d05 in stbi__convert_16_to_8 /src/stb/tests/../stb_image.h:1180:31
    #1 0x559d05 in stbi__load_and_postprocess_8bit(stbi__context*, int*, int*, int*, int) /src/stb/tests/../stb_image.h:1252:16
    #2 0x569774 in stbi_load_from_memory /src/stb/tests/../stb_image.h:1413:11
    #3 0x569774 in LLVMFuzzerTestOneInput /src/stb/tests/stbi_read_fuzzer.c:19:26
    #4 0x455933 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) cxa_noexception.cpp
    #5 0x4425d2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #6 0x447ffb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) cxa_noexception.cpp
    #7 0x46dea2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0x782cfa617082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)
    #9 0x41f6ed in _start (/out/stbi_read_fuzzer+0x41f6ed)

DEDUP_TOKEN: stbi__convert_16_to_8--stbi__load_and_postprocess_8bit(stbi__context*, int*, int*, int*, int)--stbi_load_from_memory
0x602000000100 is located 0 bytes to the right of 16-byte region [0x6020000000f0,0x602000000100)
allocated by thread T0 here:
    #0 0x52048d in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:129:3
    #1 0x593f30 in stbi__malloc /src/stb/tests/../stb_image.h:984:12
    #2 0x593f30 in stbi__malloc_mad3 /src/stb/tests/../stb_image.h:1055:11
    #3 0x593f30 in stbi__convert_format(unsigned char*, int, int, unsigned int, unsigned int) /src/stb/tests/../stb_image.h:1743:29
    #4 0x580933 in stbi__pnm_load(stbi__context*, int*, int*, int*, int, stbi__result_info*) /src/stb/tests/../stb_image.h:7452:13
    #5 0x56c049 in stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) /src/stb/tests/../stb_image.h:1151:35
    #6 0x559742 in stbi__load_and_postprocess_8bit(stbi__context*, int*, int*, int*, int) /src/stb/tests/../stb_image.h:1243:19
    #7 0x569774 in stbi_load_from_memory /src/stb/tests/../stb_image.h:1413:11
    #8 0x569774 in LLVMFuzzerTestOneInput /src/stb/tests/stbi_read_fuzzer.c:19:26
    #9 0x455933 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) cxa_noexception.cpp
    #10 0x4425d2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #11 0x447ffb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) cxa_noexception.cpp
    #12 0x46dea2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #13 0x782cfa617082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)

DEDUP_TOKEN: __interceptor_malloc--stbi__malloc--stbi__malloc_mad3
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/stb/tests/../stb_image.h:1180:31 in stbi__convert_16_to_8
Shadow bytes around the buggy address:
  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff8000: fa fa 00 00 fa fa 00 fa fa fa 00 fa fa fa 00 fa
  0x0c047fff8010: fa fa 00 02 fa fa 00 02 fa fa fd fa fa fa 00 00
=>0x0c047fff8020:[fa]fa 00 00 fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
