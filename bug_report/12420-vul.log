INFO: Seed: 2316788300
INFO: Loaded 1 modules   (1555 inline 8-bit counters): 1555 [0x932328, 0x93293b), 
INFO: Loaded 1 PC tables (1555 PCs): 1555 [0x6cd940,0x6d3a70), 
/out/libidn2_to_ascii_8z_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6060000001e0 at pc 0x000000451b75 bp 0x7ffe81d5c010 sp 0x7ffe81d5b7c0
WRITE of size 66 at 0x6060000001e0 thread T0
SCARINESS: 45 (multi-byte-write-heap-buffer-overflow)
    #0 0x451b74 in __interceptor_strcpy /src/llvm/projects/compiler-rt/lib/asan/asan_interceptors.cc:433
    #1 0x533c1f in idn2_to_ascii_4i /src/libidn2/lib/lookup.c:621:2
    #2 0x531622 in LLVMFuzzerTestOneInput /src/libidn2/fuzz/libidn2_to_ascii_8z_fuzzer.c:73:4
    #3 0x574255 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:571:15
    #4 0x549b46 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:280:6
    #5 0x555406 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:713:9
    #6 0x5491bc in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #7 0x7ead1743383f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #8 0x41cf48 in _start (/out/libidn2_to_ascii_8z_fuzzer+0x41cf48)

DEDUP_TOKEN: __interceptor_strcpy--idn2_to_ascii_4i--LLVMFuzzerTestOneInput
0x6060000001e0 is located 0 bytes to the right of 64-byte region [0x6060000001a0,0x6060000001e0)
allocated by thread T0 here:
    #0 0x4ec5bf in malloc /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:146
    #1 0x5315ae in LLVMFuzzerTestOneInput /src/libidn2/fuzz/libidn2_to_ascii_8z_fuzzer.c:67:25
    #2 0x574255 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:571:15
    #3 0x549b46 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:280:6
    #4 0x555406 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:713:9
    #5 0x5491bc in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #6 0x7ead1743383f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--LLVMFuzzerTestOneInput--fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/llvm/projects/compiler-rt/lib/asan/asan_interceptors.cc:433 in __interceptor_strcpy
Shadow bytes around the buggy address:
  0x0c0c7fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c0c7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c0c7fff8000: fa fa fa fa 00 00 00 00 00 00 04 fa fa fa fa fa
  0x0c0c7fff8010: 00 00 00 00 00 00 04 fa fa fa fa fa 00 00 00 00
  0x0c0c7fff8020: 00 00 05 fa fa fa fa fa 00 00 00 00 00 00 00 fa
=>0x0c0c7fff8030: fa fa fa fa 00 00 00 00 00 00 00 00[fa]fa fa fa
  0x0c0c7fff8040: fd fd fd fd fd fd fd fa fa fa fa fa fd fd fd fd
  0x0c0c7fff8050: fd fd fd fa fa fa fa fa fd fd fd fd fd fd fd fa
  0x0c0c7fff8060: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa
  0x0c0c7fff8070: fd fd fd fd fd fd fd fa fa fa fa fa fd fd fd fd
  0x0c0c7fff8080: fd fd fd fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
