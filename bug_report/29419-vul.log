======================= INFO =========================
This binary is built for AFL-fuzz.
To run the target function on individual input(s) execute this:
  /out/dotnet_fuzzer < INPUT_FILE
or
  /out/dotnet_fuzzer INPUT_FILE1 [INPUT_FILE2 ... ]
To fuzz with afl-fuzz execute this:
  afl-fuzz [afl-flags] /out/dotnet_fuzzer [-N]
afl-fuzz will run N iterations before re-spawning the process (default: 1000)
======================================================
Reading 294 bytes from /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x612000000165 at pc 0x00000057a2cd bp 0x7ffd500a0c70 sp 0x7ffd500a0c68
READ of size 2 at 0x612000000165 thread T0
SCARINESS: 14 (2-byte-read-heap-buffer-overflow)
    #0 0x57a2cc in dotnet_parse_tilde_2 /src/yara/libyara/modules/dotnet.c:859:17
    #1 0x57be9c in dotnet_parse_tilde /src/yara/libyara/modules/dotnet.c:1509:3
    #2 0x57c69d in dotnet_parse_com /src/yara/libyara/modules/dotnet.c:1596:5
    #3 0x57dd32 in dotnet__load /src/yara/libyara/modules/dotnet.c:1716:9
    #4 0x54040e in yr_modules_load /src/yara/libyara/modules.c:175:16
    #5 0x5a5abf in yr_execute_code /src/yara/libyara/exec.c:951:18
    #6 0x549ee5 in yr_scanner_scan_mem_blocks /src/yara/libyara/scanner.c:435:3
    #7 0x546695 in yr_rules_scan_mem_blocks /src/yara/libyara/rules.c:205:12
    #8 0x5468ff in yr_rules_scan_mem /src/yara/libyara/rules.c:255:10
    #9 0x530452 in LLVMFuzzerTestOneInput /src/yara/tests/oss-fuzz/dotnet_fuzzer.cc:74:3
    #10 0x5d88de in ExecuteFilesOnyByOne(int, char**) /src/libfuzzer/afl/afl_driver.cpp:301:5
    #11 0x5d8e4e in main /src/libfuzzer/afl/afl_driver.cpp:339:12
    #12 0x71b111ff183f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #13 0x41cef8 in _start (/out/dotnet_fuzzer+0x41cef8)

DEDUP_TOKEN: dotnet_parse_tilde_2--dotnet_parse_tilde--dotnet_parse_com
0x612000000166 is located 0 bytes to the right of 294-byte region [0x612000000040,0x612000000166)
allocated by thread T0 here:
    #0 0x52bd68 in operator new(unsigned long) /src/llvm/projects/compiler-rt/lib/asan/asan_new_delete.cc:106
    #1 0x5d87f9 in __libcpp_allocate /usr/local/bin/../include/c++/v1/new:257:10
    #2 0x5d87f9 in allocate /usr/local/bin/../include/c++/v1/memory:1800
    #3 0x5d87f9 in allocate /usr/local/bin/../include/c++/v1/memory:1549
    #4 0x5d87f9 in __vallocate /usr/local/bin/../include/c++/v1/vector:972
    #5 0x5d87f9 in vector /usr/local/bin/../include/c++/v1/vector:1115
    #6 0x5d87f9 in ExecuteFilesOnyByOne(int, char**) /src/libfuzzer/afl/afl_driver.cpp:298
    #7 0x5d8e4e in main /src/libfuzzer/afl/afl_driver.cpp:339:12
    #8 0x71b111ff183f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: operator new(unsigned long)--__libcpp_allocate--allocate
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/yara/libyara/modules/dotnet.c:859:17 in dotnet_parse_tilde_2
Shadow bytes around the buggy address:
  0x0c247fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c247fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c247fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c247fff8000: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c247fff8010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c247fff8020: 00 00 00 00 00 00 00 00 00 00 00 00[06]fa fa fa
  0x0c247fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c247fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c247fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c247fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c247fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
