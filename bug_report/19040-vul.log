Accepting input from '/tmp/poc'
Usage for fuzzing: honggfuzz -P [flags] -- /out/fuzz_pkcs15_reader
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000067f at pc 0x0000005c9562 bp 0x7fffada30df0 sp 0x7fffada30de8
READ of size 1 at 0x60200000067f thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x5c9561 in coolkey_v1_get_attribute_len /src/opensc/src/libopensc/card-coolkey.c:343:26
    #1 0x5ca77d in coolkey_v1_get_attribute_record_len /src/opensc/src/libopensc/card-coolkey.c:391:6
    #2 0x5c8f8c in coolkey_find_attribute /src/opensc/src/libopensc/card-coolkey.c:1496:23
    #3 0x4d95ba in sc_card_ctl /src/opensc/src/libopensc/card.c:1017:7
    #4 0x707771 in coolkey_get_attribute /src/opensc/src/libopensc/pkcs15-coolkey.c:98:6
    #5 0x7079f3 in coolkey_get_attribute_bytes /src/opensc/src/libopensc/pkcs15-coolkey.c:192:6
    #6 0x70647f in sc_pkcs15emu_coolkey_init /src/opensc/src/libopensc/pkcs15-coolkey.c:562:3
    #7 0x70578f in sc_pkcs15emu_coolkey_init_ex /src/opensc/src/libopensc/pkcs15-coolkey.c:727:7
    #8 0x519654 in sc_pkcs15_bind_synthetic /src/opensc/src/libopensc/pkcs15-syn.c:121:8
    #9 0x4e8871 in sc_pkcs15_bind /src/opensc/src/libopensc/pkcs15.c:1269:8
    #10 0x4c70fd in LLVMFuzzerTestOneInput /src/opensc/src/tests/fuzzing/fuzz_pkcs15_reader.c:210:5
    #11 0x4c8114 in HonggfuzzMain (/out/fuzz_pkcs15_reader+0x4c8114)
    #12 0x719099c7783f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #13 0x41e0d8 in _start (/out/fuzz_pkcs15_reader+0x41e0d8)

DEDUP_TOKEN: coolkey_v1_get_attribute_len--coolkey_v1_get_attribute_record_len--coolkey_find_attribute
0x60200000067f is located 0 bytes to the right of 15-byte region [0x602000000670,0x60200000067f)
allocated by thread T0 here:
    #0 0x49652d in malloc /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x5c82b1 in coolkey_fill_object /src/opensc/src/libopensc/card-coolkey.c:1415:17
    #2 0x5c9017 in coolkey_find_attribute /src/opensc/src/libopensc/card-coolkey.c:1460:11
    #3 0x4d95ba in sc_card_ctl /src/opensc/src/libopensc/card.c:1017:7
    #4 0x707771 in coolkey_get_attribute /src/opensc/src/libopensc/pkcs15-coolkey.c:98:6
    #5 0x707c8a in coolkey_get_attribute_ulong /src/opensc/src/libopensc/pkcs15-coolkey.c:155:7
    #6 0x706592 in sc_pkcs15emu_coolkey_init /src/opensc/src/libopensc/pkcs15-coolkey.c:568:7
    #7 0x70578f in sc_pkcs15emu_coolkey_init_ex /src/opensc/src/libopensc/pkcs15-coolkey.c:727:7
    #8 0x519654 in sc_pkcs15_bind_synthetic /src/opensc/src/libopensc/pkcs15-syn.c:121:8
    #9 0x4e8871 in sc_pkcs15_bind /src/opensc/src/libopensc/pkcs15.c:1269:8
    #10 0x4c70fd in LLVMFuzzerTestOneInput /src/opensc/src/tests/fuzzing/fuzz_pkcs15_reader.c:210:5
    #11 0x4c8114 in HonggfuzzMain (/out/fuzz_pkcs15_reader+0x4c8114)

DEDUP_TOKEN: malloc--coolkey_fill_object--coolkey_find_attribute
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/opensc/src/libopensc/card-coolkey.c:343:26 in coolkey_v1_get_attribute_len
Shadow bytes around the buggy address:
  0x0c047fff8070: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff8080: fa fa fd fa fa fa fd fa fa fa fd fd fa fa fd fa
  0x0c047fff8090: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff80a0: fa fa fd fa fa fa fd fd fa fa 00 00 fa fa 00 fa
  0x0c047fff80b0: fa fa fd fd fa fa fd fd fa fa 00 fa fa fa 00 05
=>0x0c047fff80c0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00[07]
  0x0c047fff80d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff80e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff80f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
