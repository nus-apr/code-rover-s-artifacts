Accepting input from '/tmp/poc'
Usage for fuzzing: honggfuzz -P [flags] -- /out/ip6-send-fuzzer
=================================================================
==13==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x70fed3d4e71e at pc 0x0000004f54be bp 0x7fffe265de70 sp 0x7fffe265de68
READ of size 2 at 0x70fed3d4e71e thread T0
SCARINESS: 29 (2-byte-read-stack-buffer-overflow)
    #0 0x4f54bd in ot::ExtendedTlv::GetLength() const /src/openthread/src/core/./common/tlvs.hpp:268:56
    #1 0x56c5a0 in ot::Tlv::GetSize() const /src/openthread/src/core/common/tlvs.cpp:44:89
    #2 0x54fd1a in ot::Tlv::GetNext() /src/openthread/src/core/./common/tlvs.hpp:151:93
    #3 0x551ad5 in ot::NetworkData::Leader::HandleCommissioningSet(ot::Coap::Message&, ot::Ip6::MessageInfo const&) /src/openthread/src/core/thread/network_data_leader_ftd.cpp:209:9
    #4 0x567261 in ot::Coap::CoapBase::ProcessReceivedRequest(ot::Coap::Message&, ot::Ip6::MessageInfo const&) /src/openthread/src/core/coap/coap.cpp:593:23
    #5 0x508666 in ot::Ip6::Udp::HandleMessage(ot::Message&, ot::Ip6::MessageInfo&) /src/openthread/src/core/net/udp6.cpp:336:5
    #6 0x4fc305 in ot::Ip6::Ip6::HandleDatagram(ot::Message&, ot::Ip6::Netif*, void const*, bool) /src/openthread/src/core/net/ip6.cpp:1225:9
    #7 0x4fe970 in ot::Ip6::Ip6::SendRaw(ot::Message&) /src/openthread/src/core/net/ip6.cpp:1131:13
    #8 0x4c7aec in LLVMFuzzerTestOneInput /src/openthread/tests/fuzz/ip6_send.cpp:72:13
    #9 0x6066b4 in HonggfuzzMain (/out/ip6-send-fuzzer+0x6066b4)
    #10 0x70fed2ce083f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #11 0x41bd98 in _start (/out/ip6-send-fuzzer+0x41bd98)

DEDUP_TOKEN: ot::ExtendedTlv::GetLength() const--ot::Tlv::GetSize() const--ot::Tlv::GetNext()
Address 0x70fed3d4e71e is located in stack of thread T0 at offset 286 in frame
    #0 0x55191f in ot::NetworkData::Leader::HandleCommissioningSet(ot::Coap::Message&, ot::Ip6::MessageInfo const&) /src/openthread/src/core/thread/network_data_leader_ftd.cpp:183

DEDUP_TOKEN: ot::NetworkData::Leader::HandleCommissioningSet(ot::Coap::Message&, ot::Ip6::MessageInfo const&)
  This frame has 1 object(s):
    [32, 286) 'tlvs' (line 186) <== Memory access at offset 286 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /src/openthread/src/core/./common/tlvs.hpp:268:56 in ot::ExtendedTlv::GetLength() const
Shadow bytes around the buggy address:
  0x0e205a7a1c90: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0e205a7a1ca0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0e205a7a1cb0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0e205a7a1cc0: f1 f1 f1 f1 00 00 00 00 00 00 00 00 00 00 00 00
  0x0e205a7a1cd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0e205a7a1ce0: 00 00 00[06]f3 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x0e205a7a1cf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0e205a7a1d00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0e205a7a1d10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0e205a7a1d20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0e205a7a1d30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
