INFO: Seed: 2225053739
INFO: Loaded 1 modules   (8597 inline 8-bit counters): 8597 [0x9b7ca8, 0x9b9e3d), 
INFO: Loaded 1 PC tables (8597 PCs): 8597 [0x737b30,0x759480), 
/out/pcre2_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==12==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x610000000201 at pc 0x000000660fab bp 0x7ffdc12aef80 sp 0x7ffdc12aef78
READ of size 1 at 0x610000000201 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x660faa in get_chr_property_list /src/pcre2/src/pcre2_auto_possess.c:395:3
    #1 0x65efe9 in _pcre2_auto_possessify_8 /src/pcre2/src/pcre2_auto_possess.c:1114:7
    #2 0x5c175e in pcre2_compile_8 /src/pcre2/src/pcre2_compile.c:9706:7
    #3 0x5b9ecf in LLVMFuzzerTestOneInput /src/pcre2/src/pcre2_fuzzsupport.c:144:10
    #4 0x557a18 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:564:15
    #5 0x52e0fa in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:280:6
    #6 0x539915 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:711:9
    #7 0x52d79c in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #8 0x72217d44983f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #9 0x41cbb8 in _start (/out/pcre2_fuzzer+0x41cbb8)

DEDUP_TOKEN: get_chr_property_list--_pcre2_auto_possessify_8--pcre2_compile_8
0x610000000201 is located 1 bytes to the right of 192-byte region [0x610000000140,0x610000000200)
allocated by thread T0 here:
    #0 0x4eaa47 in malloc /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:121
    #1 0x5c07d2 in pcre2_compile_8 /src/pcre2/src/pcre2_compile.c:9525:3
    #2 0x5b9ecf in LLVMFuzzerTestOneInput /src/pcre2/src/pcre2_fuzzsupport.c:144:10
    #3 0x557a18 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:564:15
    #4 0x52e0fa in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:280:6
    #5 0x539915 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:711:9
    #6 0x52d79c in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #7 0x72217d44983f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--pcre2_compile_8--LLVMFuzzerTestOneInput
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/pcre2/src/pcre2_auto_possess.c:395:3 in get_chr_property_list
Shadow bytes around the buggy address:
  0x0c207fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c207fff8000: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd
  0x0c207fff8010: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c207fff8020: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c207fff8030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c207fff8040:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c207fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c207fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c207fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c207fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c207fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12==ABORTING
