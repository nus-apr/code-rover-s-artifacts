INFO: Seed: 2267293893
INFO: Loaded 1 modules   (178836 inline 8-bit counters): 178836 [0x1dff888, 0x1e2b31c), 
INFO: Loaded 1 PC tables (178836 PCs): 178836 [0x1e2b320,0x20e5c60), 
/out/assimp_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
Info,  T0: Load $$$___magic___$$$.
Info,  T0: File extension not known, trying signature-based detection
Info,  T0: Found a matching importer for this file format: Wavefront Object Importer.
Info,  T0: Import root directory is './'
Error, T0: OBJ: failed to locate material ª ±34f, creating new material
=================================================================
==13==ERROR: AddressSanitizer: heap-use-after-free on address 0x603000000880 at pc 0x000000981ab5 bp 0x7ffdc8e20f30 sp 0x7ffdc8e20f28
READ of size 4 at 0x603000000880 thread T0
SCARINESS: 45 (4-byte-read-heap-use-after-free)
    #0 0x981ab4 in Assimp::ObjFileImporter::createVertexArray(Assimp::ObjFile::Model const*, Assimp::ObjFile::Object const*, unsigned int, aiMesh*, unsigned int) /src/assimp/code/AssetLib/Obj/ObjFileImporter.cpp:468:63
    #1 0x980267 in Assimp::ObjFileImporter::createTopology(Assimp::ObjFile::Model const*, Assimp::ObjFile::Object const*, unsigned int) /src/assimp/code/AssetLib/Obj/ObjFileImporter.cpp:390:5
    #2 0x97debb in Assimp::ObjFileImporter::createNodes(Assimp::ObjFile::Model const*, Assimp::ObjFile::Object const*, aiNode*, aiScene*, std::__1::vector<aiMesh*, std::__1::allocator<aiMesh*> >&) /src/assimp/code/AssetLib/Obj/ObjFileImporter.cpp:272:25
    #3 0x97ce7b in Assimp::ObjFileImporter::CreateDataFromImport(Assimp::ObjFile::Model const*, aiScene*) /src/assimp/code/AssetLib/Obj/ObjFileImporter.cpp:193:13
    #4 0x97c047 in Assimp::ObjFileImporter::InternReadFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, aiScene*, Assimp::IOSystem*) /src/assimp/code/AssetLib/Obj/ObjFileImporter.cpp:144:5
    #5 0x1252bf8 in Assimp::BaseImporter::ReadFile(Assimp::Importer*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Assimp::IOSystem*) /src/assimp/code/Common/BaseImporter.cpp:127:9
    #6 0x5a205d in Assimp::Importer::ReadFile(char const*, unsigned int) /src/assimp/code/Common/Importer.cpp:665:30
    #7 0x5a0fc0 in Assimp::Importer::ReadFileFromMemory(void const*, unsigned long, unsigned int, char const*) /src/assimp/code/Common/Importer.cpp:502:5
    #8 0x559f8f in LLVMFuzzerTestOneInput /src/assimp/fuzz/assimp_fuzzer.cc:53:34
    #9 0x45f241 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:559:15
    #10 0x44a9e2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:301:6
    #11 0x45097d in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:801:9
    #12 0x478262 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #13 0x7c27e4ea783f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #14 0x425188 in _start (/out/assimp_fuzzer+0x425188)

DEDUP_TOKEN: Assimp::ObjFileImporter::createVertexArray(Assimp::ObjFile::Model const*, Assimp::ObjFile::Object const*, unsigned int, aiMesh*, unsigned int)--Assimp::ObjFileImporter::createTopology(Assimp::ObjFile::Model const*, Assimp::ObjFile::Object const*, unsigned int)--Assimp::ObjFileImporter::createNodes(Assimp::ObjFile::Model const*, Assimp::ObjFile::Object const*, aiNode*, aiScene*, std::__1::vector<aiMesh*, std::__1::allocator<aiMesh*> >&)
0x603000000880 is located 0 bytes inside of 32-byte region [0x603000000880,0x6030000008a0)
freed by thread T0 here:
    #0 0x557dad in operator delete(void*) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:160:3
    #1 0x988b6d in std::__1::__wrap_iter<char*> Assimp::getNameNoSpace<std::__1::__wrap_iter<char*> >(std::__1::__wrap_iter<char*>, std::__1::__wrap_iter<char*>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&) /src/assimp/code/AssetLib/Obj/ObjTools.h:197:1
    #2 0x98544f in Assimp::ObjFileParser::parseFile(Assimp::IOStreamBuffer<char>&) /src/assimp/code/AssetLib/Obj/ObjFileParser.cpp:179:13
    #3 0x984545 in Assimp::ObjFileParser::ObjFileParser(Assimp::IOStreamBuffer<char>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Assimp::IOSystem*, Assimp::ProgressHandler*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /src/assimp/code/AssetLib/Obj/ObjFileParser.cpp:97:5
    #4 0x97c025 in Assimp::ObjFileImporter::InternReadFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, aiScene*, Assimp::IOSystem*) /src/assimp/code/AssetLib/Obj/ObjFileImporter.cpp:141:19
    #5 0x1252bf8 in Assimp::BaseImporter::ReadFile(Assimp::Importer*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Assimp::IOSystem*) /src/assimp/code/Common/BaseImporter.cpp:127:9
    #6 0x5a205d in Assimp::Importer::ReadFile(char const*, unsigned int) /src/assimp/code/Common/Importer.cpp:665:30
    #7 0x5a0fc0 in Assimp::Importer::ReadFileFromMemory(void const*, unsigned long, unsigned int, char const*) /src/assimp/code/Common/Importer.cpp:502:5
    #8 0x559f8f in LLVMFuzzerTestOneInput /src/assimp/fuzz/assimp_fuzzer.cc:53:34
    #9 0x45f241 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:559:15
    #10 0x44a9e2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:301:6
    #11 0x45097d in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:801:9
    #12 0x478262 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #13 0x7c27e4ea783f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: operator delete(void*)--std::__1::__wrap_iter<char*> Assimp::getNameNoSpace<std::__1::__wrap_iter<char*> >(std::__1::__wrap_iter<char*>, std::__1::__wrap_iter<char*>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)--Assimp::ObjFileParser::parseFile(Assimp::IOStreamBuffer<char>&)
previously allocated by thread T0 here:
    #0 0x55754d in operator new(unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:99:3
    #1 0x577310 in std::__1::__libcpp_allocate(unsigned long, unsigned long) /usr/local/bin/../include/c++/v1/new:253:10
    #2 0x5786e8 in std::__1::allocator<char>::allocate(unsigned long) /usr/local/bin/../include/c++/v1/memory:1789:34
    #3 0x578370 in std::__1::allocator_traits<std::__1::allocator<char> >::allocate(std::__1::allocator<char>&, unsigned long) /usr/local/bin/../include/c++/v1/memory:1525:21
    #4 0x59bdef in std::__1::_MetaBase<__is_cpp17_forward_iterator<char*>::value>::_EnableIfImpl<void> std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init<char*>(char*, char*) /usr/local/bin/../include/c++/v1/string:2127:15
    #5 0x98ca9c in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<char*, void>(char*, char*) /usr/local/bin/../include/c++/v1/string:2143:5
    #6 0x988b1b in std::__1::__wrap_iter<char*> Assimp::getNameNoSpace<std::__1::__wrap_iter<char*> >(std::__1::__wrap_iter<char*>, std::__1::__wrap_iter<char*>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&) /src/assimp/code/AssetLib/Obj/ObjTools.h:190:17
    #7 0x98544f in Assimp::ObjFileParser::parseFile(Assimp::IOStreamBuffer<char>&) /src/assimp/code/AssetLib/Obj/ObjFileParser.cpp:179:13
    #8 0x984545 in Assimp::ObjFileParser::ObjFileParser(Assimp::IOStreamBuffer<char>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Assimp::IOSystem*, Assimp::ProgressHandler*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /src/assimp/code/AssetLib/Obj/ObjFileParser.cpp:97:5
    #9 0x97c025 in Assimp::ObjFileImporter::InternReadFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, aiScene*, Assimp::IOSystem*) /src/assimp/code/AssetLib/Obj/ObjFileImporter.cpp:141:19
    #10 0x1252bf8 in Assimp::BaseImporter::ReadFile(Assimp::Importer*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Assimp::IOSystem*) /src/assimp/code/Common/BaseImporter.cpp:127:9
    #11 0x5a205d in Assimp::Importer::ReadFile(char const*, unsigned int) /src/assimp/code/Common/Importer.cpp:665:30
    #12 0x5a0fc0 in Assimp::Importer::ReadFileFromMemory(void const*, unsigned long, unsigned int, char const*) /src/assimp/code/Common/Importer.cpp:502:5
    #13 0x559f8f in LLVMFuzzerTestOneInput /src/assimp/fuzz/assimp_fuzzer.cc:53:34
    #14 0x45f241 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:559:15
    #15 0x44a9e2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:301:6
    #16 0x45097d in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:801:9
    #17 0x478262 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0x7c27e4ea783f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: operator new(unsigned long)--std::__1::__libcpp_allocate(unsigned long, unsigned long)--std::__1::allocator<char>::allocate(unsigned long)
SUMMARY: AddressSanitizer: heap-use-after-free /src/assimp/code/AssetLib/Obj/ObjFileImporter.cpp:468:63 in Assimp::ObjFileImporter::createVertexArray(Assimp::ObjFile::Model const*, Assimp::ObjFile::Object const*, unsigned int, aiMesh*, unsigned int)
Shadow bytes around the buggy address:
  0x0c067fff80c0: fa fa 00 00 00 00 fa fa 00 00 00 fa fa fa 00 00
  0x0c067fff80d0: 00 fa fa fa fd fd fd fd fa fa fd fd fd fd fa fa
  0x0c067fff80e0: fd fd fd fd fa fa fd fd fd fa fa fa fd fd fd fa
  0x0c067fff80f0: fa fa fd fd fd fa fa fa fd fd fd fd fa fa fd fd
  0x0c067fff8100: fd fd fa fa fd fd fd fd fa fa 00 00 00 fa fa fa
=>0x0c067fff8110:[fd]fd fd fd fa fa 00 00 00 fa fa fa fd fd fd fd
  0x0c067fff8120: fa fa fd fd fd fd fa fa 00 00 00 fa fa fa 00 00
  0x0c067fff8130: 00 fa fa fa 00 00 00 fa fa fa ac 00 00 fa fa fa
  0x0c067fff8140: 00 00 00 fa fa fa 00 00 00 00 fa fa fa fa fa fa
  0x0c067fff8150: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8160: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
