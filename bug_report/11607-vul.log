INFO: Seed: 2281224826
INFO: Loaded 1 modules   (203307 inline 8-bit counters): 203307 [0x3209c08, 0x323b633), 
INFO: Loaded 1 PC tables (203307 PCs): 203307 [0x323b638,0x35558e8), 
/out/api_mock_gpu_canvas: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-use-after-free on address 0x6080000000e8 at pc 0x000000b9f1ac bp 0x7fff77b40e50 sp 0x7fff77b40e48
READ of size 2 at 0x6080000000e8 thread T0
SCARINESS: 42 (2-byte-read-heap-use-after-free)
    #0 0xb9f1ab in SkGlyphRun::eachGlyphToGlyphRun(std::__1::function<void (SkGlyphRun const&)>) /src/skia/out/Fuzz_mem_constraints/../../src/core/SkGlyphRun.cpp:64:19
    #1 0xb78933 in SkBaseDevice::drawGlyphRunRSXform(SkGlyphRun*, SkRSXform const*) /src/skia/out/Fuzz_mem_constraints/../../src/core/SkDevice.cpp:363:10
    #2 0xb4c00a in SkCanvas::onDrawTextRSXform(void const*, unsigned long, SkRSXform const*, SkRect const*, SkPaint const&) /src/skia/out/Fuzz_mem_constraints/../../src/core/SkCanvas.cpp:2522:27
    #3 0xb4d562 in SkCanvas::drawTextRSXform(void const*, unsigned long, SkRSXform const*, SkRect const*, SkPaint const&) /src/skia/out/Fuzz_mem_constraints/../../src/core/SkCanvas.cpp:2599:15
    #4 0x9c1d68 in fuzz_canvas(Fuzz*, SkCanvas*, int) /src/skia/out/Fuzz_mem_constraints/../../fuzz/FuzzCanvas.cpp:1557:25
    #5 0x9c830f in fuzz_ganesh(Fuzz*, GrContext*) /src/skia/out/Fuzz_mem_constraints/../../fuzz/FuzzCanvas.cpp:1756:5
    #6 0x9c8639 in fuzz_MockGPUCanvas(Fuzz*) /src/skia/out/Fuzz_mem_constraints/../../fuzz/FuzzCanvas.cpp:1780:5
    #7 0x9dfaf6 in LLVMFuzzerTestOneInput /src/skia/out/Fuzz_mem_constraints/../../fuzz/oss_fuzz/FuzzMockGPUCanvas.cpp:22:9
    #8 0x961455 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:571:15
    #9 0x936c7d in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:280:6
    #10 0x9424c6 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:713:9
    #11 0x9362fc in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #12 0x70be0961383f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #13 0x82f668 in _start (/out/api_mock_gpu_canvas+0x82f668)

DEDUP_TOKEN: SkGlyphRun::eachGlyphToGlyphRun(std::__1::function<void (SkGlyphRun const&)>)--SkBaseDevice::drawGlyphRunRSXform(SkGlyphRun*, SkRSXform const*)--SkCanvas::onDrawTextRSXform(void const*, unsigned long, SkRSXform const*, SkRect const*, SkPaint const&)
0x6080000000e8 is located 72 bytes inside of 88-byte region [0x6080000000a0,0x6080000000f8)
freed by thread T0 here:
    #0 0x8fc9f0 in __interceptor_free /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:124
    #1 0x9bfdd9 in fuzz_canvas(Fuzz*, SkCanvas*, int) /src/skia/out/Fuzz_mem_constraints/../../fuzz/FuzzCanvas.cpp:1569:13
    #2 0x9c830f in fuzz_ganesh(Fuzz*, GrContext*) /src/skia/out/Fuzz_mem_constraints/../../fuzz/FuzzCanvas.cpp:1756:5
    #3 0x9c8639 in fuzz_MockGPUCanvas(Fuzz*) /src/skia/out/Fuzz_mem_constraints/../../fuzz/FuzzCanvas.cpp:1780:5
    #4 0x9dfaf6 in LLVMFuzzerTestOneInput /src/skia/out/Fuzz_mem_constraints/../../fuzz/oss_fuzz/FuzzMockGPUCanvas.cpp:22:9
    #5 0x961455 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:571:15
    #6 0x936c7d in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:280:6
    #7 0x9424c6 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:713:9
    #8 0x9362fc in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #9 0x70be0961383f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: __interceptor_free--fuzz_canvas(Fuzz*, SkCanvas*, int)--fuzz_ganesh(Fuzz*, GrContext*)
previously allocated by thread T0 here:
    #0 0x8fd22e in realloc /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:165
    #1 0xe56408 in sk_realloc_throw(void*, unsigned long) /src/skia/out/Fuzz_mem_constraints/../../src/ports/SkMemory_malloc.cpp:57:35
    #2 0xd2e2fd in SkAutoTMalloc<unsigned char>::realloc(unsigned long) /src/skia/out/Fuzz_mem_constraints/../../include/android/../private/SkTemplates.h:234:32
    #3 0xd2e1de in SkTextBlobBuilder::reserve(unsigned long) /src/skia/out/Fuzz_mem_constraints/../../src/core/SkTextBlob.cpp:414:14
    #4 0xd2eb1c in SkTextBlobBuilder::allocInternal(SkPaint const&, SkTextBlob::GlyphPositioning, int, int, SkPoint, SkRect const*) /src/skia/out/Fuzz_mem_constraints/../../src/core/SkTextBlob.cpp:496:15
    #5 0xd2f6d8 in SkTextBlobBuilder::allocRunTextPos(SkPaint const&, int, int, SkString, SkRect const*) /src/skia/out/Fuzz_mem_constraints/../../src/core/SkTextBlob.cpp:583:11
    #6 0xd2f5cf in SkTextBlobBuilder::allocRunPos(SkFont const&, int, SkRect const*) /src/skia/out/Fuzz_mem_constraints/../../src/core/SkTextBlob.cpp:554:18
    #7 0x9cccc1 in make_fuzz_textblob(Fuzz*) /src/skia/out/Fuzz_mem_constraints/../../fuzz/FuzzCanvas.cpp:1013:43
    #8 0x9bfd31 in fuzz_canvas(Fuzz*, SkCanvas*, int) /src/skia/out/Fuzz_mem_constraints/../../fuzz/FuzzCanvas.cpp:1563:42
    #9 0x9c830f in fuzz_ganesh(Fuzz*, GrContext*) /src/skia/out/Fuzz_mem_constraints/../../fuzz/FuzzCanvas.cpp:1756:5
    #10 0x9c8639 in fuzz_MockGPUCanvas(Fuzz*) /src/skia/out/Fuzz_mem_constraints/../../fuzz/FuzzCanvas.cpp:1780:5
    #11 0x9dfaf6 in LLVMFuzzerTestOneInput /src/skia/out/Fuzz_mem_constraints/../../fuzz/oss_fuzz/FuzzMockGPUCanvas.cpp:22:9
    #12 0x961455 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:571:15
    #13 0x936c7d in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:280:6
    #14 0x9424c6 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:713:9
    #15 0x9362fc in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #16 0x70be0961383f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: realloc--sk_realloc_throw(void*, unsigned long)--SkAutoTMalloc<unsigned char>::realloc(unsigned long)
SUMMARY: AddressSanitizer: heap-use-after-free /src/skia/out/Fuzz_mem_constraints/../../src/core/SkGlyphRun.cpp:64:19 in SkGlyphRun::eachGlyphToGlyphRun(std::__1::function<void (SkGlyphRun const&)>)
Shadow bytes around the buggy address:
  0x0c107fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c107fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c107fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c107fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c107fff8000: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
=>0x0c107fff8010: fa fa fa fa fd fd fd fd fd fd fd fd fd[fd]fd fa
  0x0c107fff8020: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa
  0x0c107fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c107fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c107fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c107fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
