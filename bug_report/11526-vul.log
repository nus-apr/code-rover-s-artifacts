INFO: Seed: 2203508147
INFO: Loaded 1 modules   (19229 inline 8-bit counters): 19229 [0xb112e8, 0xb15e05), 
INFO: Loaded 1 PC tables (19229 PCs): 19229 [0x81be60,0x867030), 
/out/hb-shape-fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x611000000275 at pc 0x0000005cc61c bp 0x7fffe8a5a8d0 sp 0x7fffe8a5a8c8
READ of size 1 at 0x611000000275 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x5cc61b in BEInt<unsigned short, 2>::operator unsigned short() const /src/harfbuzz/src/./hb-machinery.hh:705:13
    #1 0x65eed4 in OT::KernSubTable<OT::KernOTSubTableHeader>::get_size() const /src/harfbuzz/src/./hb-ot-kern-table.hh:112:54
    #2 0x65fb99 in void hb_sanitize_context_t::set_object<OT::KernSubTable<OT::KernOTSubTableHeader> >(OT::KernSubTable<OT::KernOTSubTableHeader> const&) /src/harfbuzz/src/./hb-machinery.hh:268:53
    #3 0x686923 in AAT::KerxTable<OT::KernOT>::sanitize(hb_sanitize_context_t*) const /src/harfbuzz/src/./hb-aat-layout-kerx-table.hh:983:5
    #4 0x6866a1 in hb_sanitize_context_t::return_t OT::kern::dispatch<hb_sanitize_context_t>(hb_sanitize_context_t*) const /src/harfbuzz/src/./hb-ot-kern-table.hh:313:13
    #5 0x686550 in OT::kern::sanitize(hb_sanitize_context_t*) const /src/harfbuzz/src/./hb-ot-kern-table.hh:323:5
    #6 0x686179 in hb_blob_t* hb_sanitize_context_t::sanitize_blob<OT::kern>(hb_blob_t*) /src/harfbuzz/src/./hb-machinery.hh:417:15
    #7 0x685fa2 in hb_table_lazy_loader_t<OT::kern, 6u>::create(hb_face_t*) /src/harfbuzz/src/./hb-machinery.hh:902:37
    #8 0x685d8b in hb_lazy_loader_t<OT::kern, hb_table_lazy_loader_t<OT::kern, 6u>, hb_face_t, 6u, hb_blob_t>::get_stored() const /src/harfbuzz/src/./hb-machinery.hh:830:26
    #9 0x685cf0 in hb_lazy_loader_t<OT::kern, hb_table_lazy_loader_t<OT::kern, 6u>, hb_face_t, 6u, hb_blob_t>::get() const /src/harfbuzz/src/./hb-machinery.hh:853:69
    #10 0x655be4 in hb_ot_layout_has_kerning(hb_face_t*) /src/harfbuzz/src/hb-ot-layout.cc:65:10
    #11 0x6d75b9 in hb_ot_shape_planner_t::compile(hb_ot_shape_plan_t&, hb_ot_shape_plan_key_t const&) /src/harfbuzz/src/hb-ot-shape.cc:145:14
    #12 0x6d8081 in hb_ot_shape_plan_t::init0(hb_face_t*, hb_shape_plan_key_t const*) /src/harfbuzz/src/hb-ot-shape.cc:179:11
    #13 0x5fb5f7 in hb_shape_plan_create2 /src/harfbuzz/src/hb-shape-plan.cc:227:7
    #14 0x5fc895 in hb_shape_plan_create_cached2 /src/harfbuzz/src/hb-shape-plan.cc:479:33
    #15 0x5faa5d in hb_shape_full /src/harfbuzz/src/hb-shape.cc:139:33
    #16 0x530904 in LLVMFuzzerTestOneInput /src/harfbuzz/./test/fuzzing/hb-shape-fuzzer.cc:24:5
    #17 0x55c1a5 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:571:15
    #18 0x5319cd in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:280:6
    #19 0x53d216 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:713:9
    #20 0x53104c in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #21 0x7719fbf1b83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #22 0x41cf18 in _start (/out/hb-shape-fuzzer+0x41cf18)

DEDUP_TOKEN: BEInt<unsigned short, 2>::operator unsigned short() const--OT::KernSubTable<OT::KernOTSubTableHeader>::get_size() const--void hb_sanitize_context_t::set_object<OT::KernSubTable<OT::KernOTSubTableHeader> >(OT::KernSubTable<OT::KernOTSubTableHeader> const&)
0x611000000275 is located 2 bytes to the right of 243-byte region [0x611000000180,0x611000000273)
allocated by thread T0 here:
    #0 0x52c478 in operator new[](unsigned long) /src/llvm/projects/compiler-rt/lib/asan/asan_new_delete.cc:109
    #1 0x55bf57 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:558:23
    #2 0x5319cd in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:280:6
    #3 0x53d216 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:713:9
    #4 0x53104c in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #5 0x7719fbf1b83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: operator new[](unsigned long)--fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/harfbuzz/src/./hb-machinery.hh:705:13 in BEInt<unsigned short, 2>::operator unsigned short() const
Shadow bytes around the buggy address:
  0x0c227fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c227fff8000: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c227fff8010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c227fff8020: 00 00 00 00 00 00 03 fa fa fa fa fa fa fa fa fa
  0x0c227fff8030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c227fff8040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00[03]fa
  0x0c227fff8050: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c227fff8060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c227fff8070: 00 00 00 00 fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c227fff8080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c227fff8090: 00 00 00 00 00 00 00 00 00 00 00 fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
