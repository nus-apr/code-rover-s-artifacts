oss-fuzzshark: disabling: ip
oss-fuzzshark: disabling: udp
oss-fuzzshark: disabling: udplite
oss-fuzzshark: disabling: ospf
oss-fuzzshark: disabling: bgp
oss-fuzzshark: disabling: bootp
oss-fuzzshark: disabling: json
oss-fuzzshark: disabling: snort
oss-fuzzshark: configured for dissector: dns in table: udp.port
INFO: Seed: 2241769049
INFO: Loaded 1 modules   (315226 inline 8-bit counters): 315226 [0xc9a9ac8, 0xc9f6a22), 
INFO: Loaded 1 PC tables (315226 PCs): 315226 [0xc9f6a28,0xcec5fc8), 
/out/fuzzshark_udp_port-dns: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==12==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020003c0400 at pc 0x000000d3811b bp 0x7fff39eac870 sp 0x7fff39eac868
READ of size 8 at 0x6020003c0400 thread T0
SCARINESS: 23 (8-byte-read-heap-buffer-overflow)
    #0 0xd3811a in add_rr_to_tree /src/wireshark/epan/dissectors/packet-dns.c:1519:11
    #1 0xd3811a in dissect_dns_answer /src/wireshark/epan/dissectors/packet-dns.c:1839
    #2 0xd2ee6e in dissect_answer_records /src/wireshark/epan/dissectors/packet-dns.c:3651:15
    #3 0xd2ee6e in dissect_dns_common /src/wireshark/epan/dissectors/packet-dns.c:3923
    #4 0xd2d070 in dissect_dns_udp_sctp /src/wireshark/epan/dissectors/packet-dns.c:4039:3
    #5 0xd2d070 in dissect_dns /src/wireshark/epan/dissectors/packet-dns.c:4103
    #6 0x5de473 in call_dissector_through_handle /src/wireshark/epan/packet.c:692:9
    #7 0x5de473 in call_dissector_work /src/wireshark/epan/packet.c:777
    #8 0x5e63d1 in call_dissector_only /src/wireshark/epan/packet.c:3090:8
    #9 0x5e63d1 in call_all_postdissectors /src/wireshark/epan/packet.c:3465
    #10 0xe7d0fb in dissect_frame /src/wireshark/epan/dissectors/packet-frame.c:681:5
    #11 0x5de473 in call_dissector_through_handle /src/wireshark/epan/packet.c:692:9
    #12 0x5de473 in call_dissector_work /src/wireshark/epan/packet.c:777
    #13 0x5db44e in call_dissector_only /src/wireshark/epan/packet.c:3090:8
    #14 0x5db44e in call_dissector_with_data /src/wireshark/epan/packet.c:3103
    #15 0x5dac0b in dissect_record /src/wireshark/epan/packet.c:566:3
    #16 0x5cf313 in epan_dissect_run /src/wireshark/epan/epan.c:529:2
    #17 0x529e7c in LLVMFuzzerTestOneInput /src/wireshark/tools/oss-fuzzshark/fuzzshark.c:359:2
    #18 0x5545b1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:517:13
    #19 0x52b65a in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:280:6
    #20 0x53700b in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:703:9
    #21 0x52acfc in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #22 0x7684fff0f83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #23 0x41ee78 in _start (/out/fuzzshark_udp_port-dns+0x41ee78)

DEDUP_TOKEN: add_rr_to_tree--dissect_dns_answer--dissect_answer_records
0x6020003c0400 is located 0 bytes to the right of 16-byte region [0x6020003c03f0,0x6020003c0400)
allocated by thread T0 here:
    #0 0x4eb7f8 in __interceptor_malloc /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:88
    #1 0x2543a08 in g_malloc (/out/fuzzshark_udp_port-dns+0x2543a08)
    #2 0x849075 in wmem_strsplit /src/wireshark/epan/wmem/wmem_strutl.c:290:11
    #3 0xd30f70 in add_rr_to_tree /src/wireshark/epan/dissectors/packet-dns.c:1508:19
    #4 0xd30f70 in dissect_dns_answer /src/wireshark/epan/dissectors/packet-dns.c:1839
    #5 0xd2ee6e in dissect_answer_records /src/wireshark/epan/dissectors/packet-dns.c:3651:15
    #6 0xd2ee6e in dissect_dns_common /src/wireshark/epan/dissectors/packet-dns.c:3923
    #7 0xd2d070 in dissect_dns_udp_sctp /src/wireshark/epan/dissectors/packet-dns.c:4039:3
    #8 0xd2d070 in dissect_dns /src/wireshark/epan/dissectors/packet-dns.c:4103
    #9 0x5de473 in call_dissector_through_handle /src/wireshark/epan/packet.c:692:9
    #10 0x5de473 in call_dissector_work /src/wireshark/epan/packet.c:777
    #11 0x5e63d1 in call_dissector_only /src/wireshark/epan/packet.c:3090:8
    #12 0x5e63d1 in call_all_postdissectors /src/wireshark/epan/packet.c:3465
    #13 0xe7d0fb in dissect_frame /src/wireshark/epan/dissectors/packet-frame.c:681:5
    #14 0x5de473 in call_dissector_through_handle /src/wireshark/epan/packet.c:692:9
    #15 0x5de473 in call_dissector_work /src/wireshark/epan/packet.c:777
    #16 0x5db44e in call_dissector_only /src/wireshark/epan/packet.c:3090:8
    #17 0x5db44e in call_dissector_with_data /src/wireshark/epan/packet.c:3103
    #18 0x5dac0b in dissect_record /src/wireshark/epan/packet.c:566:3
    #19 0x5cf313 in epan_dissect_run /src/wireshark/epan/epan.c:529:2
    #20 0x529e7c in LLVMFuzzerTestOneInput /src/wireshark/tools/oss-fuzzshark/fuzzshark.c:359:2
    #21 0x5545b1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:517:13
    #22 0x52b65a in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:280:6
    #23 0x53700b in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:703:9
    #24 0x52acfc in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #25 0x7684fff0f83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: __interceptor_malloc--g_malloc--wmem_strsplit
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/wireshark/epan/dissectors/packet-dns.c:1519:11 in add_rr_to_tree
Shadow bytes around the buggy address:
  0x0c0480070030: fa fa 00 04 fa fa 00 03 fa fa 04 fa fa fa 00 fa
  0x0c0480070040: fa fa 00 02 fa fa 00 05 fa fa 00 05 fa fa 00 05
  0x0c0480070050: fa fa 00 00 fa fa 00 00 fa fa 00 fa fa fa 00 fa
  0x0c0480070060: fa fa 00 fa fa fa 00 00 fa fa 06 fa fa fa fd fd
  0x0c0480070070: fa fa 00 00 fa fa 00 fa fa fa 01 fa fa fa 00 00
=>0x0c0480070080:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0480070090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c04800700a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c04800700b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c04800700c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c04800700d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==12==ABORTING
