Running LLVMFuzzerInitialize ...
continue...
=================================================================
==13==ERROR: AddressSanitizer: global-buffer-overflow on address 0x00000082f03f at pc 0x0000005e3b2f bp 0x7ffcdd342cc0 sp 0x7ffcdd342cb8
READ of size 1 at 0x00000082f03f thread T0
SCARINESS: 12 (1-byte-read-global-buffer-overflow)
    #0 0x5e3b2e in xmlSkipBlankChars /src/libxml2/parser.c:2122:9
    #1 0x644e1b in xmlParseMisc /src/libxml2/parser.c:10758:9
    #2 0x646a08 in xmlParseDocument /src/libxml2/parser.c:10924:2
    #3 0x65194f in xmlDoRead /src/libxml2/parser.c:14975:5
    #4 0x651c94 in xmlReadMemory /src/libxml2/parser.c:15061:13
    #5 0x4df141 in xsltFuzzXslt /src/libxslt/tests/fuzz/fuzz.c:284:11
    #6 0x4dcfe6 in LLVMFuzzerTestOneInput /src/libxslt/tests/fuzz/xslt.c:18:23
    #7 0x4e11ca in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:234:7
    #8 0x4e0f9c in main /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:318:12
    #9 0x773f6f4e9082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #10 0x41e72d in _start (/out/xslt+0x41e72d)

DEDUP_TOKEN: xmlSkipBlankChars--xmlParseMisc--xmlParseDocument
0x00000082f03f is located 33 bytes to the left of global variable '<string literal>' defined in 'parserInternals.c:332:30' (0x82f060) of size 18
  '<string literal>' is ascii string 'Huge input lookup'
0x00000082f03f is located 1 bytes to the left of global variable '<string literal>' defined in 'parserInternals.c:289:29' (0x82f040) of size 1
  '<string literal>' is ascii string ''
0x00000082f03f is located 37 bytes to the right of global variable '<string literal>' defined in 'parserInternals.c:118:43' (0x82f000) of size 26
  '<string literal>' is ascii string 'Memory allocation failed
'
SUMMARY: AddressSanitizer: global-buffer-overflow /src/libxml2/parser.c:2122:9 in xmlSkipBlankChars
Shadow bytes around the buggy address:
  0x0000800fddb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0000800fddc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0000800fddd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0000800fdde0: 00 00 00 00 00 00 00 03 f9 f9 f9 f9 00 00 00 00
  0x0000800fddf0: 00 00 00 04 f9 f9 f9 f9 00 00 00 07 f9 f9 f9 f9
=>0x0000800fde00: 00 00 00 02 f9 f9 f9[f9]01 f9 f9 f9 00 00 02 f9
  0x0000800fde10: f9 f9 f9 f9 00 00 05 f9 f9 f9 f9 f9 00 00 00 00
  0x0000800fde20: f9 f9 f9 f9 00 00 00 00 f9 f9 f9 f9 00 00 00 00
  0x0000800fde30: 00 00 f9 f9 f9 f9 f9 f9 00 00 00 00 04 f9 f9 f9
  0x0000800fde40: f9 f9 f9 f9 00 00 00 00 00 00 02 f9 f9 f9 f9 f9
  0x0000800fde50: 00 00 00 07 f9 f9 f9 f9 00 00 00 00 00 00 00 f9
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
