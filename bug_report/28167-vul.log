INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2248057767
INFO: Loaded 1 modules   (17943 inline 8-bit counters): 17943 [0xa78268, 0xa7c87f), 
INFO: Loaded 1 PC tables (17943 PCs): 17943 [0xa7c880,0xac29f0), 
/out/FuzzPNGLoader: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==12==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x604000000140 at pc 0x0000006a0c4e bp 0x7ffe148f4620 sp 0x7ffe148f4618
READ of size 1 at 0x604000000140 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x6a0c4d in decode(state*, huffman const*) /src/serenity/Libraries/LibCore/puff.cpp:300:18
    #1 0x6a045b in codes(state*, huffman const*, huffman const*) /src/serenity/Libraries/LibCore/puff.cpp:460:18
    #2 0x69f30b in fixed(state*) /src/serenity/Libraries/LibCore/puff.cpp:575:12
    #3 0x69e5ad in puff /src/serenity/Libraries/LibCore/puff.cpp:825:25
    #4 0x5efaf6 in Gfx::decode_png_bitmap(Gfx::PNGLoadingContext&) /src/serenity/Libraries/LibGfx/PNGLoader.cpp:758:15
    #5 0x5ee322 in Gfx::load_png_impl(unsigned char const*, unsigned long) /src/serenity/Libraries/LibGfx/PNGLoader.cpp:808:10
    #6 0x5ee529 in Gfx::load_png_from_memory(unsigned char const*, unsigned long) /src/serenity/Libraries/LibGfx/PNGLoader.cpp:198:19
    #7 0x5aaf78 in LLVMFuzzerTestOneInput /src/serenity/Meta/Lagom/build/../Fuzzers/FuzzPNGLoader.cpp:33:5
    #8 0x4afb91 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #9 0x499922 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #10 0x49fc65 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #11 0x4c9b12 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #12 0x7025df2a183f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #13 0x474838 in _start (/out/FuzzPNGLoader+0x474838)

DEDUP_TOKEN: decode(state*, huffman const*)--codes(state*, huffman const*, huffman const*)--fixed(state*)
0x604000000140 is located 0 bytes to the right of 48-byte region [0x604000000110,0x604000000140)
allocated by thread T0 here:
    #0 0x57823d in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x5c4649 in AK::Vector<unsigned char, 0ul>::ensure_capacity(unsigned long) /src/serenity/Meta/Lagom/build/../../../AK/Vector.h:481:32
    #2 0x5f0559 in Gfx::decode_png_chunks(Gfx::PNGLoadingContext&) /src/serenity/Libraries/LibGfx/PNGLoader.cpp:576:29
    #3 0x5ee30f in Gfx::load_png_impl(unsigned char const*, unsigned long) /src/serenity/Libraries/LibGfx/PNGLoader.cpp:805:10
    #4 0x5ee529 in Gfx::load_png_from_memory(unsigned char const*, unsigned long) /src/serenity/Libraries/LibGfx/PNGLoader.cpp:198:19
    #5 0x5aaf78 in LLVMFuzzerTestOneInput /src/serenity/Meta/Lagom/build/../Fuzzers/FuzzPNGLoader.cpp:33:5
    #6 0x4afb91 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #7 0x499922 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #8 0x49fc65 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #9 0x4c9b12 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #10 0x7025df2a183f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--AK::Vector<unsigned char, 0ul>::ensure_capacity(unsigned long)--Gfx::decode_png_chunks(Gfx::PNGLoadingContext&)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/serenity/Libraries/LibCore/puff.cpp:300:18 in decode(state*, huffman const*)
Shadow bytes around the buggy address:
  0x0c087fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c087fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c087fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c087fff8000: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00
  0x0c087fff8010: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00
=>0x0c087fff8020: fa fa 00 00 00 00 00 00[fa]fa fa fa fa fa fa fa
  0x0c087fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12==ABORTING
