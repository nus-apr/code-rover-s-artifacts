INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2299192876
INFO: Loaded 1 modules   (555227 inline 8-bit counters): 555227 [0x4943aa0, 0x49cb37b), 
INFO: Loaded 1 PC tables (555227 PCs): 555227 [0x3e404c8,0x46b9278), 
/out/llvmfuzz: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000000df at pc 0x00000050e6c5 bp 0x7fff9ccdcbf0 sp 0x7fff9ccdc3b0
WRITE of size 16 at 0x6020000000df thread T0
SCARINESS: 45 (multi-byte-write-heap-buffer-overflow)
    #0 0x50e6c4 in __interceptor_strcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors.cpp:425:5
    #1 0x117e983 in strcpy /usr/include/x86_64-linux-gnu/bits/string_fortified.h:90:10
    #2 0x117e983 in dynapi_set_helper /src/libredwg/src/gen-dynapi.pl:3112:11
    #3 0x117f155 in dwg_dynapi_header_set_value /src/libredwg/src/gen-dynapi.pl:3267:9
    #4 0x3a06be3 in json_HEADER /src/libredwg/src/in_json.c:1087:11
    #5 0x3a008a8 in dwg_read_json /src/libredwg/src/in_json.c:4405:18
    #6 0x55ac3d in LLVMFuzzerTestOneInput /src/libredwg/examples/llvmfuzz.c:101:13
    #7 0x4552b3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #8 0x440f42 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #9 0x44678c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #10 0x46f382 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #11 0x70b866b55082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)
    #12 0x41f76d in _start (/out/llvmfuzz+0x41f76d)

DEDUP_TOKEN: __interceptor_strcpy--strcpy--dynapi_set_helper
0x6020000000df is located 0 bytes to the right of 15-byte region [0x6020000000d0,0x6020000000df)
allocated by thread T0 here:
    #0 0x523d22 in __interceptor_calloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:138:3
    #1 0x117e974 in dynapi_set_helper /src/libredwg/src/gen-dynapi.pl:3111:31
    #2 0x117f155 in dwg_dynapi_header_set_value /src/libredwg/src/gen-dynapi.pl:3267:9
    #3 0x3a06be3 in json_HEADER /src/libredwg/src/in_json.c:1087:11
    #4 0x3a008a8 in dwg_read_json /src/libredwg/src/in_json.c:4405:18
    #5 0x55ac3d in LLVMFuzzerTestOneInput /src/libredwg/examples/llvmfuzz.c:101:13
    #6 0x4552b3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #7 0x440f42 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #8 0x44678c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #9 0x46f382 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #10 0x70b866b55082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)

DEDUP_TOKEN: __interceptor_calloc--dynapi_set_helper--dwg_dynapi_header_set_value
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/llvm-project/compiler-rt/lib/asan/asan_interceptors.cpp:425:5 in __interceptor_strcpy
Shadow bytes around the buggy address:
  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff8000: fa fa 00 00 fa fa 00 fa fa fa 00 fa fa fa 00 fa
=>0x0c047fff8010: fa fa 00 00 fa fa 00 00 fa fa 00[07]fa fa fa fa
  0x0c047fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
