oss-fuzzshark: disabling: ip
oss-fuzzshark: disabling: udplite
oss-fuzzshark: disabling: ospf
oss-fuzzshark: disabling: bgp
oss-fuzzshark: disabling: dhcp
oss-fuzzshark: disabling: json
oss-fuzzshark: disabling: snort
oss-fuzzshark: configured for dissector: udp in table: ip.proto
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2331920510
INFO: Loaded 1 modules   (392230 inline 8-bit counters): 392230 [0xf71c520, 0xf77c146), 
INFO: Loaded 1 PC tables (392230 PCs): 392230 [0xf77c148,0xfd783a8), 
/out/fuzzshark_ip_proto-udp: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6140000009c6 at pc 0x00000087f4ae bp 0x7ffebde1d6f0 sp 0x7ffebde1d6e8
READ of size 1 at 0x6140000009c6 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x87f4ad in utf_8_validate /src/wireshark/epan/charsets.c:112:14
    #1 0x87f4ad in get_utf_8_string /src/wireshark/epan/charsets.c:267:23
    #2 0x1eb93d5 in parse_wbxml_attribute_list_defined /src/wireshark/epan/dissectors/packet-wbxml.c:7114:25
    #3 0x1eb3ef3 in parse_wbxml_tag_defined /src/wireshark/epan/dissectors/packet-wbxml.c:7584:13
    #4 0x1eb2517 in dissect_wbxml_common /src/wireshark/epan/dissectors/packet-wbxml.c:7892:2
    #5 0x1eb0e29 in dissect_wbxml /src/wireshark/epan/dissectors/packet-wbxml.c:7900:2
    #6 0x710ba0 in call_dissector_through_handle /src/wireshark/epan/packet.c:822:9
    #7 0x710ba0 in call_dissector_work /src/wireshark/epan/packet.c:920:9
    #8 0x71267a in dissector_try_string_new /src/wireshark/epan/packet.c:1843:9
    #9 0x71276d in dissector_try_string /src/wireshark/epan/packet.c:1868:9
    #10 0x1f2b109 in dissect_wsp_common /src/wireshark/epan/dissectors/packet-wsp.c:5007:35
    #11 0x1f16a4a in dissect_wsp_fromudp /src/wireshark/epan/dissectors/packet-wsp.c:5051:5
    #12 0x710ba0 in call_dissector_through_handle /src/wireshark/epan/packet.c:822:9
    #13 0x710ba0 in call_dissector_work /src/wireshark/epan/packet.c:920:9
    #14 0x71110f in dissector_try_uint_new /src/wireshark/epan/packet.c:1526:8
    #15 0x71110f in dissector_try_uint /src/wireshark/epan/packet.c:1550:9
    #16 0x1ddd61f in decode_udp_ports /src/wireshark/epan/dissectors/packet-udp.c:685:28
    #17 0x1de28e2 in dissect /src/wireshark/epan/dissectors/packet-udp.c:1251:9
    #18 0x1ddf6cc in dissect_udp /src/wireshark/epan/dissectors/packet-udp.c:1257:5
    #19 0x710ba0 in call_dissector_through_handle /src/wireshark/epan/packet.c:822:9
    #20 0x710ba0 in call_dissector_work /src/wireshark/epan/packet.c:920:9
    #21 0x71a87f in call_dissector_only /src/wireshark/epan/packet.c:3403:8
    #22 0x71a87f in call_all_postdissectors /src/wireshark/epan/packet.c:3776:3
    #23 0xfe1a37 in dissect_frame /src/wireshark/epan/dissectors/packet-frame.c:1196:5
    #24 0x710ba0 in call_dissector_through_handle /src/wireshark/epan/packet.c:822:9
    #25 0x710ba0 in call_dissector_work /src/wireshark/epan/packet.c:920:9
    #26 0x70d47a in call_dissector_only /src/wireshark/epan/packet.c:3403:8
    #27 0x70d47a in call_dissector_with_data /src/wireshark/epan/packet.c:3416:8
    #28 0x70cb50 in dissect_record /src/wireshark/epan/packet.c:626:3
    #29 0x6ff5f4 in epan_dissect_run /src/wireshark/epan/epan.c:624:2
    #30 0x56ee83 in LLVMFuzzerTestOneInput /src/wireshark/fuzz/fuzzshark.c:382:2
    #31 0x4406a3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #32 0x42be02 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #33 0x4316ac in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #34 0x45abe2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #35 0x7f3bcdef2082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #36 0x421fcd in _start (/out/fuzzshark_ip_proto-udp+0x421fcd)

DEDUP_TOKEN: utf_8_validate--get_utf_8_string--parse_wbxml_attribute_list_defined
0x6140000009c6 is located 0 bytes to the right of 390-byte region [0x614000000840,0x6140000009c6)
allocated by thread T0 here:
    #0 0x531836 in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x4b0237 in operator new(unsigned long) cxa_noexception.cpp
    #2 0x42be02 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #3 0x4316ac in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #4 0x45abe2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #5 0x7f3bcdef2082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)

DEDUP_TOKEN: malloc--operator new(unsigned long)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/wireshark/epan/charsets.c:112:14 in utf_8_validate
Shadow bytes around the buggy address:
  0x0c287fff80e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c287fff80f0: 00 00 00 00 00 00 00 00 06 fa fa fa fa fa fa fa
  0x0c287fff8100: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c287fff8110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c287fff8120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c287fff8130: 00 00 00 00 00 00 00 00[06]fa fa fa fa fa fa fa
  0x0c287fff8140: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c287fff8150: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c287fff8160: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c287fff8170: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c287fff8180: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
