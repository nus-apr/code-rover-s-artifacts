INFO: Seed: 2203358329
INFO: Loaded 1 modules   (185997 inline 8-bit counters): 185997 [0x36185b0, 0x3645c3d), 
INFO: Loaded 1 PC tables (185997 PCs): 185997 [0x2742038,0x2a18908), 
/out/fuzz_disassemble: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==12==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7e2050dcd922 at pc 0x0000005553d3 bp 0x7ffdfc883830 sp 0x7ffdfc883828
READ of size 1 at 0x7e2050dcd922 thread T0
SCARINESS: 27 (1-byte-read-stack-buffer-overflow)
    #0 0x5553d2 in objdump_sprintf /src/binutils-gdb/fuzz/fuzz_disassemble.c:49:24
    #1 0x5559e1 in generic_print_address /src/binutils-gdb/opcodes/dis-buf.c:87:3
    #2 0x65f39a in print_insn_normal /src/binutils-gdb/opcodes/iq2000-dis.c:310:7
    #3 0x660680 in print_insn /src/binutils-gdb/opcodes/iq2000-dis.c:439:8
    #4 0x65fd29 in default_print_insn /src/binutils-gdb/opcodes/iq2000-dis.c:483:10
    #5 0x65f945 in print_insn_iq2000 /src/binutils-gdb/opcodes/iq2000-dis.c:603:12
    #6 0x554e40 in LLVMFuzzerTestOneInput /src/binutils-gdb/fuzz/fuzz_disassemble.c:88:30
    #7 0x45a591 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:556:15
    #8 0x4450b1 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:292:6
    #9 0x44ad6e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:774:9
    #10 0x474c92 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:19:10
    #11 0x7e204fd5083f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #12 0x41e528 in _start (/out/fuzz_disassemble+0x41e528)

DEDUP_TOKEN: objdump_sprintf--generic_print_address--print_insn_normal
Address 0x7e2050dcd922 is located in stack of thread T0 at offset 290 in frame
    #0 0x55488f in LLVMFuzzerTestOneInput /src/binutils-gdb/fuzz/fuzz_disassemble.c:55

DEDUP_TOKEN: LLVMFuzzerTestOneInput
  This frame has 3 object(s):
    [32, 288) 'AssemblyText' (line 56) <== Memory access at offset 290 overflows this variable
    [352, 600) 'disasm_info' (line 57)
    [672, 688) 's' (line 58)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /src/binutils-gdb/fuzz/fuzz_disassemble.c:49:24 in objdump_sprintf
Shadow bytes around the buggy address:
  0x0fc48a1b1ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0fc48a1b1ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0fc48a1b1af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0fc48a1b1b00: f1 f1 f1 f1 00 00 00 00 00 00 00 00 00 00 00 00
  0x0fc48a1b1b10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0fc48a1b1b20: 00 00 00 00[f2]f2 f2 f2 f2 f2 f2 f2 00 00 00 00
  0x0fc48a1b1b30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0fc48a1b1b40: 00 00 00 00 00 00 00 00 00 00 00 f2 f2 f2 f2 f2
  0x0fc48a1b1b50: f2 f2 f2 f2 00 00 f3 f3 00 00 00 00 00 00 00 00
  0x0fc48a1b1b60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0fc48a1b1b70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12==ABORTING
