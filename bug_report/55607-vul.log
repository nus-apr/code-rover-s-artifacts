INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2186725480
INFO: Loaded 1 modules   (557818 inline 8-bit counters): 557818 [0x49004a0, 0x498879a), 
INFO: Loaded 1 PC tables (557818 PCs): 557818 [0x3def0a8,0x4672048), 
/out/llvmfuzz: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x612000002cd5 at pc 0x000001fb896a bp 0x7ffec4dd41f0 sp 0x7ffec4dd41e8
WRITE of size 1 at 0x612000002cd5 thread T0
SCARINESS: 31 (1-byte-write-heap-buffer-overflow)
    #0 0x1fb8969 in json_cquote /src/libredwg/src/out_json.c
    #1 0x2067769 in json_preR13_header_write_private /src/libredwg/src/./header_variables_r11.spec:145:3
    #2 0x1fbb51d in json_header_write /src/libredwg/src/out_json.c:1865:13
    #3 0x1fbb51d in dwg_write_json /src/libredwg/src/out_json.c:2389:3
    #4 0x56a5a1 in LLVMFuzzerTestOneInput /src/libredwg/examples/llvmfuzz.c:191:11
    #5 0x43deb3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #6 0x429612 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #7 0x42eebc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #8 0x4583f2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #9 0x7eab37e57082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #10 0x41f7dd in _start (/out/llvmfuzz+0x41f7dd)

DEDUP_TOKEN: json_cquote--json_preR13_header_write_private--json_header_write
0x612000002cd5 is located 0 bytes to the right of 277-byte region [0x612000002bc0,0x612000002cd5)
allocated by thread T0 here:
    #0 0x52f046 in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x2067751 in json_preR13_header_write_private /src/libredwg/src/./header_variables_r11.spec:145:3
    #2 0x1fbb51d in json_header_write /src/libredwg/src/out_json.c:1865:13
    #3 0x1fbb51d in dwg_write_json /src/libredwg/src/out_json.c:2389:3
    #4 0x56a5a1 in LLVMFuzzerTestOneInput /src/libredwg/examples/llvmfuzz.c:191:11
    #5 0x43deb3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #6 0x429612 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #7 0x42eebc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #8 0x4583f2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #9 0x7eab37e57082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)

DEDUP_TOKEN: malloc--json_preR13_header_write_private--json_header_write
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/libredwg/src/out_json.c in json_cquote
Shadow bytes around the buggy address:
  0x0c247fff8540: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd
  0x0c247fff8550: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c247fff8560: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c247fff8570: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c247fff8580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c247fff8590: 00 00 00 00 00 00 00 00 00 00[05]fa fa fa fa fa
  0x0c247fff85a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c247fff85b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c247fff85c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c247fff85d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c247fff85e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
