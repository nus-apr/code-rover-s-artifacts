======================= INFO =========================
This binary is built for AFL-fuzz.
To run the target function on individual input(s) execute this:
  /out/fuzz_process_packet < INPUT_FILE
or
  /out/fuzz_process_packet INPUT_FILE1 [INPUT_FILE2 ... ]
To fuzz with afl-fuzz execute this:
  afl-fuzz [afl-flags] /out/fuzz_process_packet [-N]
afl-fuzz will run N iterations before re-spawning the process (default: 1000)
======================================================
Reading 1280 bytes from /tmp/poc
AddressSanitizer:DEADLYSIGNAL
=================================================================
==13==ERROR: AddressSanitizer: SEGV on unknown address (pc 0x00000041f474 bp 0x000000000000 sp 0x7ffefadde4a0 T0)
==13==The signal is caused by a READ memory access.
==13==Hint: this fault was caused by a dereference of a high value address (see register values below).  Dissassemble the provided pc to learn which register was used.
SCARINESS: 20 (wild-addr-read)
    #0 0x41f474 in atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t> /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_atomic_clang.h:80:10
    #1 0x41f474 in AtomicallySetQuarantineFlagIfAllocated /src/llvm-project/compiler-rt/lib/asan/asan_allocator.cpp:570:10
    #2 0x41f474 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) /src/llvm-project/compiler-rt/lib/asan/asan_allocator.cpp:647:10
    #3 0x4998c1 in free /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:128:3
    #4 0x4ce392 in ndpi_free /src/ndpi/src/lib/ndpi_main.c:113:7
    #5 0x4ce650 in ndpi_free_flow /src/ndpi/src/lib/ndpi_main.c:6245:2
    #6 0x4cc4cd in LLVMFuzzerTestOneInput /src/ndpi/fuzz/fuzz_process_packet.c:25:3
    #7 0x4cc95e in ExecuteFilesOnyByOne /src/libfuzzer/afl/afl_driver.cpp:217:5
    #8 0x4cc95e in main /src/libfuzzer/afl/afl_driver.cpp:254:12
    #9 0x77abae1b883f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #10 0x41e5d8 in _start (/out/fuzz_process_packet+0x41e5d8)

DEDUP_TOKEN: atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>--AtomicallySetQuarantineFlagIfAllocated--__asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType)
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_atomic_clang.h:80:10 in atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>
==13==ABORTING
