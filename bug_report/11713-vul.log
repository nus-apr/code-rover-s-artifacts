INFO: Seed: 2203236893
INFO: Loaded 1 modules   (25362 inline 8-bit counters): 25362 [0xc3be08, 0xc4211a), 
INFO: Loaded 1 PC tables (25362 PCs): 25362 [0x8f5120,0x958240), 
/out/hb-subset-fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61300000037f at pc 0x0000004ea96d bp 0x7ffc72421d30 sp 0x7ffc724214e0
READ of size 62017 at 0x61300000037f thread T0
SCARINESS: 26 (multi-byte-read-heap-buffer-overflow)
    #0 0x4ea96c in __asan_memcpy /src/llvm/projects/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cc:23
    #1 0x63ed89 in CFF::CFF2VariationStore::serialize(hb_serialize_context_t*, CFF::CFF2VariationStore const*) /src/harfbuzz/src/./hb-ot-cff2-table.hh:127:5
    #2 0x632ea2 in _write_cff2(cff2_subset_plan const&, OT::cff2::accelerator_templ_t<CFF::CFF2PrivateDictOpSet_Subset, CFF::CFF2PrivateDictValues_Base<CFF::OpStr> > const&, hb_vector_t<unsigned int, 8u> const&, unsigned int, void*) /src/harfbuzz/src/hb-subset-cff2.cc:476:9
    #3 0x630d23 in _hb_subset_cff2(OT::cff2::accelerator_templ_t<CFF::CFF2PrivateDictOpSet_Subset, CFF::CFF2PrivateDictValues_Base<CFF::OpStr> > const&, char const*, hb_subset_plan_t*, hb_blob_t**) /src/harfbuzz/src/hb-subset-cff2.cc:579:7
    #4 0x62fb3c in hb_subset_cff2(hb_subset_plan_t*, hb_blob_t**) /src/harfbuzz/src/hb-subset-cff2.cc:610:3
    #5 0x5d606c in OT::cff2::subset(hb_subset_plan_t*) const /src/harfbuzz/src/./hb-ot-cff2-table.hh:550:9
    #6 0x5ba411 in bool _subset<OT::cff2 const>(hb_subset_plan_t*) /src/harfbuzz/src/hb-subset.cc:128:21
    #7 0x5b8a12 in hb_subset /src/harfbuzz/src/hb-subset.cc:282:28
    #8 0x530c7c in trySubset(hb_face_t*, unsigned int const*, int, bool, bool) /src/harfbuzz/./test/fuzzing/hb-subset-fuzzer.cc:26:23
    #9 0x530b45 in trySubset(hb_face_t*, unsigned int const*, int) /src/harfbuzz/./test/fuzzing/hb-subset-fuzzer.cc:41:7
    #10 0x5309af in LLVMFuzzerTestOneInput /src/harfbuzz/./test/fuzzing/hb-subset-fuzzer.cc:64:3
    #11 0x55bef5 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:571:15
    #12 0x53171d in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:280:6
    #13 0x53cf66 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:713:9
    #14 0x530d9c in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #15 0x718ee664a83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #16 0x41cfe8 in _start (/out/hb-subset-fuzzer+0x41cfe8)

DEDUP_TOKEN: __asan_memcpy--CFF::CFF2VariationStore::serialize(hb_serialize_context_t*, CFF::CFF2VariationStore const*)--_write_cff2(cff2_subset_plan const&, OT::cff2::accelerator_templ_t<CFF::CFF2PrivateDictOpSet_Subset, CFF::CFF2PrivateDictValues_Base<CFF::OpStr> > const&, hb_vector_t<unsigned int, 8u> const&, unsigned int, void*)
0x61300000037f is located 0 bytes to the right of 383-byte region [0x613000000200,0x61300000037f)
allocated by thread T0 here:
    #0 0x52c548 in operator new[](unsigned long) /src/llvm/projects/compiler-rt/lib/asan/asan_new_delete.cc:109
    #1 0x55bca7 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:558:23
    #2 0x53171d in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:280:6
    #3 0x53cf66 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:713:9
    #4 0x530d9c in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #5 0x718ee664a83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: operator new[](unsigned long)--fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/llvm/projects/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cc:23 in __asan_memcpy
Shadow bytes around the buggy address:
  0x0c267fff8010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c267fff8020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c267fff8030: 00 00 00 00 00 00 00 07 fa fa fa fa fa fa fa fa
  0x0c267fff8040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c267fff8050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c267fff8060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00[07]
  0x0c267fff8070: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c267fff8080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c267fff8090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c267fff80a0: 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa fa
  0x0c267fff80b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
