INFO: Seed: 2225920986
INFO: Loaded 1 modules   (5109 guards): 5109 [0x9620e0, 0x9670b4), 
/out/standard_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-use-after-free on address 0x6170000001c0 at pc 0x0000005f55ac bp 0x7fffc962cd80 sp 0x7fffc962cd78
WRITE of size 8 at 0x6170000001c0 thread T0
SCARINESS: 52 (8-byte-write-heap-use-after-free)
    #0 0x5f55ab in pj_projection_specific_setup_lsat /src/proj.4/src/PJ_lsat.c
    #1 0x59abbf in pj_init_ctx /src/proj.4/src/pj_init.c:715:11
    #2 0x59856f in pj_init_plus_ctx /src/proj.4/src/pj_init.c:409:14
    #3 0x51a46f in LLVMFuzzerTestOneInput /src/proj.4/./test/fuzzers/standard_fuzzer.cpp:89:21
    #4 0x53c9c0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:464:13
    #5 0x51b545 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:273:6
    #6 0x52684d in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:688:9
    #7 0x51abe8 in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #8 0x7663f124d83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #9 0x41c718 in _start (/out/standard_fuzzer+0x41c718)

DEDUP_TOKEN: pj_projection_specific_setup_lsat--pj_init_ctx--pj_init_plus_ctx
0x6170000001c0 is located 320 bytes inside of 648-byte region [0x617000000080,0x617000000308)
freed by thread T0 here:
    #0 0x4de928 in __interceptor_cfree.localalias.0 /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:76
    #1 0x59cd39 in pj_dealloc /src/proj.4/src/pj_malloc.c:129:5
    #2 0x59cf2c in pj_default_destructor /src/proj.4/src/pj_malloc.c:184:12
    #3 0x5f50b0 in pj_projection_specific_setup_lsat /src/proj.4/src/PJ_lsat.c:166:9
    #4 0x59abbf in pj_init_ctx /src/proj.4/src/pj_init.c:715:11
    #5 0x59856f in pj_init_plus_ctx /src/proj.4/src/pj_init.c:409:14
    #6 0x51a46f in LLVMFuzzerTestOneInput /src/proj.4/./test/fuzzers/standard_fuzzer.cpp:89:21
    #7 0x53c9c0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:464:13
    #8 0x51b545 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:273:6
    #9 0x52684d in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:688:9
    #10 0x51abe8 in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #11 0x7663f124d83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: __interceptor_cfree.localalias.0--pj_dealloc--pj_default_destructor
previously allocated by thread T0 here:
    #0 0x4deae8 in malloc /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:88
    #1 0x59cbfd in pj_malloc /src/proj.4/src/pj_malloc.c:78:17
    #2 0x59cca2 in pj_calloc /src/proj.4/src/pj_malloc.c:93:17
    #3 0x5f4ebe in pj_lsat /src/proj.4/src/PJ_lsat.c:152:5
    #4 0x598f7f in pj_init_ctx /src/proj.4/src/pj_init.c:504:11
    #5 0x59856f in pj_init_plus_ctx /src/proj.4/src/pj_init.c:409:14
    #6 0x51a46f in LLVMFuzzerTestOneInput /src/proj.4/./test/fuzzers/standard_fuzzer.cpp:89:21
    #7 0x53c9c0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:464:13
    #8 0x51b545 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:273:6
    #9 0x52684d in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:688:9
    #10 0x51abe8 in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #11 0x7663f124d83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--pj_malloc--pj_calloc
SUMMARY: AddressSanitizer: heap-use-after-free /src/proj.4/src/PJ_lsat.c in pj_projection_specific_setup_lsat
Shadow bytes around the buggy address:
  0x0c2e7fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2e7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2e7fff8000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2e7fff8010: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c2e7fff8020: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
=>0x0c2e7fff8030: fd fd fd fd fd fd fd fd[fd]fd fd fd fd fd fd fd
  0x0c2e7fff8040: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c2e7fff8050: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c2e7fff8060: fd fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2e7fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2e7fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
