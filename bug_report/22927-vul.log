INFO: Seed: 2225375449
INFO: Loaded 1 modules   (5009 inline 8-bit counters): 5009 [0x8c4498, 0x8c5829), 
INFO: Loaded 1 PC tables (5009 PCs): 5009 [0x647508,0x65ae18), 
/out/set_eval_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x618000000078 at pc 0x0000005920bd bp 0x7fffeb3ac2f0 sp 0x7fffeb3ac2e8
READ of size 8 at 0x618000000078 thread T0
SCARINESS: 23 (8-byte-read-heap-buffer-overflow)
    #0 0x5920bc in mu::Parser::Sum(double const*, int) /src/muparser/src/muParser.cpp:152:43
    #1 0x56af85 in mu::ParserBase::ParseCmdCodeBulk(int, int) const /src/muparser/src/muParserBase.cpp:1121:30
    #2 0x552307 in ParseCmdCode /src/muparser/src/muParserBase.cpp:1002:12
    #3 0x552307 in mu::ParserBase::ParseString() const /src/muparser/src/muParserBase.cpp:1429:14
    #4 0x550db4 in LLVMFuzzerTestOneInput /src/set_eval_fuzzer.cc:27:12
    #5 0x459991 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:558:15
    #6 0x444cc2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:296:6
    #7 0x44ae1e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:796:9
    #8 0x472ce2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:19:10
    #9 0x7e0e9c78383f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #10 0x41f3b8 in _start (/out/set_eval_fuzzer+0x41f3b8)

DEDUP_TOKEN: mu::Parser::Sum(double const*, int)--mu::ParserBase::ParseCmdCodeBulk(int, int) const--ParseCmdCode
0x618000000078 is located 8 bytes to the left of 896-byte region [0x618000000080,0x618000000400)
allocated by thread T0 here:
    #0 0x54e35d in operator new(unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:99:3
    #1 0x58358c in __libcpp_allocate /usr/local/bin/../include/c++/v1/new:253:10
    #2 0x58358c in allocate /usr/local/bin/../include/c++/v1/memory:1850:34
    #3 0x58358c in allocate /usr/local/bin/../include/c++/v1/memory:1541:21
    #4 0x58358c in __split_buffer /usr/local/bin/../include/c++/v1/__split_buffer:318:29
    #5 0x58358c in std::__1::vector<double, std::__1::allocator<double> >::__append(unsigned long) /usr/local/bin/../include/c++/v1/vector:1094:53
    #6 0x55d7bc in resize /usr/local/bin/../include/c++/v1/vector:2024:15
    #7 0x55d7bc in mu::ParserBase::CreateRPN() const /src/muparser/src/muParserBase.cpp:1411:20
    #8 0x5522bc in mu::ParserBase::ParseString() const /src/muparser/src/muParserBase.cpp:1427:7
    #9 0x550db4 in LLVMFuzzerTestOneInput /src/set_eval_fuzzer.cc:27:12
    #10 0x459991 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:558:15
    #11 0x444cc2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:296:6
    #12 0x44ae1e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:796:9
    #13 0x472ce2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:19:10
    #14 0x7e0e9c78383f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: operator new(unsigned long)--__libcpp_allocate--allocate
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/muparser/src/muParser.cpp:152:43 in mu::Parser::Sum(double const*, int)
Shadow bytes around the buggy address:
  0x0c307fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c307fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c307fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c307fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c307fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c307fff8000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa[fa]
  0x0c307fff8010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c307fff8020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c307fff8030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c307fff8040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c307fff8050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
