INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2215849545
INFO: Loaded 1 modules   (10234 inline 8-bit counters): 10234 [0x835f6a0, 0x8361e9a), 
INFO: Loaded 1 PC tables (10234 PCs): 10234 [0x82d8cd8,0x82ecca8), 
/out/read_dl: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: global-buffer-overflow on address 0x082d0e70 at pc 0x0820ce4b bp 0xffdbf078 sp 0xffdbf070
READ of size 2 at 0x082d0e70 thread T0
SCARINESS: 14 (2-byte-read-global-buffer-overflow)
    #0 0x820ce4a in igraph_dl_yylex /src/igraph/build/src/io/parsers/dl-lexer.c:3536:3
    #1 0x8202d60 in igraph_dl_yyparse /src/igraph/build/src/io/parsers/dl-parser.c:1493:16
    #2 0x8201c40 in igraph_read_graph_dl /src/igraph/src/io/dl.c:100:15
    #3 0x81c4afa in LLVMFuzzerTestOneInput /src/igraph/./fuzzing/read_dl.cpp:41:9
    #4 0x80859ce in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #5 0x807092e in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #6 0x8076530 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #7 0x80a0117 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0xf74fded4 in __libc_start_main (/lib32/libc.so.6+0x1aed4) (BuildId: d56935956a210bf85f6592f3178b979ad4f7b35f)
    #9 0x8067a75 in _start (/out/read_dl+0x8067a75)

DEDUP_TOKEN: igraph_dl_yylex--igraph_dl_yyparse--igraph_read_graph_dl
0x082d0e70 is located 0 bytes to the right of global variable 'yy_transition' defined in '/src/igraph/build/src/io/parsers/dl-lexer.c:600:35' (0x82c5700) of size 46960
SUMMARY: AddressSanitizer: global-buffer-overflow /src/igraph/build/src/io/parsers/dl-lexer.c:3536:3 in igraph_dl_yylex
Shadow bytes around the buggy address:
  0x2105a170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x2105a180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x2105a190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x2105a1a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x2105a1b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x2105a1c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00[f9]f9
  0x2105a1d0: f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9
  0x2105a1e0: f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9
  0x2105a1f0: f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9
  0x2105a200: f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9
  0x2105a210: f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
