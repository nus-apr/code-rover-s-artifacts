Accepting input from '/tmp/poc'
Usage for fuzzing: honggfuzz -P [flags] -- /out/snmp_api_fuzzer
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6070000000dc at pc 0x000000580853 bp 0x7ffc24e8b450 sp 0x7ffc24e8b448
WRITE of size 1 at 0x6070000000dc thread T0
SCARINESS: 31 (1-byte-write-heap-buffer-overflow)
    #0 0x580852 in asn_build_header /src/net-snmp/snmplib/asn1.c:1229:13
    #1 0x580852 in asn_build_unsigned_int64 /src/net-snmp/snmplib/asn1.c:2181:16
    #2 0x574ae6 in snmp_build_var_op /src/net-snmp/snmplib/snmp.c:264:16
    #3 0x55798f in snmp_pdu_build /src/net-snmp/snmplib/snmp_api.c:3397:14
    #4 0x4e0739 in LLVMFuzzerTestOneInput /src/net-snmp/testing/fuzzing/snmp_api_fuzzer.c:95:9
    #5 0x4e161b in main (/out/snmp_api_fuzzer+0x4e161b)
    #6 0x7d5b842ba082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #7 0x42117d in _start (/out/snmp_api_fuzzer+0x42117d)

DEDUP_TOKEN: asn_build_header--asn_build_unsigned_int64--snmp_build_var_op
0x6070000000dc is located 0 bytes to the right of 76-byte region [0x607000000090,0x6070000000dc)
allocated by thread T0 here:
    #0 0x4a25b6 in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x4e0652 in af_get_null_terminated /src/net-snmp/testing/fuzzing/ada_fuzz_header.h:67:17
    #2 0x4e0652 in af_gb_get_null_terminated /src/net-snmp/testing/fuzzing/ada_fuzz_header.h:94:16
    #3 0x4e0652 in LLVMFuzzerTestOneInput /src/net-snmp/testing/fuzzing/snmp_api_fuzzer.c:91:17
    #4 0x4e161b in main (/out/snmp_api_fuzzer+0x4e161b)

DEDUP_TOKEN: malloc--af_get_null_terminated--af_gb_get_null_terminated
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/net-snmp/snmplib/asn1.c:1229:13 in asn_build_header
Shadow bytes around the buggy address:
  0x0c0e7fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c0e7fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c0e7fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c0e7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c0e7fff8000: fa fa fa fa fd fd fd fd fd fd fd fd fd fa fa fa
=>0x0c0e7fff8010: fa fa 00 00 00 00 00 00 00 00 00[04]fa fa fa fa
  0x0c0e7fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0e7fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0e7fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0e7fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0e7fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
