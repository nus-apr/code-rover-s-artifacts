INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2305716181
INFO: Loaded 1 modules   (93752 inline 8-bit counters): 93752 [0x8c4f530, 0x8c66368), 
INFO: Loaded 1 PC tables (93752 PCs): 93752 [0x8c66368,0x8d1d528), 
/out/hb-subset-fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xe830197d at pc 0x081cde9d bp 0xff85cf08 sp 0xff85cf00
READ of size 4 at 0xe830197d thread T0
SCARINESS: 17 (4-byte-read-heap-buffer-overflow)
    #0 0x81cde9c in LLVMFuzzerTestOneInput /work/build/../../src/harfbuzz/test/fuzzing/hb-subset-fuzzer.cc:94:9
    #1 0x808e92e in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #2 0x807988e in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #3 0x807f490 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #4 0x80a9077 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #5 0xe911aed4 in __libc_start_main (/lib32/libc.so.6+0x1aed4) (BuildId: d56935956a210bf85f6592f3178b979ad4f7b35f)
    #6 0x80709d5 in _start (/out/hb-subset-fuzzer+0x80709d5)

DEDUP_TOKEN: LLVMFuzzerTestOneInput--fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int)
0xe830197d is located 3 bytes to the left of 73-byte region [0xe8301980,0xe83019c9)
allocated by thread T0 here:
    #0 0x818a3bf in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x8106544 in operator new(unsigned int) cxa_noexception.cpp
    #2 0x807988e in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #3 0x807f490 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #4 0x80a9077 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #5 0xe911aed4 in __libc_start_main (/lib32/libc.so.6+0x1aed4) (BuildId: d56935956a210bf85f6592f3178b979ad4f7b35f)

DEDUP_TOKEN: __interceptor_malloc--operator new(unsigned int)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int)
SUMMARY: AddressSanitizer: heap-buffer-overflow /work/build/../../src/harfbuzz/test/fuzzing/hb-subset-fuzzer.cc:94:9 in LLVMFuzzerTestOneInput
Shadow bytes around the buggy address:
  0x3d0602d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d0602e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d0602f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d060300: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d060310: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x3d060320: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa[fa]
  0x3d060330: 00 00 00 00 00 00 00 00 00 01 fa fa fa fa 00 00
  0x3d060340: 00 00 00 00 00 00 00 01 fa fa fa fa 00 00 00 00
  0x3d060350: 00 00 00 00 00 00 fa fa fa fa fd fd fd fd fd fd
  0x3d060360: fd fd fd fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d060370: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
