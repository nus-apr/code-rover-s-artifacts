INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2190723930
INFO: Loaded 1 modules   (236924 inline 8-bit counters): 236924 [0x1f52a80, 0x1f8c7fc), 
INFO: Loaded 1 PC tables (236924 PCs): 236924 [0x1f8c800,0x2329fc0), 
/out/fuzz_probe_analyze: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7cb43de0d440 at pc 0x000001077292 bp 0x7ffc65d8db90 sp 0x7ffc65d8db88
WRITE of size 1 at 0x7cb43de0d440 thread T0
SCARINESS: 46 (1-byte-write-stack-buffer-overflow)
    #0 0x1077291 in RTSP_UnpackURL /src/gpac/src/ietf/rtsp_session.c:120:11
    #1 0x10774db in gf_rtsp_session_new /src/gpac/src/ietf/rtsp_session.c:180:6
    #2 0x785caf in rtpin_rtsp_new /src/gpac/src/filters/in_rtp_rtsp.c:256:9
    #3 0x781642 in rtpin_initialize /src/gpac/src/filters/in_rtp.c:842:17
    #4 0x596b0a in gf_filter_new_finalize /src/gpac/src/filter_core/filter.c:543:8
    #5 0x59485c in gf_filter_new /src/gpac/src/filter_core/filter.c:468:7
    #6 0x588262 in gf_fs_load_source_dest_internal /src/gpac/src/filter_core/filter_session.c:3548:12
    #7 0x5acd87 in gf_filter_connect_source /src/gpac/src/filter_core/filter.c:4007:16
    #8 0x73f21b in filelist_load_next /src/gpac/src/filters/filelist.c:1360:12
    #9 0x73f21b in filelist_process /src/gpac/src/filters/filelist.c:1949:10
    #10 0x5a6f13 in gf_filter_process_task /src/gpac/src/filter_core/filter.c:2971:7
    #11 0x57ea01 in gf_fs_thread_proc /src/gpac/src/filter_core/filter_session.c:2105:3
    #12 0x57c2e4 in gf_fs_run /src/gpac/src/filter_core/filter_session.c:2405:3
    #13 0x56ee2f in LLVMFuzzerTestOneInput /src/testsuite/oss-fuzzers/fuzz_probe_analyze.c:21:5
    #14 0x4406d3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #15 0x42be32 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #16 0x4316dc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #17 0x45ac12 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0x7cb43deb1082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #19 0x421ffd in _start (/out/fuzz_probe_analyze+0x421ffd)

DEDUP_TOKEN: RTSP_UnpackURL--gf_rtsp_session_new--rtpin_rtsp_new
Address 0x7cb43de0d440 is located in stack of thread T0 at offset 1088 in frame
    #0 0x107657f in RTSP_UnpackURL /src/gpac/src/ietf/rtsp_session.c:54

DEDUP_TOKEN: RTSP_UnpackURL
  This frame has 2 object(s):
    [32, 42) 'schema' (line 55)
    [64, 1088) 'text' (line 55) <== Memory access at offset 1088 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /src/gpac/src/ietf/rtsp_session.c:120:11 in RTSP_UnpackURL
Shadow bytes around the buggy address:
  0x0f9707bb9a30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f9707bb9a40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f9707bb9a50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f9707bb9a60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f9707bb9a70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0f9707bb9a80: 00 00 00 00 00 00 00 00[f3]f3 f3 f3 f3 f3 f3 f3
  0x0f9707bb9a90: f3 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x0f9707bb9aa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f9707bb9ab0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f9707bb9ac0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f9707bb9ad0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
