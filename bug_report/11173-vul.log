======================= INFO =========================
This binary is built for AFL-fuzz.
To run the target function on individual input(s) execute this:
  /out/objects_fuzzer < INPUT_FILE
or
  /out/objects_fuzzer INPUT_FILE1 [INPUT_FILE2 ... ]
To fuzz with afl-fuzz execute this:
  afl-fuzz [afl-flags] /out/objects_fuzzer [-N]
afl-fuzz will run N iterations before re-spawning the process (default: 1000)
======================================================
Reading 58 bytes from /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6060000002fa at pc 0x0000005805a2 bp 0x7ffedc306e50 sp 0x7ffedc306e48
READ of size 1 at 0x6060000002fa thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x5805a1 in git__strntol64 /src/libgit2/src/util.c:86:22
    #1 0x6a408e in git_signature__parse /src/libgit2/src/signature.c:234:7
    #2 0x5b25c7 in git_commit__parse_raw /src/libgit2/src/commit.c:419:6
    #3 0x533101 in git_object__from_raw /src/libgit2/src/object.c:94:15
    #4 0x532b07 in LLVMFuzzerTestOneInput /src/libgit2/build/../fuzzers/objects_fuzzer.c:40:7
    #5 0x530c4e in ExecuteFilesOnyByOne(int, char**) /src/libfuzzer/afl/afl_driver.cpp:301:5
    #6 0x5311be in main /src/libfuzzer/afl/afl_driver.cpp:339:12
    #7 0x7226fe1a183f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #8 0x41d5c8 in _start (/out/objects_fuzzer+0x41d5c8)

DEDUP_TOKEN: git__strntol64--git_signature__parse--git_commit__parse_raw
0x6060000002fa is located 0 bytes to the right of 58-byte region [0x6060000002c0,0x6060000002fa)
allocated by thread T0 here:
    #0 0x52c438 in operator new(unsigned long) /src/llvm/projects/compiler-rt/lib/asan/asan_new_delete.cc:106
    #1 0x530b69 in __libcpp_allocate /usr/local/bin/../include/c++/v1/new:257:10
    #2 0x530b69 in allocate /usr/local/bin/../include/c++/v1/memory:1800
    #3 0x530b69 in allocate /usr/local/bin/../include/c++/v1/memory:1549
    #4 0x530b69 in __vallocate /usr/local/bin/../include/c++/v1/vector:972
    #5 0x530b69 in vector /usr/local/bin/../include/c++/v1/vector:1115
    #6 0x530b69 in ExecuteFilesOnyByOne(int, char**) /src/libfuzzer/afl/afl_driver.cpp:298
    #7 0x5311be in main /src/libfuzzer/afl/afl_driver.cpp:339:12
    #8 0x7226fe1a183f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: operator new(unsigned long)--__libcpp_allocate--allocate
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/libgit2/src/util.c:86:22 in git__strntol64
Shadow bytes around the buggy address:
  0x0c0c7fff8000: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa
  0x0c0c7fff8010: 00 00 00 00 00 00 06 fa fa fa fa fa 00 00 00 00
  0x0c0c7fff8020: 00 00 00 00 fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c0c7fff8030: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa
  0x0c0c7fff8040: 00 00 00 00 00 00 00 00 fa fa fa fa 00 00 00 00
=>0x0c0c7fff8050: 00 00 00 00 fa fa fa fa 00 00 00 00 00 00 00[02]
  0x0c0c7fff8060: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa
  0x0c0c7fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0c7fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0c7fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0c7fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
