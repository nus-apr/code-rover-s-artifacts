INFO: Seed: 2325989380
INFO: Loaded 1 modules   (52878 inline 8-bit counters): 52878 [0x126f710, 0x127c59e), 
INFO: Loaded 1 PC tables (52878 PCs): 52878 [0xde5ff0,0xeb48d0), 
/out/encoder_epsi_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==12==ERROR: AddressSanitizer: heap-use-after-free on address 0x607000001d00 at pc 0x0000008e1530 bp 0x7ffe7da884c0 sp 0x7ffe7da884b8
READ of size 8 at 0x607000001d00 thread T0
SCARINESS: 51 (8-byte-read-heap-use-after-free)
    #0 0x8e152f in DestroyXMLTreeAttributes /src/imagemagick/MagickCore/xml-tree.c:449:13
    #1 0x8e0875 in DestroyXMLTree /src/imagemagick/MagickCore/xml-tree.c:568:24
    #2 0x8e0a0e in DestroyXMLTreeChild /src/imagemagick/MagickCore/xml-tree.c:475:12
    #3 0x8e0845 in DestroyXMLTree /src/imagemagick/MagickCore/xml-tree.c:565:3
    #4 0x80e1cf in GetXMPProperty /src/imagemagick/MagickCore/property.c:1802:7
    #5 0x80a3e1 in GetImageProperty /src/imagemagick/MagickCore/property.c:2251:18
    #6 0x8198c6 in SetImageProfileInternal /src/imagemagick/MagickCore/profile.c:1653:10
    #7 0x9ff4aa in ReadPSImage /src/imagemagick/coders/ps.c:697:16
    #8 0x6b6f3a in ReadImage /src/imagemagick/MagickCore/constitute.c:497:13
    #9 0x6545b1 in BlobToImage /src/imagemagick/MagickCore/blob.c:488:9
    #10 0x5a7d62 in Magick::Image::read(Magick::Blob const&) /src/imagemagick/Magick++/lib/Image.cpp:4008:12
    #11 0x51d7b4 in LLVMFuzzerTestOneInput /src/imagemagick/Magick++/fuzz/encoder_fuzzer.cc:27:11
    #12 0x547530 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:515:13
    #13 0x51e659 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:280:6
    #14 0x529fa4 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:703:9
    #15 0x51dcfc in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #16 0x76f42412883f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #17 0x41d928 in _start (/out/encoder_epsi_fuzzer+0x41d928)

DEDUP_TOKEN: DestroyXMLTreeAttributes--DestroyXMLTree--DestroyXMLTreeChild
0x607000001d00 is located 0 bytes inside of 80-byte region [0x607000001d00,0x607000001d50)
freed by thread T0 here:
    #0 0x4e1528 in __interceptor_cfree.localalias.0 /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:76
    #1 0x7af771 in RelinquishMagickMemory /src/imagemagick/MagickCore/memory.c:1032:3
    #2 0x8e4f42 in NewXMLTree /src/imagemagick/MagickCore/xml-tree.c:2311:12
    #3 0x80de7a in GetXMPProperty /src/imagemagick/MagickCore/property.c:1754:7
    #4 0x80a3e1 in GetImageProperty /src/imagemagick/MagickCore/property.c:2251:18
    #5 0x8198c6 in SetImageProfileInternal /src/imagemagick/MagickCore/profile.c:1653:10
    #6 0x9ff4aa in ReadPSImage /src/imagemagick/coders/ps.c:697:16
    #7 0x6b6f3a in ReadImage /src/imagemagick/MagickCore/constitute.c:497:13
    #8 0x6545b1 in BlobToImage /src/imagemagick/MagickCore/blob.c:488:9
    #9 0x5a7d62 in Magick::Image::read(Magick::Blob const&) /src/imagemagick/Magick++/lib/Image.cpp:4008:12
    #10 0x51d7b4 in LLVMFuzzerTestOneInput /src/imagemagick/Magick++/fuzz/encoder_fuzzer.cc:27:11
    #11 0x547530 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:515:13
    #12 0x51e659 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:280:6
    #13 0x529fa4 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:703:9
    #14 0x51dcfc in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #15 0x76f42412883f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: __interceptor_cfree.localalias.0--RelinquishMagickMemory--NewXMLTree
previously allocated by thread T0 here:
    #0 0x4e1b50 in realloc /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:107
    #1 0x7af81b in ResizeMagickMemory /src/imagemagick/MagickCore/memory.c:1260:9
    #2 0x8e4319 in NewXMLTree /src/imagemagick/MagickCore/xml-tree.c:2048:38
    #3 0x80de7a in GetXMPProperty /src/imagemagick/MagickCore/property.c:1754:7
    #4 0x80a3e1 in GetImageProperty /src/imagemagick/MagickCore/property.c:2251:18
    #5 0x8198c6 in SetImageProfileInternal /src/imagemagick/MagickCore/profile.c:1653:10
    #6 0x9ff4aa in ReadPSImage /src/imagemagick/coders/ps.c:697:16
    #7 0x6b6f3a in ReadImage /src/imagemagick/MagickCore/constitute.c:497:13
    #8 0x6545b1 in BlobToImage /src/imagemagick/MagickCore/blob.c:488:9
    #9 0x5a7d62 in Magick::Image::read(Magick::Blob const&) /src/imagemagick/Magick++/lib/Image.cpp:4008:12
    #10 0x51d7b4 in LLVMFuzzerTestOneInput /src/imagemagick/Magick++/fuzz/encoder_fuzzer.cc:27:11
    #11 0x547530 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:515:13
    #12 0x51e659 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:280:6
    #13 0x529fa4 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:703:9
    #14 0x51dcfc in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #15 0x76f42412883f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: realloc--ResizeMagickMemory--NewXMLTree
SUMMARY: AddressSanitizer: heap-use-after-free /src/imagemagick/MagickCore/xml-tree.c:449:13 in DestroyXMLTreeAttributes
Shadow bytes around the buggy address:
  0x0c0e7fff8350: 00 00 00 00 00 fa fa fa fa fa 00 00 00 00 00 00
  0x0c0e7fff8360: 00 00 00 fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c0e7fff8370: 00 fa fa fa fa fa 00 00 00 00 00 00 00 00 00 fa
  0x0c0e7fff8380: fa fa fa fa 00 00 00 00 00 00 00 00 00 fa fa fa
  0x0c0e7fff8390: fa fa fd fd fd fd fd fd fd fd fd fd fa fa fa fa
=>0x0c0e7fff83a0:[fd]fd fd fd fd fd fd fd fd fd fa fa fa fa 00 00
  0x0c0e7fff83b0: 00 00 00 00 00 00 01 fa fa fa fa fa 00 00 00 00
  0x0c0e7fff83c0: 00 00 00 00 03 fa fa fa fa fa 00 00 00 00 00 00
  0x0c0e7fff83d0: 00 00 03 fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c0e7fff83e0: 05 fa fa fa fa fa 00 00 00 00 00 00 00 00 05 fa
  0x0c0e7fff83f0: fa fa fa fa 00 00 00 00 00 00 00 00 05 fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==12==ABORTING
