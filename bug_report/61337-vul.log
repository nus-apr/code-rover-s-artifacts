INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2303342836
INFO: Loaded 1 modules   (51661 inline 8-bit counters): 51661 [0x8736340, 0x8742d0d), 
INFO: Loaded 1 PC tables (51661 PCs): 51661 [0x8628ddc,0x868dc44), 
/out/html: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-use-after-free on address 0xea700670 at pc 0x0812f640 bp 0xffca2fb8 sp 0xffca2b68
READ of size 2 at 0xea700670 thread T0
SCARINESS: 42 (2-byte-read-heap-use-after-free)
    #0 0x812f63f in printf_common(void*, char const*, char*) /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors_format.inc:553:9
    #1 0x812f825 in __interceptor_vsnprintf /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1665:1
    #2 0x81dfc44 in __xmlRaiseError /src/libxml2/error.c:529:9
    #3 0x831f135 in htmlParseErr /src/libxml2/HTMLparser.c:106:5
    #4 0x8342a34 in htmlCurrentChar /src/libxml2/HTMLparser.c:457:17
    #5 0x834c4f3 in htmlParseCharDataInternal /src/libxml2/HTMLparser.c:3180:11
    #6 0x834c4f3 in htmlParseCharData /src/libxml2/HTMLparser.c:3257:5
    #7 0x8328e59 in htmlParseContentInternal /src/libxml2/HTMLparser.c:4815:13
    #8 0x832cbff in htmlParseDocument /src/libxml2/HTMLparser.c:4921:5
    #9 0x834034d in htmlDoRead /src/libxml2/HTMLparser.c:6745:5
    #10 0x8340780 in htmlReadMemory /src/libxml2/HTMLparser.c:6827:13
    #11 0x81d4b43 in LLVMFuzzerTestOneInput /src/libxml2/fuzz/html.c:48:11
    #12 0x80959ae in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #13 0x808090e in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #14 0x8086510 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #15 0x80b00f7 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #16 0xec8a3ed4 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x1aed4) (BuildId: f0e9c9950026d7f234a4a1d03670a7ed59ceb726)
    #17 0x8077a55 in _start (/out/html+0x8077a55)

DEDUP_TOKEN: printf_common(void*, char const*, char*)--__interceptor_vsnprintf--__xmlRaiseError
0xea700670 is located 0 bytes inside of 2-byte region [0xea700670,0xea700672)
freed by thread T0 here:
    #0 0x8191116 in free /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:52:3
    #1 0x83429c6 in htmlCurrentChar /src/libxml2/HTMLparser.c:448:13
    #2 0x834c4f3 in htmlParseCharDataInternal /src/libxml2/HTMLparser.c:3180:11
    #3 0x834c4f3 in htmlParseCharData /src/libxml2/HTMLparser.c:3257:5
    #4 0x8328e59 in htmlParseContentInternal /src/libxml2/HTMLparser.c:4815:13
    #5 0x832cbff in htmlParseDocument /src/libxml2/HTMLparser.c:4921:5
    #6 0x834034d in htmlDoRead /src/libxml2/HTMLparser.c:6745:5
    #7 0x8340780 in htmlReadMemory /src/libxml2/HTMLparser.c:6827:13
    #8 0x81d4b43 in LLVMFuzzerTestOneInput /src/libxml2/fuzz/html.c:48:11
    #9 0x80959ae in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #10 0x808090e in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #11 0x8086510 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #12 0x80b00f7 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #13 0xec8a3ed4 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x1aed4) (BuildId: f0e9c9950026d7f234a4a1d03670a7ed59ceb726)

DEDUP_TOKEN: free--htmlCurrentChar--htmlParseCharDataInternal
previously allocated by thread T0 here:
    #0 0x819143f in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x81d4ebb in xmlFuzzMalloc /src/libxml2/fuzz/fuzz.c:82:12
    #2 0x8306360 in xmlStrndup /src/libxml2/xmlstring.c:49:23
    #3 0x8342c75 in htmlFindEncoding /src/libxml2/HTMLparser.c:383:12
    #4 0x8342c75 in htmlCurrentChar /src/libxml2/HTMLparser.c:443:17
    #5 0x834c4f3 in htmlParseCharDataInternal /src/libxml2/HTMLparser.c:3180:11
    #6 0x834c4f3 in htmlParseCharData /src/libxml2/HTMLparser.c:3257:5
    #7 0x8328e59 in htmlParseContentInternal /src/libxml2/HTMLparser.c:4815:13
    #8 0x832cbff in htmlParseDocument /src/libxml2/HTMLparser.c:4921:5
    #9 0x834034d in htmlDoRead /src/libxml2/HTMLparser.c:6745:5
    #10 0x8340780 in htmlReadMemory /src/libxml2/HTMLparser.c:6827:13
    #11 0x81d4b43 in LLVMFuzzerTestOneInput /src/libxml2/fuzz/html.c:48:11
    #12 0x80959ae in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #13 0x808090e in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #14 0x8086510 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #15 0x80b00f7 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #16 0xec8a3ed4 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x1aed4) (BuildId: f0e9c9950026d7f234a4a1d03670a7ed59ceb726)

DEDUP_TOKEN: __interceptor_malloc--xmlFuzzMalloc--xmlStrndup
SUMMARY: AddressSanitizer: heap-use-after-free /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors_format.inc:553:9 in printf_common(void*, char const*, char*)
Shadow bytes around the buggy address:
  0x3d4e0070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d4e0080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fd fa
  0x3d4e0090: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x3d4e00a0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x3d4e00b0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
=>0x3d4e00c0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa[fd]fa
  0x3d4e00d0: fa fa 00 fa fa fa 00 00 fa fa 00 00 fa fa 04 fa
  0x3d4e00e0: fa fa 00 fa fa fa 00 fa fa fa 00 00 fa fa 00 04
  0x3d4e00f0: fa fa 00 04 fa fa 00 04 fa fa fa fa fa fa fa fa
  0x3d4e0100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d4e0110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
