INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2185859622
INFO: Loaded 1 modules   (19684 inline 8-bit counters): 19684 [0xabab18, 0xabf7fc), 
INFO: Loaded 1 PC tables (19684 PCs): 19684 [0xabf800,0xb0c640), 
/out/FuzzTTF: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000000cf at pc 0x0000005b3aec bp 0x7ffe90ab6b60 sp 0x7ffe90ab6b58
READ of size 1 at 0x6020000000cf thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x5b3aeb in TTF::be_u16(unsigned char const*) /src/serenity/Libraries/LibTTF/Font.cpp:48:19
    #1 0x5b6beb in TTF::Font::load_from_offset(AK::ByteBuffer&&, unsigned int) /src/serenity/Libraries/LibTTF/Font.cpp:263:23
    #2 0x5b5e2f in TTF::Font::load_from_memory(AK::ByteBuffer&, unsigned int) /src/serenity/Libraries/LibTTF/Font.cpp:227:16
    #3 0x5b1df2 in LLVMFuzzerTestOneInput /src/serenity/Meta/Lagom/build/../Fuzzers/FuzzTTF.cpp:34:5
    #4 0x4b69e1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #5 0x4a0772 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #6 0x4a6ab5 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #7 0x4d0962 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0x7c32c64c583f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #9 0x47b688 in _start (/out/FuzzTTF+0x47b688)

DEDUP_TOKEN: TTF::be_u16(unsigned char const*)--TTF::Font::load_from_offset(AK::ByteBuffer&&, unsigned int)--TTF::Font::load_from_memory(AK::ByteBuffer&, unsigned int)
0x6020000000cf is located 1 bytes to the left of 16-byte region [0x6020000000d0,0x6020000000e0)
allocated by thread T0 here:
    #0 0x57f08d in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x5b2d28 in AK::ByteBufferImpl::ByteBufferImpl(void const*, unsigned long) /src/serenity/Meta/Lagom/build/../../../AK/ByteBuffer.h:252:35
    #2 0x5b2b86 in AK::ByteBufferImpl::copy(void const*, unsigned long) /src/serenity/Meta/Lagom/build/../../../AK/ByteBuffer.h:291:25
    #3 0x5b20bc in AK::ByteBuffer::copy(void const*, unsigned long) /src/serenity/Meta/Lagom/build/../../../AK/ByteBuffer.h:128:79
    #4 0x5b1de5 in LLVMFuzzerTestOneInput /src/serenity/Meta/Lagom/build/../Fuzzers/FuzzTTF.cpp:33:28
    #5 0x4b69e1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #6 0x4a0772 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #7 0x4a6ab5 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #8 0x4d0962 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #9 0x7c32c64c583f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--AK::ByteBufferImpl::ByteBufferImpl(void const*, unsigned long)--AK::ByteBufferImpl::copy(void const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/serenity/Libraries/LibTTF/Font.cpp:48:19 in TTF::be_u16(unsigned char const*)
Shadow bytes around the buggy address:
  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff8000: fa fa 00 00 fa fa 00 fa fa fa 00 fa fa fa 00 fa
=>0x0c047fff8010: fa fa 00 00 fa fa 00 00 fa[fa]00 00 fa fa fa fa
  0x0c047fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
