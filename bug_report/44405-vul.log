INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2298962963
INFO: Loaded 1 modules   (16442 inline 8-bit counters): 16442 [0xa44fe0, 0xa4901a), 
INFO: Loaded 1 PC tables (16442 PCs): 16442 [0xa49020,0xa893c0), 
/out/fuzz_process_packet: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==12==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6070000000d9 at pc 0x00000058fb76 bp 0x7fffa41e6d70 sp 0x7fffa41e6d68
READ of size 1 at 0x6070000000d9 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x58fb75 in ndpi_strncasestr /src/ndpi/src/lib/ndpi_main.c:7112:8
    #1 0x5ec256 in check_content_type_and_change_protocol /src/ndpi/src/lib/protocols/http.c:728:8
    #2 0x5e9448 in ndpi_check_http_tcp /src/ndpi/src/lib/protocols/http.c
    #3 0x5e9448 in ndpi_search_http_tcp /src/ndpi/src/lib/protocols/http.c:1290:3
    #4 0x579480 in check_ndpi_detection_func /src/ndpi/src/lib/ndpi_main.c:4794:6
    #5 0x57a166 in ndpi_check_flow_func /src/ndpi/src/lib/ndpi_main.c
    #6 0x583180 in ndpi_detection_process_packet /src/ndpi/src/lib/ndpi_main.c:5705:15
    #7 0x55d294 in LLVMFuzzerTestOneInput /src/ndpi/fuzz/fuzz_process_packet.c:24:3
    #8 0x455393 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #9 0x441022 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #10 0x44686c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #11 0x46f462 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #12 0x7f84ac1e7082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)
    #13 0x41f84d in _start (/out/fuzz_process_packet+0x41f84d)

DEDUP_TOKEN: ndpi_strncasestr--check_content_type_and_change_protocol--ndpi_check_http_tcp
0x6070000000d9 is located 0 bytes to the right of 73-byte region [0x607000000090,0x6070000000d9)
allocated by thread T0 here:
    #0 0x523c7d in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:129:3
    #1 0x437027 in operator new(unsigned long) cxa_noexception.cpp
    #2 0x441022 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #3 0x44686c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #4 0x46f462 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #5 0x7f84ac1e7082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)

DEDUP_TOKEN: __interceptor_malloc--operator new(unsigned long)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/ndpi/src/lib/ndpi_main.c:7112:8 in ndpi_strncasestr
Shadow bytes around the buggy address:
  0x0c0e7fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c0e7fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c0e7fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c0e7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c0e7fff8000: fa fa fa fa 00 00 00 00 00 00 00 00 00 01 fa fa
=>0x0c0e7fff8010: fa fa 00 00 00 00 00 00 00 00 00[01]fa fa fa fa
  0x0c0e7fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0e7fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0e7fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0e7fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0e7fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==12==ABORTING
