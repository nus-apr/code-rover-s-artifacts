INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2329631986
INFO: Loaded 1 modules   (19281 inline 8-bit counters): 19281 [0xb0c838, 0xb11389), 
INFO: Loaded 1 PC tables (19281 PCs): 19281 [0x7f9e28,0x845338), 
/out/sleuthkit_fls_apfs_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x62100000753c at pc 0x0000006b8401 bp 0x7ffcd6d211d0 sp 0x7ffcd6d211c8
READ of size 2 at 0x62100000753c thread T0
SCARINESS: 14 (2-byte-read-heap-buffer-overflow)
    #0 0x6b8400 in std::__1::enable_if<true, void>::type APFSBtreeNodeIterator<APFSBtreeNode<apfs_omap_key, apfs_omap_value> >::init_value<void>() /src/sleuthkit/tsk/pool/./../img/../fs/tsk_apfs.hpp:163:55
    #1 0x6ba52c in APFSBtreeNodeIterator<APFSBtreeNode<apfs_omap_key, apfs_omap_value> >::APFSBtreeNodeIterator(lw_shared_ptr<APFSBtreeNode<apfs_omap_key, apfs_omap_value> >&&, unsigned int) /src/sleuthkit/tsk/pool/./../img/../fs/tsk_apfs.hpp:1184:3
    #2 0x6b88f4 in APFSBtreeNodeIterator<APFSBtreeNode<apfs_omap_key, apfs_omap_value> >::operator++() /src/sleuthkit/tsk/pool/./../img/../fs/tsk_apfs.hpp:273:20
    #3 0x6cce3c in APFSBtreeNode<apfs_omap_key, apfs_omap_value>::entries() const::'lambda'()::operator()() const::'lambda'(auto) std::__1::for_each<APFSBtreeNodeIterator<APFSBtreeNode<apfs_omap_key, apfs_omap_value> >, APFSBtreeNode<apfs_omap_key, apfs_omap_value>::entries() const::'lambda'()::operator()() const::'lambda'(auto)>(auto, auto, APFSBtreeNode<apfs_omap_key, apfs_omap_value>::entries() const::'lambda'()::operator()() const::'lambda'(auto)) /usr/local/bin/../include/c++/v1/algorithm:885:31
    #4 0x6cc989 in APFSBtreeNode<apfs_omap_key, apfs_omap_value>::entries() const::'lambda'()::operator()() const /src/sleuthkit/tsk/fs/./tsk_apfs.hpp:461:7
    #5 0x6c0a09 in APFSBtreeNode<apfs_omap_key, apfs_omap_value>::entries() const /src/sleuthkit/tsk/fs/./tsk_apfs.hpp:458:22
    #6 0x6c0578 in APFSSuperblock::volume_blocks() const /src/sleuthkit/tsk/fs/apfs.cpp:229:29
    #7 0x69ed72 in APFSPool::APFSPool(std::__1::vector<std::__1::pair<TSK_IMG_INFO* const, long const>, std::__1::allocator<std::__1::pair<TSK_IMG_INFO* const, long const> > >&&, unsigned long) /src/sleuthkit/tsk/pool/apfs_pool.cpp:74:23
    #8 0x6160e9 in TSKPoolCompat<APFSPool, void>::TSKPoolCompat<std::__1::vector<std::__1::pair<TSK_IMG_INFO* const, long const>, std::__1::allocator<std::__1::pair<TSK_IMG_INFO* const, long const> > >, unsigned long long>(TSK_POOL_TYPE_ENUM, std::__1::vector<std::__1::pair<TSK_IMG_INFO* const, long const>, std::__1::allocator<std::__1::pair<TSK_IMG_INFO* const, long const> > >&&, unsigned long long&&) /src/sleuthkit/tsk/pool/./pool_compat.hpp:35:9
    #9 0x61346d in APFSPoolCompat::APFSPoolCompat<std::__1::vector<std::__1::pair<TSK_IMG_INFO* const, long const>, std::__1::allocator<std::__1::pair<TSK_IMG_INFO* const, long const> > >, unsigned long long>(std::__1::vector<std::__1::pair<TSK_IMG_INFO* const, long const>, std::__1::allocator<std::__1::pair<TSK_IMG_INFO* const, long const> > >&&, unsigned long long&&) /src/sleuthkit/tsk/pool/./apfs_pool_compat.hpp:22:9
    #10 0x612bb7 in tsk_pool_open_img /src/sleuthkit/tsk/pool/pool_open.cpp:106:25
    #11 0x612229 in tsk_pool_open_img_sing /src/sleuthkit/tsk/pool/pool_open.cpp:78:10
    #12 0x5586c5 in LLVMFuzzerTestOneInput /src/sleuthkit_fls_apfs_fuzzer.cc:33:10
    #13 0x45b393 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #14 0x4451a2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #15 0x44afea in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #16 0x476cd2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #17 0x7b8f999d483f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #18 0x41fe88 in _start (/out/sleuthkit_fls_apfs_fuzzer+0x41fe88)

DEDUP_TOKEN: std::__1::enable_if<true, void>::type APFSBtreeNodeIterator<APFSBtreeNode<apfs_omap_key, apfs_omap_value> >::init_value<void>()--APFSBtreeNodeIterator<APFSBtreeNode<apfs_omap_key, apfs_omap_value> >::APFSBtreeNodeIterator(lw_shared_ptr<APFSBtreeNode<apfs_omap_key, apfs_omap_value> >&&, unsigned int)--APFSBtreeNodeIterator<APFSBtreeNode<apfs_omap_key, apfs_omap_value> >::operator++()
0x62100000753c is located 0 bytes to the right of 4156-byte region [0x621000006500,0x62100000753c)
allocated by thread T0 here:
    #0 0x555b4d in operator new[](unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:102:3
    #1 0x6b9a8a in lw_shared_ptr<APFSBtreeNode<apfs_omap_key, apfs_omap_value> >::lw_shared_ptr<APFSPool const&, unsigned long&, unsigned char const* const&>(in_place_t, APFSPool const&, unsigned long&, unsigned char const* const&) /src/sleuthkit/tsk/pool/./../fs/../util/lw_shared_ptr.hpp:90:16
    #2 0x6b983d in lw_shared_ptr<APFSBtreeNode<apfs_omap_key, apfs_omap_value> > make_lw_shared<APFSBtreeNode<apfs_omap_key, apfs_omap_value>, APFSPool const&, unsigned long&, unsigned char const* const&>(APFSPool const&, unsigned long&, unsigned char const* const&) /src/sleuthkit/tsk/pool/./../fs/../util/lw_shared_ptr.hpp:331:10
    #3 0x6b9442 in lw_shared_ptr<APFSBtreeNode<apfs_omap_key, apfs_omap_value> > APFSPool::get_block<APFSBtreeNode<apfs_omap_key, apfs_omap_value>, APFSPool const&, unsigned long&, unsigned char const* const&>(unsigned long, APFSPool const&, unsigned long&, unsigned char const* const&) const /src/sleuthkit/tsk/pool/./../fs/../pool/tsk_apfs.hpp:119:29
    #4 0x6b91d0 in APFSBtreeNodeIterator<APFSBtreeNode<apfs_omap_key, apfs_omap_value> >::own_node(APFSBtreeNode<apfs_omap_key, apfs_omap_value> const*, unsigned long) /src/sleuthkit/tsk/pool/./../img/../fs/tsk_apfs.hpp:129:33
    #5 0x6b7df3 in APFSBtreeNodeIterator<APFSBtreeNode<apfs_omap_key, apfs_omap_value> >::own_node(APFSBtreeNode<apfs_omap_key, apfs_omap_value> const*) /src/sleuthkit/tsk/pool/./../img/../fs/tsk_apfs.hpp:124:12
    #6 0x6b7bd9 in APFSBtreeNodeIterator<APFSBtreeNode<apfs_omap_key, apfs_omap_value> >::APFSBtreeNodeIterator(APFSBtreeNode<apfs_omap_key, apfs_omap_value> const*, unsigned int) /src/sleuthkit/tsk/pool/./../img/../fs/tsk_apfs.hpp:1166:13
    #7 0x6ccf0a in APFSBtreeNode<apfs_omap_key, apfs_omap_value>::begin() const /src/sleuthkit/tsk/fs/./tsk_apfs.hpp:487:35
    #8 0x6cc961 in APFSBtreeNode<apfs_omap_key, apfs_omap_value>::entries() const::'lambda'()::operator()() const /src/sleuthkit/tsk/fs/./tsk_apfs.hpp:461:21
    #9 0x6c0a09 in APFSBtreeNode<apfs_omap_key, apfs_omap_value>::entries() const /src/sleuthkit/tsk/fs/./tsk_apfs.hpp:458:22
    #10 0x6c0578 in APFSSuperblock::volume_blocks() const /src/sleuthkit/tsk/fs/apfs.cpp:229:29
    #11 0x69ed72 in APFSPool::APFSPool(std::__1::vector<std::__1::pair<TSK_IMG_INFO* const, long const>, std::__1::allocator<std::__1::pair<TSK_IMG_INFO* const, long const> > >&&, unsigned long) /src/sleuthkit/tsk/pool/apfs_pool.cpp:74:23
    #12 0x6160e9 in TSKPoolCompat<APFSPool, void>::TSKPoolCompat<std::__1::vector<std::__1::pair<TSK_IMG_INFO* const, long const>, std::__1::allocator<std::__1::pair<TSK_IMG_INFO* const, long const> > >, unsigned long long>(TSK_POOL_TYPE_ENUM, std::__1::vector<std::__1::pair<TSK_IMG_INFO* const, long const>, std::__1::allocator<std::__1::pair<TSK_IMG_INFO* const, long const> > >&&, unsigned long long&&) /src/sleuthkit/tsk/pool/./pool_compat.hpp:35:9
    #13 0x61346d in APFSPoolCompat::APFSPoolCompat<std::__1::vector<std::__1::pair<TSK_IMG_INFO* const, long const>, std::__1::allocator<std::__1::pair<TSK_IMG_INFO* const, long const> > >, unsigned long long>(std::__1::vector<std::__1::pair<TSK_IMG_INFO* const, long const>, std::__1::allocator<std::__1::pair<TSK_IMG_INFO* const, long const> > >&&, unsigned long long&&) /src/sleuthkit/tsk/pool/./apfs_pool_compat.hpp:22:9
    #14 0x612bb7 in tsk_pool_open_img /src/sleuthkit/tsk/pool/pool_open.cpp:106:25
    #15 0x612229 in tsk_pool_open_img_sing /src/sleuthkit/tsk/pool/pool_open.cpp:78:10
    #16 0x5586c5 in LLVMFuzzerTestOneInput /src/sleuthkit_fls_apfs_fuzzer.cc:33:10
    #17 0x45b393 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #18 0x4451a2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #19 0x44afea in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #20 0x476cd2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #21 0x7b8f999d483f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: operator new[](unsigned long)--lw_shared_ptr<APFSBtreeNode<apfs_omap_key, apfs_omap_value> >::lw_shared_ptr<APFSPool const&, unsigned long&, unsigned char const* const&>(in_place_t, APFSPool const&, unsigned long&, unsigned char const* const&)--lw_shared_ptr<APFSBtreeNode<apfs_omap_key, apfs_omap_value> > make_lw_shared<APFSBtreeNode<apfs_omap_key, apfs_omap_value>, APFSPool const&, unsigned long&, unsigned char const* const&>(APFSPool const&, unsigned long&, unsigned char const* const&)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/sleuthkit/tsk/pool/./../img/../fs/tsk_apfs.hpp:163:55 in std::__1::enable_if<true, void>::type APFSBtreeNodeIterator<APFSBtreeNode<apfs_omap_key, apfs_omap_value> >::init_value<void>()
Shadow bytes around the buggy address:
  0x0c427fff8e50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c427fff8e60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c427fff8e70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c427fff8e80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c427fff8e90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c427fff8ea0: 00 00 00 00 00 00 00[04]fa fa fa fa fa fa fa fa
  0x0c427fff8eb0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c427fff8ec0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c427fff8ed0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c427fff8ee0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c427fff8ef0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
