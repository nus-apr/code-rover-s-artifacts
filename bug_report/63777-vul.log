INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2319810993
INFO: Loaded 1 modules   (43687 inline 8-bit counters): 43687 [0xe5a450, 0xe64ef7), 
INFO: Loaded 1 PC tables (43687 PCs): 43687 [0xe64ef8,0xf0f968), 
/out/FuzzTTF: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==12==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6120000008e2 at pc 0x00000056e43a bp 0x7ffdedb60820 sp 0x7ffdedb60818
READ of size 1 at 0x6120000008e2 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x56e439 in OpenType::be_u32(unsigned char const*) /src/serenity/Userland/Libraries/LibGfx/Font/OpenType/Font.cpp:37:43
    #1 0x5d410d in OpenType::Cmap::subtable(unsigned int) const /src/serenity/Userland/Libraries/LibGfx/Font/OpenType/Cmap.cpp:71:27
    #2 0x574ce2 in OpenType::Font::try_load_from_offset(AK::Span<unsigned char const>, unsigned int) /src/serenity/Userland/Libraries/LibGfx/Font/OpenType/Font.cpp:521:34
    #3 0x572ce2 in OpenType::Font::try_load_from_externally_owned_memory(AK::Span<unsigned char const>, unsigned int) /src/serenity/Userland/Libraries/LibGfx/Font/OpenType/Font.cpp
    #4 0x56e09c in LLVMFuzzerTestOneInput /src/serenity/Meta/Lagom/Fuzzers/FuzzTTF.cpp:13:11
    #5 0x43fa13 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #6 0x42b172 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #7 0x430a1c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #8 0x459f52 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #9 0x7b2d31817082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #10 0x42133d in _start (/out/FuzzTTF+0x42133d)

DEDUP_TOKEN: OpenType::be_u32(unsigned char const*)--OpenType::Cmap::subtable(unsigned int) const--OpenType::Font::try_load_from_offset(AK::Span<unsigned char const>, unsigned int)
0x6120000008e2 is located 0 bytes to the right of 290-byte region [0x6120000007c0,0x6120000008e2)
allocated by thread T0 here:
    #0 0x530ba6 in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x4af5a7 in operator new(unsigned long) cxa_noexception.cpp
    #2 0x42b172 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #3 0x430a1c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #4 0x459f52 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #5 0x7b2d31817082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)

DEDUP_TOKEN: __interceptor_malloc--operator new(unsigned long)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/serenity/Userland/Libraries/LibGfx/Font/OpenType/Font.cpp:37:43 in OpenType::be_u32(unsigned char const*)
Shadow bytes around the buggy address:
  0x0c247fff80c0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c247fff80d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c247fff80e0: 00 00 00 00 00 00 00 00 00 00 00 00 02 fa fa fa
  0x0c247fff80f0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c247fff8100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c247fff8110: 00 00 00 00 00 00 00 00 00 00 00 00[02]fa fa fa
  0x0c247fff8120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c247fff8130: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c247fff8140: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c247fff8150: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c247fff8160: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==12==ABORTING
