INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2249765276
INFO: Loaded 1 modules   (555921 inline 8-bit counters): 555921 [0x48efd60, 0x49778f1), 
INFO: Loaded 1 PC tables (555921 PCs): 555921 [0x3de6488,0x4661d98), 
/out/llvmfuzz: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==12==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60d000000196 at pc 0x00000056baf0 bp 0x7ffea0bb4910 sp 0x7ffea0bb4908
READ of size 1 at 0x60d000000196 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x56baef in bit_read_BB /src/libredwg/src/bits.c:186:10
    #1 0x72160f in dwg_decode_entity /src/libredwg/src/./common_entity_data.spec:277:7
    #2 0x970142 in dwg_decode_OLE2FRAME_private /src/libredwg/src/./dwg.spec:5274:1
    #3 0x69e599 in dwg_decode_OLE2FRAME /src/libredwg/src/./dwg.spec:5274:1
    #4 0x68f69c in dwg_decode_add_object /src/libredwg/src/decode.c:5107:15
    #5 0x58f618 in decode_R13_R2000 /src/libredwg/src/decode.c:740:19
    #6 0x585bb0 in dwg_decode /src/libredwg/src/decode.c:219:36
    #7 0x56a062 in LLVMFuzzerTestOneInput /src/libredwg/examples/llvmfuzz.c:91:13
    #8 0x43deb3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #9 0x429612 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #10 0x42eebc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #11 0x4583f2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #12 0x71465bf4f082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #13 0x41f7dd in _start (/out/llvmfuzz+0x41f7dd)

DEDUP_TOKEN: bit_read_BB--dwg_decode_entity--dwg_decode_OLE2FRAME_private
0x60d000000196 is located 0 bytes to the right of 134-byte region [0x60d000000110,0x60d000000196)
allocated by thread T0 here:
    #0 0x52f046 in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x4ada47 in operator new(unsigned long) cxa_noexception.cpp
    #2 0x429612 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #3 0x42eebc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #4 0x4583f2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #5 0x71465bf4f082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)

DEDUP_TOKEN: malloc--operator new(unsigned long)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/libredwg/src/bits.c:186:10 in bit_read_BB
Shadow bytes around the buggy address:
  0x0c1a7fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c1a7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c1a7fff8000: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c1a7fff8010: 00 00 00 00 00 00 00 00 06 fa fa fa fa fa fa fa
  0x0c1a7fff8020: fa fa 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c1a7fff8030: 00 00[06]fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c1a7fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c1a7fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c1a7fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c1a7fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c1a7fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==12==ABORTING
