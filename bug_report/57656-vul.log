INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2271794679
INFO: Loaded 1 modules   (208024 inline 8-bit counters): 208024 [0x1cbb0c0, 0x1cedd58), 
INFO: Loaded 1 PC tables (208024 PCs): 208024 [0x1cedd58,0x201a6d8), 
/out/assimp_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
Info,  T0: Load $$$___magic___$$$.
Info,  T0: Found a matching importer for this file format: LightWave Scene Importer.
Info,  T0: Import root directory is './'
Info,  T0: LWS file format version is Ó-1"d3doidr
Warn,  T0: Invalid path: ../.././/d.x0d
Warn,  T0: Invalid path: ../.././/d.x3d
Warn,  T0: Invalid path: ../.././/d.x0d
Warn,  T0: Invalid path: ../.././/d.x3d
Warn,  T0: Invalid path: ../.././/d.x0d
Warn,  T0: Invalid path: ../.././/d.x3d
Warn,  T0: Invalid path: ../.././/d.x0d
Warn,  T0: Invalid path: ../.././/d.x3d
Warn,  T0: Invalid path: ../.././/d.x0d
Warn,  T0: Invalid path: ../.././/d.x3d
Info,  T0: %%% BEGIN EXTERNAL FILE %%%
Info,  T0: File: ../.././/d.x0d
Info,  T0: Load ../.././/d.x0d
Info,  T0: File extension not known, trying signature-based detection
Error, T0: No suitable reader found for the file format of file "../.././/d.x0d".
Info,  T0: %%% END EXTERNAL FILE %%%
Info,  T0: %%% BEGIN EXTERNAL FILE %%%
Info,  T0: File: ../.././/d.x3d
Info,  T0: Load ../.././/d.x3d
Info,  T0: File extension not known, trying signature-based detection
Info,  T0: Found a matching importer for this file format: Extensible 3D(X3D) Importer.
Info,  T0: Import root directory is '../.././'
Info,  T0: %%% END EXTERNAL FILE %%%
Error, T0: LWS: Failed to read external file ../.././/d.x0d
=================================================================
==13==ERROR: AddressSanitizer: heap-use-after-free on address 0x61a000000c88 at pc 0x000000637db6 bp 0x7fff09e72210 sp 0x7fff09e72208
READ of size 8 at 0x61a000000c88 thread T0
SCARINESS: 51 (8-byte-read-heap-use-after-free)
    #0 0x637db5 in aiScene::~aiScene() /src/assimp/code/Common/Version.cpp:146:12
    #1 0x15ced0e in Assimp::BatchLoader::~BatchLoader() /src/assimp/code/Common/BaseImporter.cpp:536:9
    #2 0x934ab7 in Assimp::LWSImporter::InternReadFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, aiScene*, Assimp::IOSystem*) /src/assimp/code/AssetLib/LWS/LWSLoader.cpp:935:1
    #3 0x15c8044 in Assimp::BaseImporter::ReadFile(Assimp::Importer*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Assimp::IOSystem*) /src/assimp/code/Common/BaseImporter.cpp:112:9
    #4 0x61d059 in Assimp::Importer::ReadFile(char const*, unsigned int) /src/assimp/code/Common/Importer.cpp:675:30
    #5 0x61b4b0 in Assimp::Importer::ReadFileFromMemory(void const*, unsigned long, unsigned int, char const*) /src/assimp/code/Common/Importer.cpp:512:5
    #6 0x561772 in LLVMFuzzerTestOneInput /src/assimp/fuzz/assimp_fuzzer.cc:53:34
    #7 0x4585d3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) cxa_noexception.cpp
    #8 0x444212 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #9 0x449a6c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) cxa_noexception.cpp
    #10 0x472872 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #11 0x7c9dff1a3082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)
    #12 0x4229cd in _start (/out/assimp_fuzzer+0x4229cd)

DEDUP_TOKEN: aiScene::~aiScene()--Assimp::BatchLoader::~BatchLoader()--Assimp::LWSImporter::InternReadFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, aiScene*, Assimp::IOSystem*)
0x61a000000c88 is located 8 bytes inside of 1160-byte region [0x61a000000c80,0x61a000001108)
freed by thread T0 here:
    #0 0x55f8ad in operator delete(void*) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:152:3
    #1 0x15fca0b in Assimp::SceneCombiner::MergeScenes(aiScene**, aiScene*, std::__1::vector<Assimp::AttachmentInfo, std::__1::allocator<Assimp::AttachmentInfo> >&, unsigned int) /src/assimp/code/Common/SceneCombiner.cpp:661:9
    #2 0x9343f0 in Assimp::LWSImporter::InternReadFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, aiScene*, Assimp::IOSystem*) /src/assimp/code/AssetLib/LWS/LWSLoader.cpp:921:5
    #3 0x15c8044 in Assimp::BaseImporter::ReadFile(Assimp::Importer*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Assimp::IOSystem*) /src/assimp/code/Common/BaseImporter.cpp:112:9
    #4 0x61d059 in Assimp::Importer::ReadFile(char const*, unsigned int) /src/assimp/code/Common/Importer.cpp:675:30
    #5 0x61b4b0 in Assimp::Importer::ReadFileFromMemory(void const*, unsigned long, unsigned int, char const*) /src/assimp/code/Common/Importer.cpp:512:5
    #6 0x561772 in LLVMFuzzerTestOneInput /src/assimp/fuzz/assimp_fuzzer.cc:53:34
    #7 0x4585d3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) cxa_noexception.cpp
    #8 0x444212 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #9 0x449a6c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) cxa_noexception.cpp
    #10 0x472872 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #11 0x7c9dff1a3082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)

DEDUP_TOKEN: operator delete(void*)--Assimp::SceneCombiner::MergeScenes(aiScene**, aiScene*, std::__1::vector<Assimp::AttachmentInfo, std::__1::allocator<Assimp::AttachmentInfo> >&, unsigned int)--Assimp::LWSImporter::InternReadFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, aiScene*, Assimp::IOSystem*)
previously allocated by thread T0 here:
    #0 0x55f04d in operator new(unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:95:3
    #1 0x15c7fd5 in Assimp::BaseImporter::ReadFile(Assimp::Importer*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Assimp::IOSystem*) /src/assimp/code/Common/BaseImporter.cpp:108:33
    #2 0x61d059 in Assimp::Importer::ReadFile(char const*, unsigned int) /src/assimp/code/Common/Importer.cpp:675:30
    #3 0x15d1090 in ReadFile /src/assimp/include/assimp/Importer.hpp:670:12
    #4 0x15d1090 in Assimp::BatchLoader::LoadAll() /src/assimp/code/Common/BaseImporter.cpp:613:28
    #5 0x933acd in Assimp::LWSImporter::InternReadFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, aiScene*, Assimp::IOSystem*) /src/assimp/code/AssetLib/LWS/LWSLoader.cpp:865:11
    #6 0x15c8044 in Assimp::BaseImporter::ReadFile(Assimp::Importer*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Assimp::IOSystem*) /src/assimp/code/Common/BaseImporter.cpp:112:9
    #7 0x61d059 in Assimp::Importer::ReadFile(char const*, unsigned int) /src/assimp/code/Common/Importer.cpp:675:30
    #8 0x61b4b0 in Assimp::Importer::ReadFileFromMemory(void const*, unsigned long, unsigned int, char const*) /src/assimp/code/Common/Importer.cpp:512:5
    #9 0x561772 in LLVMFuzzerTestOneInput /src/assimp/fuzz/assimp_fuzzer.cc:53:34
    #10 0x4585d3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) cxa_noexception.cpp
    #11 0x444212 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #12 0x449a6c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) cxa_noexception.cpp
    #13 0x472872 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #14 0x7c9dff1a3082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)

DEDUP_TOKEN: operator new(unsigned long)--Assimp::BaseImporter::ReadFile(Assimp::Importer*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Assimp::IOSystem*)--Assimp::Importer::ReadFile(char const*, unsigned int)
SUMMARY: AddressSanitizer: heap-use-after-free /src/assimp/code/Common/Version.cpp:146:12 in aiScene::~aiScene()
Shadow bytes around the buggy address:
  0x0c347fff8140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c347fff8150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c347fff8160: 00 fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c347fff8170: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c347fff8180: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x0c347fff8190: fd[fd]fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c347fff81a0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c347fff81b0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c347fff81c0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c347fff81d0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c347fff81e0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
