=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x616000000320 at pc 0x0000005507f5 bp 0x7fffb89c0890 sp 0x7fffb89c0888
READ of size 8 at 0x616000000320 thread T0
SCARINESS: 33 (8-byte-read-heap-buffer-overflow-far-from-bounds)
    #0 0x5507f4 in isvcd_process_residual_resample_mb /src/libavc/decoder/svc/isvcd_process_epslice.c:1873:42
    #1 0x55513d in isvcd_process_inter_mb_rsd_pred_target_lyr /src/libavc/decoder/svc/isvcd_process_epslice.c:2040:11
    #2 0x553440 in isvcd_decode_recon_tfr_nmb_non_base_lyr /src/libavc/decoder/svc/isvcd_process_epslice.c:1342:27
    #3 0x51e80b in isvcd_parse_inter_slice_data_cavlc_enh_lyr /src/libavc/decoder/svc/isvcd_parse_epslice.c:1926:23
    #4 0x5176f2 in isvcd_parse_epslice /src/libavc/decoder/svc/isvcd_parse_epslice.c:475:11
    #5 0x53c19d in isvcd_parse_decode_slice_ext_nal /src/libavc/decoder/svc/isvcd_parse_slice.c:1496:15
    #6 0x52fabf in isvcd_parse_nal_unit /src/libavc/decoder/svc/isvcd_parse_headers.c:1074:44
    #7 0x4f542c in isvcd_video_decode /src/libavc/decoder/svc/isvcd_api.c:5291:27
    #8 0x503498 in isvcd_api_function /src/libavc/decoder/svc/isvcd_api.c:7266:26
    #9 0x4e0454 in Codec::decodeFrame(unsigned char const*, unsigned long, unsigned long*) /src/libavc/fuzzer/svc_dec_fuzzer.cpp:375:11
    #10 0x4e1528 in LLVMFuzzerTestOneInput /src/libavc/fuzzer/svc_dec_fuzzer.cpp:437:22
    #11 0x4dd4cd in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:255:7
    #12 0x4dd2d8 in LLVMFuzzerRunDriver /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c
    #13 0x4dce98 in main /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:300:10
    #14 0x78e57ee9a082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #15 0x41e55d in _start (/out/svc_dec_fuzzer+0x41e55d)

DEDUP_TOKEN: isvcd_process_residual_resample_mb--isvcd_process_inter_mb_rsd_pred_target_lyr--isvcd_decode_recon_tfr_nmb_non_base_lyr
0x616000000320 is located 96 bytes to the left of 512-byte region [0x616000000380,0x616000000580)
allocated by thread T0 here:
    #0 0x4a04e7 in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x4dd5f1 in iv_aligned_malloc(void*, int, int) /src/libavc/fuzzer/svc_dec_fuzzer.cpp:85:13
    #2 0x4e8375 in isvcd_residual_resample_ctxt_create /src/libavc/decoder/svc/isvcd_api.c:2211:14
    #3 0x4e9642 in isvcd_allocate_static_bufs /src/libavc/decoder/svc/isvcd_api.c:2602:11
    #4 0x5033a9 in isvcd_create /src/libavc/decoder/svc/isvcd_api.c:2916:11
    #5 0x5033a9 in isvcd_api_function /src/libavc/decoder/svc/isvcd_api.c:7259:26
    #6 0x4e0e82 in Codec::createCodec() /src/libavc/fuzzer/svc_dec_fuzzer.cpp:153:11
    #7 0x4e0e82 in LLVMFuzzerTestOneInput /src/libavc/fuzzer/svc_dec_fuzzer.cpp:425:12
    #8 0x4dd4cd in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:255:7

DEDUP_TOKEN: posix_memalign--iv_aligned_malloc(void*, int, int)--isvcd_residual_resample_ctxt_create
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/libavc/decoder/svc/isvcd_process_epslice.c:1873:42 in isvcd_process_residual_resample_mb
Shadow bytes around the buggy address:
  0x0c2c7fff8010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2c7fff8020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2c7fff8030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2c7fff8040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2c7fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x0c2c7fff8060: fa fa fa fa[fa]fa fa fa fa fa fa fa fa fa fa fa
  0x0c2c7fff8070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2c7fff8080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2c7fff8090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2c7fff80a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2c7fff80b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
