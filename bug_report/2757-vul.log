INFO: Seed: 2249329723
INFO: Loaded 1 modules (12774 guards): [0x9c8200, 0x9d4998), 
/out/radio-receive-done-fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13:13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6030000001d4 at pc 0x0000005c8198 bp 0x7ffdcc948250 sp 0x7ffdcc948248
READ of size 2 at 0x6030000001d4 thread T0
SCARINESS: 14 (2-byte-read-heap-buffer-overflow)
    #0 0x5c8197 in ot::Lowpan::Lowpan::DecompressBaseHeader(ot::Ip6::Header&, ot::Mac::Address const&, ot::Mac::Address const&, unsigned char const*, unsigned short) /src/openthread/src/core/thread/lowpan.cpp:732:9
    #1 0x5c9379 in ot::Lowpan::Lowpan::Decompress(ot::Message&, ot::Mac::Address const&, ot::Mac::Address const&, unsigned char const*, unsigned short, unsigned short) /src/openthread/src/core/thread/lowpan.cpp:1058:5
    #2 0x558ac6 in ot::MeshForwarder::HandleFragment(unsigned char*, unsigned char, ot::Mac::Address const&, ot::Mac::Address const&, ot::ThreadMessageInfo const&) /src/openthread/src/core/thread/mesh_forwarder.cpp:2017:42
    #3 0x55849d in ot::MeshForwarder::HandleMesh(unsigned char*, unsigned char, ot::Mac::Address const&, ot::ThreadMessageInfo const&) /src/openthread/src/core/thread/mesh_forwarder.cpp:1904:13
    #4 0x55806d in ot::MeshForwarder::HandleReceivedFrame(ot::Mac::Frame&) /src/openthread/src/core/thread/mesh_forwarder.cpp:1824:13
    #5 0x531fda in ot::Mac::Mac::ReceiveDoneTask(ot::Mac::Frame*, otError) /src/openthread/src/core/mac/mac.cpp:1626:27
    #6 0x518a03 in LLVMFuzzerTestOneInput /src/openthread/tests/fuzz/radio_receive_done.cpp:67:5
    #7 0x635a4f in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:495:13
    #8 0x613d47 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:273:6
    #9 0x61ee3e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:690:9
    #10 0x6133a8 in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #11 0x73675a4bb83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #12 0x41ceb8 in _start (/out/radio-receive-done-fuzzer+0x41ceb8)

DEDUP_TOKEN: ot::Lowpan::Lowpan::DecompressBaseHeader(ot::Ip6::Header&, ot::Mac::Address const&, ot::Mac::Address const&, unsigned char const*, unsigned short)--ot::Lowpan::Lowpan::Decompress(ot::Message&, ot::Mac::Address const&, ot::Mac::Address const&, unsigned char const*, unsigned short, unsigned short)--ot::MeshForwarder::HandleFragment(unsigned char*, unsigned char, ot::Mac::Address const&, ot::Mac::Address const&, ot::ThreadMessageInfo const&)
0x6030000001d4 is located 0 bytes to the right of 20-byte region [0x6030000001c0,0x6030000001d4)
allocated by thread T0 here:
    #0 0x4ddeb8 in malloc /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:67
    #1 0x51897a in LLVMFuzzerTestOneInput /src/openthread/tests/fuzz/radio_receive_done.cpp:58:34
    #2 0x635a4f in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:495:13
    #3 0x613d47 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:273:6
    #4 0x61ee3e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:690:9
    #5 0x6133a8 in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #6 0x73675a4bb83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--LLVMFuzzerTestOneInput--fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/openthread/src/core/thread/lowpan.cpp:732:9 in ot::Lowpan::Lowpan::DecompressBaseHeader(ot::Ip6::Header&, ot::Mac::Address const&, ot::Mac::Address const&, unsigned char const*, unsigned short)
Shadow bytes around the buggy address:
  0x0c067fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c067fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c067fff8000: fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa 00 00
  0x0c067fff8010: 00 fa fa fa 00 00 00 00 fa fa 00 00 00 fa fa fa
  0x0c067fff8020: 00 00 00 fa fa fa 00 00 00 00 fa fa 00 00 04 fa
=>0x0c067fff8030: fa fa 00 00 04 fa fa fa 00 00[04]fa fa fa fa fa
  0x0c067fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13:13==ABORTING
