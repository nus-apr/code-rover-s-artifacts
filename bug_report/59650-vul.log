INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2294750115
INFO: Loaded 1 modules   (35450 inline 8-bit counters): 35450 [0xaa5c48, 0xaae6c2), 
INFO: Loaded 1 PC tables (35450 PCs): 35450 [0xaae6c8,0xb38e68), 
/out/FuzzTarget: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x604000013139 at pc 0x00000059eb4d bp 0x7ffd7198fb70 sp 0x7ffd7198fb68
READ of size 4 at 0x604000013139 thread T0
SCARINESS: 17 (4-byte-read-heap-buffer-overflow)
    #0 0x59eb4c in getDstIPv4Address /src/PcapPlusPlus/Packet++/header/IPv4Layer.h:491:67
    #1 0x59eb4c in LLVMFuzzerTestOneInput /src/PcapPlusPlus/Tests/Fuzzers/FuzzTarget.cpp:75:79
    #2 0x46f693 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #3 0x45adf2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #4 0x46069c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #5 0x489bd2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #6 0x7abe7d731082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #7 0x450fbd in _start (/out/FuzzTarget+0x450fbd)

DEDUP_TOKEN: getDstIPv4Address--LLVMFuzzerTestOneInput--fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long)
0x604000013139 is located 1 bytes to the right of 40-byte region [0x604000013110,0x604000013138)
allocated by thread T0 here:
    #0 0x59b77d in operator new[](unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:98:3
    #1 0x5a6bf6 in pcpp::PcapFileReaderDevice::getNextPacket(pcpp::RawPacket&) /src/PcapPlusPlus/Pcap++/src/PcapFileDevice.cpp:307:27
    #2 0x59e0c1 in LLVMFuzzerTestOneInput /src/PcapPlusPlus/Tests/Fuzzers/FuzzTarget.cpp:59:14
    #3 0x46f693 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #4 0x45adf2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #5 0x46069c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #6 0x489bd2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #7 0x7abe7d731082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)

DEDUP_TOKEN: operator new[](unsigned long)--pcpp::PcapFileReaderDevice::getNextPacket(pcpp::RawPacket&)--LLVMFuzzerTestOneInput
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/PcapPlusPlus/Packet++/header/IPv4Layer.h:491:67 in getDstIPv4Address
Shadow bytes around the buggy address:
  0x0c087fffa5d0: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00
  0x0c087fffa5e0: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00
  0x0c087fffa5f0: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00
  0x0c087fffa600: fa fa 00 00 00 00 00 00 fa fa fd fd fd fd fd fd
  0x0c087fffa610: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00
=>0x0c087fffa620: fa fa 00 00 00 00 00[fa]fa fa fa fa fa fa fa fa
  0x0c087fffa630: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fffa640: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fffa650: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fffa660: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fffa670: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
