======================= INFO =========================
This binary is built for AFL-fuzz.
To run the target function on individual input(s) execute this:
  /out/hb-subset-fuzzer < INPUT_FILE
or
  /out/hb-subset-fuzzer INPUT_FILE1 [INPUT_FILE2 ... ]
To fuzz with afl-fuzz execute this:
  afl-fuzz [afl-flags] /out/hb-subset-fuzzer [-N]
afl-fuzz will run N iterations before re-spawning the process (default: 1000)
======================================================
Reading 2648 bytes from /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60f0000001d9 at pc 0x00000059d073 bp 0x7fff05166c50 sp 0x7fff05166c48
READ of size 8 at 0x60f0000001d9 thread T0
SCARINESS: 23 (8-byte-read-heap-buffer-overflow)
    #0 0x59d072 in OT::LigatureSubstFormat1::closure(OT::hb_closure_context_t*) const /src/harfbuzz/src/./hb-ot-layout-gsub-table.hh:778:42
    #1 0x59ccd3 in _hb_void_t const* OT::hb_closure_context_t::dispatch<OT::LigatureSubstFormat1>(OT::LigatureSubstFormat1 const&) /src/harfbuzz/src/./hb-ot-layout-gsubgpos.hh:49:49
    #2 0x59b4f6 in OT::hb_closure_context_t::return_t OT::LigatureSubst::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) const /src/harfbuzz/src/./hb-ot-layout-gsub-table.hh:899:13
    #3 0x59ae15 in OT::hb_closure_context_t::return_t OT::SubstLookupSubTable::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*, unsigned int) const /src/harfbuzz/src/./hb-ot-layout-gsub-table.hh:1101:21
    #4 0x59abd5 in OT::hb_closure_context_t::return_t OT::Lookup::dispatch<OT::SubstLookupSubTable, OT::hb_closure_context_t>(OT::hb_closure_context_t*) const /src/harfbuzz/src/./hb-ot-layout-common.hh:643:71
    #5 0x57fa10 in OT::SubstLookup::closure(OT::hb_closure_context_t*, unsigned int) const /src/harfbuzz/src/./hb-ot-layout-gsub-table.hh:1157:42
    #6 0x573cde in hb_ot_layout_lookups_substitute_closure /src/harfbuzz/src/hb-ot-layout.cc:972:40
    #7 0x551d6a in _gsub_closure(hb_face_t*, hb_set_t*) /src/harfbuzz/src/hb-subset-plan.cc:66:3
    #8 0x55172e in _populate_gids_to_retain(hb_face_t*, hb_set_t const*, bool, hb_set_t*, hb_map_t*, hb_vector_t<unsigned int, 8u>*) /src/harfbuzz/src/hb-subset-plan.cc:104:5
    #9 0x551274 in hb_subset_plan_create(hb_face_t*, hb_subset_profile_t*, hb_subset_input_t*) /src/harfbuzz/src/hb-subset-plan.cc:161:3
    #10 0x532759 in hb_subset /src/harfbuzz/src/hb-subset.cc:213:28
    #11 0x530064 in trySubset(hb_face_t*, unsigned int const*, int, bool, bool) /src/harfbuzz/./test/fuzzing/hb-subset-fuzzer.cc:27:23
    #12 0x53012b in trySubset(hb_face_t*, unsigned int const*, int) /src/harfbuzz/./test/fuzzing/hb-subset-fuzzer.cc:42:7
    #13 0x5302a2 in LLVMFuzzerTestOneInput /src/harfbuzz/./test/fuzzing/hb-subset-fuzzer.cc:60:3
    #14 0x530791 in ExecuteFilesOnyByOne(int, char**) /src/libfuzzer/afl/afl_driver.cpp:301:5
    #15 0x530d3e in main /src/libfuzzer/afl/afl_driver.cpp:339:12
    #16 0x7ee3da92683f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #17 0x41cd68 in _start (/out/hb-subset-fuzzer+0x41cd68)

DEDUP_TOKEN: OT::LigatureSubstFormat1::closure(OT::hb_closure_context_t*) const--_hb_void_t const* OT::hb_closure_context_t::dispatch<OT::LigatureSubstFormat1>(OT::LigatureSubstFormat1 const&)--OT::hb_closure_context_t::return_t OT::LigatureSubst::dispatch<OT::hb_closure_context_t>(OT::hb_closure_context_t*) const
0x60f0000001d9 is located 5 bytes to the right of 164-byte region [0x60f000000130,0x60f0000001d4)
allocated by thread T0 here:
    #0 0x4eba9f in malloc /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:146
    #1 0x556fad in hb_blob_t::try_make_writable() /src/harfbuzz/src/hb-blob.cc:464:23
    #2 0x557b90 in hb_blob_get_data_writable /src/harfbuzz/src/hb-blob.cc:372:14
    #3 0x5a1009 in hb_blob_t* hb_sanitize_context_t::sanitize_blob<OT::GSUB>(hb_blob_t*) /src/harfbuzz/src/./hb-machinery.hh:382:17
    #4 0x5a0b26 in OT::GSUBGPOS::accelerator_t<OT::GSUB>::init(hb_face_t*) /src/harfbuzz/src/./hb-ot-layout-gsubgpos.hh:2389:44
    #5 0x5a0a23 in hb_lazy_loader_t<OT::GSUB_accelerator_t, hb_face_lazy_loader_t<OT::GSUB_accelerator_t, 12u>, hb_face_t, 12u, OT::GSUB_accelerator_t>::create(hb_face_t*) /src/harfbuzz/src/./hb-machinery.hh:795:10
    #6 0x5a083c in hb_lazy_loader_t<OT::GSUB_accelerator_t, hb_face_lazy_loader_t<OT::GSUB_accelerator_t, 12u>, hb_face_t, 12u, OT::GSUB_accelerator_t>::do_create() const /src/harfbuzz/src/./hb-machinery.hh:732:32
    #7 0x5a078b in hb_lazy_loader_t<OT::GSUB_accelerator_t, hb_face_lazy_loader_t<OT::GSUB_accelerator_t, 12u>, hb_face_t, 12u, OT::GSUB_accelerator_t>::get_stored() const /src/harfbuzz/src/./hb-machinery.hh:757:11
    #8 0x5a071c in hb_lazy_loader_t<OT::GSUB_accelerator_t, hb_face_lazy_loader_t<OT::GSUB_accelerator_t, 12u>, hb_face_t, 12u, OT::GSUB_accelerator_t>::get() const /src/harfbuzz/src/./hb-machinery.hh:782:69
    #9 0x573361 in _get_gsub(hb_face_t*) /src/harfbuzz/src/hb-ot-layout.cc:72:11
    #10 0x57160b in get_gsubgpos_table(hb_face_t*, unsigned int) /src/harfbuzz/src/hb-ot-layout.cc:296:33
    #11 0x5715a3 in hb_ot_layout_table_get_script_tags /src/harfbuzz/src/hb-ot-layout.cc:310:27
    #12 0x57269f in hb_ot_layout_collect_features /src/harfbuzz/src/hb-ot-layout.cc:760:26
    #13 0x572ba1 in hb_ot_layout_collect_lookups /src/harfbuzz/src/hb-ot-layout.cc:804:3
    #14 0x551d5b in _gsub_closure(hb_face_t*, hb_set_t*) /src/harfbuzz/src/hb-subset-plan.cc:60:3
    #15 0x55172e in _populate_gids_to_retain(hb_face_t*, hb_set_t const*, bool, hb_set_t*, hb_map_t*, hb_vector_t<unsigned int, 8u>*) /src/harfbuzz/src/hb-subset-plan.cc:104:5
    #16 0x551274 in hb_subset_plan_create(hb_face_t*, hb_subset_profile_t*, hb_subset_input_t*) /src/harfbuzz/src/hb-subset-plan.cc:161:3
    #17 0x532759 in hb_subset /src/harfbuzz/src/hb-subset.cc:213:28
    #18 0x530064 in trySubset(hb_face_t*, unsigned int const*, int, bool, bool) /src/harfbuzz/./test/fuzzing/hb-subset-fuzzer.cc:27:23
    #19 0x53012b in trySubset(hb_face_t*, unsigned int const*, int) /src/harfbuzz/./test/fuzzing/hb-subset-fuzzer.cc:42:7
    #20 0x5302a2 in LLVMFuzzerTestOneInput /src/harfbuzz/./test/fuzzing/hb-subset-fuzzer.cc:60:3
    #21 0x530791 in ExecuteFilesOnyByOne(int, char**) /src/libfuzzer/afl/afl_driver.cpp:301:5
    #22 0x530d3e in main /src/libfuzzer/afl/afl_driver.cpp:339:12
    #23 0x7ee3da92683f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--hb_blob_t::try_make_writable()--hb_blob_get_data_writable
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/harfbuzz/src/./hb-ot-layout-gsub-table.hh:778:42 in OT::LigatureSubstFormat1::closure(OT::hb_closure_context_t*) const
Shadow bytes around the buggy address:
  0x0c1e7fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c1e7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c1e7fff8000: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c1e7fff8010: 00 00 00 00 00 00 00 00 00 00 00 00 00 fa fa fa
  0x0c1e7fff8020: fa fa fa fa fa fa 00 00 00 00 00 00 00 00 00 00
=>0x0c1e7fff8030: 00 00 00 00 00 00 00 00 00 00 04[fa]fa fa fa fa
  0x0c1e7fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c1e7fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c1e7fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c1e7fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c1e7fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
