======================= INFO =========================
This binary is built for AFL-fuzz.
To run the target function on individual input(s) execute this:
  /out/kimgio_fuzzer < INPUT_FILE
or
  /out/kimgio_fuzzer INPUT_FILE1 [INPUT_FILE2 ... ]
To fuzz with afl-fuzz execute this:
  afl-fuzz [afl-flags] /out/kimgio_fuzzer [-N]
afl-fuzz will run N iterations before re-spawning the process (default: 1000)
======================================================
Reading 136 bytes from /tmp/poc
kf5.karchive: directory  "/" has no entry with name  "_rels"
kf5.karchive: directory  "d" has entry "_rels" already
=================================================================
==13==ERROR: AddressSanitizer: heap-use-after-free on address 0x603000001a20 at pc 0x000001996be6 bp 0x7ffe18ea91f0 sp 0x7ffe18ea91e8
READ of size 8 at 0x603000001a20 thread T0
SCARINESS: 51 (8-byte-read-heap-use-after-free)
    #0 0x1996be5 in void qDeleteAll<QHash<QString, KArchiveEntry*>::const_iterator>(QHash<QString, KArchiveEntry*>::const_iterator, QHash<QString, KArchiveEntry*>::const_iterator) /src/qtbase/include/QtCore/../../src/corelib/tools/qalgorithms.h:320:9
    #1 0x19930fc in KArchiveDirectoryPrivate::~KArchiveDirectoryPrivate() /src/karchive/src/karchive.cpp:792:9
    #2 0x19930af in KArchiveDirectory::~KArchiveDirectory() /src/karchive/src/karchive.cpp:812:5
    #3 0x199312c in KArchiveDirectory::~KArchiveDirectory() /src/karchive/src/karchive.cpp:811:1
    #4 0x1996b2c in void qDeleteAll<QHash<QString, KArchiveEntry*>::const_iterator>(QHash<QString, KArchiveEntry*>::const_iterator, QHash<QString, KArchiveEntry*>::const_iterator) /src/qtbase/include/QtCore/../../src/corelib/tools/qalgorithms.h:320:9
    #5 0x19930fc in KArchiveDirectoryPrivate::~KArchiveDirectoryPrivate() /src/karchive/src/karchive.cpp:792:9
    #6 0x19930af in KArchiveDirectory::~KArchiveDirectory() /src/karchive/src/karchive.cpp:812:5
    #7 0x199312c in KArchiveDirectory::~KArchiveDirectory() /src/karchive/src/karchive.cpp:811:1
    #8 0x198d001 in KArchive::close() /src/karchive/src/karchive.cpp:184:5
    #9 0x19a0f04 in KZip::~KZip() /src/karchive/src/kzip.cpp:434:9
    #10 0x4cdcaa in KraHandler::read(QImage*) /src/kimageformats/src/imageformats/kra.cpp:50:1
    #11 0x4cbe6d in LLVMFuzzerTestOneInput /src/kimgio_fuzzer.cc:65:12
    #12 0x1963a7a in ExecuteFilesOnyByOne(int, char**) /src/libfuzzer/afl/afl_driver.cpp:156:5
    #13 0x1963ce1 in main /src/libfuzzer/afl/afl_driver.cpp:193:12
    #14 0x77a8ab45983f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #15 0x4224f8 in _start (/out/kimgio_fuzzer+0x4224f8)

DEDUP_TOKEN: void qDeleteAll<QHash<QString, KArchiveEntry*>::const_iterator>(QHash<QString, KArchiveEntry*>::const_iterator, QHash<QString, KArchiveEntry*>::const_iterator)--KArchiveDirectoryPrivate::~KArchiveDirectoryPrivate()--KArchiveDirectory::~KArchiveDirectory()
0x603000001a20 is located 0 bytes inside of 32-byte region [0x603000001a20,0x603000001a40)
freed by thread T0 here:
    #0 0x4c9c3d in operator delete(void*) /src/llvm/projects/compiler-rt/lib/asan/asan_new_delete.cc:166:3
    #1 0x1990463 in KArchivePrivate::findOrCreate(QString const&, int) /src/karchive/src/karchive.cpp:491:13
    #2 0x19a2ec0 in KZip::openArchive(QFlags<QIODevice::OpenModeFlag>) /src/karchive/src/kzip.cpp:757:47
    #3 0x198bca0 in KArchive::open(QFlags<QIODevice::OpenModeFlag>) /src/karchive/src/karchive.cpp:113:12
    #4 0x4cdb10 in KraHandler::read(QImage*) /src/kimageformats/src/imageformats/kra.cpp:40:14
    #5 0x4cbe6d in LLVMFuzzerTestOneInput /src/kimgio_fuzzer.cc:65:12
    #6 0x1963a7a in ExecuteFilesOnyByOne(int, char**) /src/libfuzzer/afl/afl_driver.cpp:156:5
    #7 0x1963ce1 in main /src/libfuzzer/afl/afl_driver.cpp:193:12
    #8 0x77a8ab45983f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: operator delete(void*)--KArchivePrivate::findOrCreate(QString const&, int)--KZip::openArchive(QFlags<QIODevice::OpenModeFlag>)
previously allocated by thread T0 here:
    #0 0x4c93dd in operator new(unsigned long) /src/llvm/projects/compiler-rt/lib/asan/asan_new_delete.cc:105:3
    #1 0x19a29f3 in KZip::openArchive(QFlags<QIODevice::OpenModeFlag>) /src/karchive/src/kzip.cpp:740:25
    #2 0x198bca0 in KArchive::open(QFlags<QIODevice::OpenModeFlag>) /src/karchive/src/karchive.cpp:113:12
    #3 0x4cdb10 in KraHandler::read(QImage*) /src/kimageformats/src/imageformats/kra.cpp:40:14
    #4 0x4cbe6d in LLVMFuzzerTestOneInput /src/kimgio_fuzzer.cc:65:12
    #5 0x1963a7a in ExecuteFilesOnyByOne(int, char**) /src/libfuzzer/afl/afl_driver.cpp:156:5
    #6 0x1963ce1 in main /src/libfuzzer/afl/afl_driver.cpp:193:12
    #7 0x77a8ab45983f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: operator new(unsigned long)--KZip::openArchive(QFlags<QIODevice::OpenModeFlag>)--KArchive::open(QFlags<QIODevice::OpenModeFlag>)
SUMMARY: AddressSanitizer: heap-use-after-free /src/qtbase/include/QtCore/../../src/corelib/tools/qalgorithms.h:320:9 in void qDeleteAll<QHash<QString, KArchiveEntry*>::const_iterator>(QHash<QString, KArchiveEntry*>::const_iterator, QHash<QString, KArchiveEntry*>::const_iterator)
Shadow bytes around the buggy address:
  0x0c067fff82f0: fd fd fd fd fa fa fd fd fd fd fa fa fd fd fd fd
  0x0c067fff8300: fa fa fd fd fd fd fa fa fd fd fd fd fa fa fd fd
  0x0c067fff8310: fd fd fa fa fd fd fd fd fa fa fd fd fd fd fa fa
  0x0c067fff8320: 00 00 00 07 fa fa fd fd fd fd fa fa 00 00 00 00
  0x0c067fff8330: fa fa fd fd fd fd fa fa 00 00 00 00 fa fa 00 00
=>0x0c067fff8340: 00 00 fa fa[fd]fd fd fd fa fa 00 00 07 fa fa fa
  0x0c067fff8350: 00 00 06 fa fa fa 00 00 07 fa fa fa 00 00 00 fa
  0x0c067fff8360: fa fa 00 00 06 fa fa fa 00 00 00 01 fa fa 00 00
  0x0c067fff8370: 00 02 fa fa 00 00 00 01 fa fa 00 00 07 fa fa fa
  0x0c067fff8380: 00 00 04 fa fa fa 00 00 00 01 fa fa 00 00 00 00
  0x0c067fff8390: fa fa 00 00 00 fa fa fa 00 00 01 fa fa fa 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
