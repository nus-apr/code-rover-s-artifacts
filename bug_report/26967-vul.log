INFO: Seed: 2278867761
INFO: Loaded 1 modules   (117317 inline 8-bit counters): 117317 [0x15c1020, 0x15dda65), 
INFO: Loaded 1 PC tables (117317 PCs): 117317 [0x15dda68,0x17a7eb8), 
/out/adaptmap_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000000394 at pc 0x000000657f30 bp 0x7ffd92981a90 sp 0x7ffd92981a88
READ of size 4 at 0x606000000394 thread T0
SCARINESS: 45 (4-byte-read-heap-use-after-free)
    #0 0x657f2f in pixChangeRefcount /src/leptonica/src/pix1.c:1313:19
    #1 0x657f83 in pixFree /src/leptonica/src/pix1.c:646:5
    #2 0x655fbe in pixDestroy /src/leptonica/src/pix1.c:622:5
    #3 0x554455 in LLVMFuzzerTestOneInput /src/leptonica/prog/fuzzing/adaptmap_fuzzer.cc:70:3
    #4 0x458a81 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:595:15
    #5 0x443b52 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #6 0x449c0e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:852:9
    #7 0x471bf2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0x78c3d242683f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #9 0x41ee28 in _start (/out/adaptmap_fuzzer+0x41ee28)

DEDUP_TOKEN: pixChangeRefcount--pixFree--pixDestroy
0x606000000394 is located 20 bytes inside of 64-byte region [0x606000000380,0x6060000003c0)
freed by thread T0 here:
    #0 0x5215b2 in free /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:127:3
    #1 0x658009 in pixFree /src/leptonica/src/pix1.c:653:9
    #2 0x655fbe in pixDestroy /src/leptonica/src/pix1.c:622:5
    #3 0x55442c in LLVMFuzzerTestOneInput /src/leptonica/prog/fuzzing/adaptmap_fuzzer.cc:68:2
    #4 0x458a81 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:595:15
    #5 0x443b52 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #6 0x449c0e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:852:9
    #7 0x471bf2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0x78c3d242683f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: free--pixFree--pixDestroy
previously allocated by thread T0 here:
    #0 0x521992 in calloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:154:3
    #1 0x655bc0 in pixCreateHeader /src/leptonica/src/pix1.c:541:19
    #2 0x6554fc in pixCreateNoInit /src/leptonica/src/pix1.c:348:17
    #3 0x656415 in pixCreateTemplateNoInit /src/leptonica/src/pix1.c:417:17
    #4 0x65614b in pixCreateTemplate /src/leptonica/src/pix1.c:385:17
    #5 0x65813f in pixCopy /src/leptonica/src/pix1.c:710:21
    #6 0x5543b3 in LLVMFuzzerTestOneInput /src/leptonica/prog/fuzzing/adaptmap_fuzzer.cc:65:17
    #7 0x458a81 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:595:15
    #8 0x443b52 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #9 0x449c0e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:852:9
    #10 0x471bf2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #11 0x78c3d242683f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: calloc--pixCreateHeader--pixCreateNoInit
SUMMARY: AddressSanitizer: heap-use-after-free /src/leptonica/src/pix1.c:1313:19 in pixChangeRefcount
Shadow bytes around the buggy address:
  0x0c0c7fff8020: fd fd fd fd fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c0c7fff8030: fa fa fa fa fd fd fd fd fd fd fd fd fa fa fa fa
  0x0c0c7fff8040: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd
  0x0c0c7fff8050: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd
  0x0c0c7fff8060: fa fa fa fa fd fd fd fd fd fd fd fd fa fa fa fa
=>0x0c0c7fff8070: fd fd[fd]fd fd fd fd fd fa fa fa fa fa fa fa fa
  0x0c0c7fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0c7fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0c7fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0c7fff80b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0c7fff80c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
