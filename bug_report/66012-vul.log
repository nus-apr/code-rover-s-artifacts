=================================================================
==13==ERROR: AddressSanitizer: heap-use-after-free on address 0x629000000208 at pc 0x0000005e092f bp 0x7ffe9974edd0 sp 0x7ffe9974edc8
READ of size 1 at 0x629000000208 thread T0
SCARINESS: 40 (1-byte-read-heap-use-after-free)
    #0 0x5e092e in ftp_endofresp /src/curl/lib/ftp.c:537:19
    #1 0x65a787 in Curl_pp_readresp /src/curl/lib/pingpong.c:370:14
    #2 0x5dd642 in ftp_readresp /src/curl/lib/ftp.c:552:21
    #3 0x5dd642 in Curl_GetFTPResponse /src/curl/lib/ftp.c:687:14
    #4 0x5da108 in ftp_done /src/curl/lib/ftp.c:3346:14
    #5 0x51231d in multi_done /src/curl/lib/multi.c:682:14
    #6 0x51c9a5 in multi_runsingle /src/curl/lib/multi.c:2328:13
    #7 0x518432 in curl_multi_perform /src/curl/lib/multi.c:2780:16
    #8 0x4df2cf in fuzz_handle_transfer(fuzz_data*) /src/curl_fuzzer/curl_fuzzer.cc:419:5
    #9 0x4ddefc in LLVMFuzzerTestOneInput /src/curl_fuzzer/curl_fuzzer.cc:97:3
    #10 0x105f17d in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:255:7
    #11 0x105ef88 in LLVMFuzzerRunDriver /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c
    #12 0x105eb48 in main /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:300:10
    #13 0x74595a5c2082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #14 0x41f0ad in _start (/out/curl_fuzzer+0x41f0ad)

DEDUP_TOKEN: ftp_endofresp--Curl_pp_readresp--ftp_readresp
0x629000000208 is located 8 bytes inside of 16401-byte region [0x629000000200,0x629000004211)
freed by thread T0 here:
    #0 0x4a0242 in __interceptor_free /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:52:3
    #1 0x4fa84a in curl_dbg_free /src/curl/lib/memdebug.c:297:5
    #2 0x512ee7 in multi_done /src/curl/lib/multi.c:787:3
    #3 0x51afb9 in multi_runsingle /src/curl/lib/multi.c:2614:15
    #4 0x518432 in curl_multi_perform /src/curl/lib/multi.c:2780:16
    #5 0x4df2cf in fuzz_handle_transfer(fuzz_data*) /src/curl_fuzzer/curl_fuzzer.cc:419:5
    #6 0x4ddefc in LLVMFuzzerTestOneInput /src/curl_fuzzer/curl_fuzzer.cc:97:3
    #7 0x105f17d in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:255:7

DEDUP_TOKEN: __interceptor_free--curl_dbg_free--multi_done
previously allocated by thread T0 here:
    #0 0x4a04e6 in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x4f99a7 in curl_dbg_malloc /src/curl/lib/memdebug.c:146:9
    #2 0x51a44a in Curl_preconnect /src/curl/lib/multi.c:1895:26
    #3 0x51a44a in multi_runsingle /src/curl/lib/multi.c:1991:16
    #4 0x518432 in curl_multi_perform /src/curl/lib/multi.c:2780:16
    #5 0x4debdc in fuzz_handle_transfer(fuzz_data*) /src/curl_fuzzer/curl_fuzzer.cc:341:3
    #6 0x4ddefc in LLVMFuzzerTestOneInput /src/curl_fuzzer/curl_fuzzer.cc:97:3
    #7 0x105f17d in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:255:7

DEDUP_TOKEN: malloc--curl_dbg_malloc--Curl_preconnect
SUMMARY: AddressSanitizer: heap-use-after-free /src/curl/lib/ftp.c:537:19 in ftp_endofresp
Shadow bytes around the buggy address:
  0x0c527fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c527fff8000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c527fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c527fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c527fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x0c527fff8040: fd[fd]fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c527fff8050: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c527fff8060: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c527fff8070: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c527fff8080: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c527fff8090: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
