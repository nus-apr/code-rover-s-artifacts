INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2310079529
INFO: Loaded 1 modules   (26384 inline 8-bit counters): 26384 [0xc79e40, 0xc80550), 
INFO: Loaded 1 PC tables (26384 PCs): 26384 [0xc80550,0xce7650), 
/out/flb-it-fuzz-http_fuzzer_OSSFUZZ: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
[2024/10/25 05:39:08] [error] [http] requested buffer size 366 (bytes) needs to be greater than minimum size allowed 4096 (bytes)
[2024/10/25 05:39:08] [error] [http] requested buffer size 116 (bytes) needs to be greater than minimum size allowed 4096 (bytes)
=================================================================
==12==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61d000001282 at pc 0x000000585ee0 bp 0x7ffeed480930 sp 0x7ffeed480928
WRITE of size 1 at 0x61d000001282 thread T0
SCARINESS: 31 (1-byte-write-heap-buffer-overflow)
    #0 0x585edf in flb_http_do /src/fluent-bit/src/flb_http_client.c:1114:36
    #1 0x573941 in LLVMFuzzerTestOneInput /src/fluent-bit/tests/internal/fuzzers/http_fuzzer.c:70:9
    #2 0x47a9b1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #3 0x464742 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #4 0x46aa85 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #5 0x494932 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #6 0x77e315b6983f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #7 0x43f658 in _start (/out/flb-it-fuzz-http_fuzzer_OSSFUZZ+0x43f658)

DEDUP_TOKEN: flb_http_do--LLVMFuzzerTestOneInput--fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long)
0x61d000001282 is located 0 bytes to the right of 2050-byte region [0x61d000000a80,0x61d000001282)
allocated by thread T0 here:
    #0 0x543379 in realloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:164:3
    #1 0x584d19 in flb_realloc /src/fluent-bit/include/fluent-bit/flb_mem.h:91:11
    #2 0x585688 in flb_http_do /src/fluent-bit/src/flb_http_client.c:1105:15
    #3 0x573941 in LLVMFuzzerTestOneInput /src/fluent-bit/tests/internal/fuzzers/http_fuzzer.c:70:9
    #4 0x47a9b1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #5 0x464742 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #6 0x46aa85 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #7 0x494932 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0x77e315b6983f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: realloc--flb_realloc--flb_http_do
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/fluent-bit/src/flb_http_client.c:1114:36 in flb_http_do
Shadow bytes around the buggy address:
  0x0c3a7fff8200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3a7fff8210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3a7fff8220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3a7fff8230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3a7fff8240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c3a7fff8250:[02]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3a7fff8260: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3a7fff8270: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3a7fff8280: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3a7fff8290: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3a7fff82a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12==ABORTING
