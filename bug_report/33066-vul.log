INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2267273261
INFO: Loaded 1 modules   (134034 inline 8-bit counters): 134034 [0x15db970, 0x15fc502), 
INFO: Loaded 1 PC tables (134034 PCs): 134034 [0x15fc508,0x1807e28), 
/out/qtbase_corelib_time_qdatetime_fromstring: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x607000000df8 at pc 0x0000009bd10b bp 0x7ffe9b3c5130 sp 0x7ffe9b3c5128
READ of size 8 at 0x607000000df8 thread T0
SCARINESS: 23 (8-byte-read-heap-buffer-overflow)
    #0 0x9bd10a in isNull /work/qtbase/include/QtCore/../../../../src/qt/qtbase/src/corelib/tools/qarraydatapointer.h:137:17
    #1 0x9bd10a in isNull /src/qt/qtbase/src/corelib/text/qbytearray.cpp:3479:15
    #2 0x9bd10a in QByteArrayView<QByteArray, true> /work/qtbase/include/QtCore/../../../../src/qt/qtbase/src/corelib/text/qbytearrayview.h:196:29
    #3 0x9bd10a in indexOf /src/qt/qtbase/src/corelib/text/qbytearray.cpp:2479:44
    #4 0x9bd10a in QByteArray::split(char) const /src/qt/qtbase/src/corelib/text/qbytearray.cpp:2363:19
    #5 0x680503 in calculatePosixTransitions /src/qt/qtbase/src/corelib/time/qtimezoneprivate_tz.cpp:601:46
    #6 0x680503 in QTzTimeZonePrivate::getPosixTransitions(long long) const /src/qt/qtbase/src/corelib/time/qtimezoneprivate_tz.cpp:1052:12
    #7 0x679a04 in QTzTimeZonePrivate::data(long long) const /src/qt/qtbase/src/corelib/time/qtimezoneprivate_tz.cpp:1061:52
    #8 0x67e97f in QTzTimeZonePrivate::offsetFromUtc(long long) const /src/qt/qtbase/src/corelib/time/qtimezoneprivate_tz.cpp:1006:41
    #9 0x6b9b24 in QDateTimeParser::findTimeZoneName(QStringView, QDateTime const&) const /src/qt/qtbase/src/corelib/time/qdatetimeparser.cpp:1765:51
    #10 0x6abfaf in QDateTimeParser::findTimeZone(QStringView, QDateTime const&, int, int) const /src/qt/qtbase/src/corelib/time/qdatetimeparser.cpp:1789:19
    #11 0x6a7f71 in QDateTimeParser::parseSection(QDateTime const&, int, int) const /src/qt/qtbase/src/corelib/time/qdatetimeparser.cpp:797:18
    #12 0x6b1cdf in QDateTimeParser::scanString(QDateTime const&, bool) const /src/qt/qtbase/src/corelib/time/qdatetimeparser.cpp:1190:20
    #13 0x6b6344 in QDateTimeParser::parse(QString const&, int, QDateTime const&, bool) const /src/qt/qtbase/src/corelib/time/qdatetimeparser.cpp:1422:22
    #14 0x6bc732 in QDateTimeParser::fromString(QString const&, QDateTime*) const /src/qt/qtbase/src/corelib/time/qdatetimeparser.cpp:2152:27
    #15 0x615d63 in QDateTime::fromString(QString const&, QStringView, QCalendar) /src/qt/qtbase/src/corelib/time/qdatetime.cpp:5040:39
    #16 0x55fa46 in QDateTime::fromString(QString const&, QString const&, QCalendar) /work/build_fuzzer/../qtbase/include/QtCore/../../../../src/qt/qtbase/src/corelib/time/qdatetime.h:357:14
    #17 0x55f707 in LLVMFuzzerTestOneInput /src/qt/qtbase/tests/libfuzzer/corelib/time/qdatetime/fromstring/main.cpp:97:9
    #18 0x4622b3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #19 0x44c0f2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #20 0x451f5a in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #21 0x47dcd2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #22 0x723b31b2a83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #23 0x426d88 in _start (/out/qtbase_corelib_time_qdatetime_fromstring+0x426d88)

DEDUP_TOKEN: isNull--isNull--QByteArrayView<QByteArray, true>
0x607000000df8 is located 6 bytes to the right of 66-byte region [0x607000000db0,0x607000000df2)
allocated by thread T0 here:
    #0 0x52bd0d in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x6210dd in allocateData /src/qt/qtbase/src/corelib/tools/qarraydata.cpp:178:52
    #2 0x6210dd in QArrayData::allocate(QArrayData**, long long, long long, long long, QArrayData::AllocationOption) /src/qt/qtbase/src/corelib/tools/qarraydata.cpp:227:26
    #3 0x64ae7d in allocate /work/qtbase/include/QtCore/../../../../src/qt/qtbase/src/corelib/tools/qarraydata.h:141:24
    #4 0x64ae7d in QArrayDataPointer<QByteArray>::allocateGrow(QArrayDataPointer<QByteArray> const&, long long, QArrayData::GrowthPosition) /work/qtbase/include/QtCore/../../../../src/qt/qtbase/src/corelib/tools/qarraydatapointer.h:258:34
    #5 0x64a0c9 in QArrayDataPointer<QByteArray>::reallocateAndGrow(QArrayData::GrowthPosition, long long, QArrayDataPointer<QByteArray>*) /work/qtbase/include/QtCore/../../../../src/qt/qtbase/src/corelib/tools/qarraydatapointer.h:190:30
    #6 0x6657e6 in void QtPrivate::QMovableArrayOps<QByteArray>::emplace<QByteArray>(long long, QByteArray&&) /work/qtbase/include/QtCore/../../../../src/qt/qtbase/src/corelib/tools/qarraydataops.h:823:19
    #7 0x9bccc3 in emplaceBack<QByteArray> /work/qtbase/include/QtCore/../../../../src/qt/qtbase/src/corelib/tools/qlist.h:818:8
    #8 0x9bccc3 in append /work/qtbase/include/QtCore/../../../../src/qt/qtbase/src/corelib/tools/qlist.h:403:13
    #9 0x9bccc3 in QByteArray::split(char) const /src/qt/qtbase/src/corelib/text/qbytearray.cpp:2364:14
    #10 0x67fa73 in calculatePosixTransitions /src/qt/qtbase/src/corelib/time/qtimezoneprivate_tz.cpp:559:41
    #11 0x67fa73 in QTzTimeZonePrivate::getPosixTransitions(long long) const /src/qt/qtbase/src/corelib/time/qtimezoneprivate_tz.cpp:1052:12
    #12 0x679a04 in QTzTimeZonePrivate::data(long long) const /src/qt/qtbase/src/corelib/time/qtimezoneprivate_tz.cpp:1061:52
    #13 0x67e97f in QTzTimeZonePrivate::offsetFromUtc(long long) const /src/qt/qtbase/src/corelib/time/qtimezoneprivate_tz.cpp:1006:41
    #14 0x6b9b24 in QDateTimeParser::findTimeZoneName(QStringView, QDateTime const&) const /src/qt/qtbase/src/corelib/time/qdatetimeparser.cpp:1765:51
    #15 0x6abfaf in QDateTimeParser::findTimeZone(QStringView, QDateTime const&, int, int) const /src/qt/qtbase/src/corelib/time/qdatetimeparser.cpp:1789:19
    #16 0x6a7f71 in QDateTimeParser::parseSection(QDateTime const&, int, int) const /src/qt/qtbase/src/corelib/time/qdatetimeparser.cpp:797:18
    #17 0x6b1cdf in QDateTimeParser::scanString(QDateTime const&, bool) const /src/qt/qtbase/src/corelib/time/qdatetimeparser.cpp:1190:20
    #18 0x6b6344 in QDateTimeParser::parse(QString const&, int, QDateTime const&, bool) const /src/qt/qtbase/src/corelib/time/qdatetimeparser.cpp:1422:22
    #19 0x6bc732 in QDateTimeParser::fromString(QString const&, QDateTime*) const /src/qt/qtbase/src/corelib/time/qdatetimeparser.cpp:2152:27
    #20 0x615d63 in QDateTime::fromString(QString const&, QStringView, QCalendar) /src/qt/qtbase/src/corelib/time/qdatetime.cpp:5040:39
    #21 0x55fa46 in QDateTime::fromString(QString const&, QString const&, QCalendar) /work/build_fuzzer/../qtbase/include/QtCore/../../../../src/qt/qtbase/src/corelib/time/qdatetime.h:357:14
    #22 0x55f707 in LLVMFuzzerTestOneInput /src/qt/qtbase/tests/libfuzzer/corelib/time/qdatetime/fromstring/main.cpp:97:9
    #23 0x4622b3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #24 0x44c0f2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #25 0x451f5a in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #26 0x47dcd2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #27 0x723b31b2a83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--allocateData--QArrayData::allocate(QArrayData**, long long, long long, long long, QArrayData::AllocationOption)
SUMMARY: AddressSanitizer: heap-buffer-overflow /work/qtbase/include/QtCore/../../../../src/qt/qtbase/src/corelib/tools/qarraydatapointer.h:137:17 in isNull
Shadow bytes around the buggy address:
  0x0c0e7fff8160: fa fa fd fd fd fd fd fd fd fd fd fa fa fa fa fa
  0x0c0e7fff8170: 00 00 00 00 00 00 00 00 02 fa fa fa fa fa 00 00
  0x0c0e7fff8180: 00 00 00 00 00 00 02 fa fa fa fa fa fd fd fd fd
  0x0c0e7fff8190: fd fd fd fd fd fa fa fa fa fa fd fd fd fd fd fd
  0x0c0e7fff81a0: fd fd fd fa fa fa fa fa fd fd fd fd fd fd fd fd
=>0x0c0e7fff81b0: fd fa fa fa fa fa 00 00 00 00 00 00 00 00 02[fa]
  0x0c0e7fff81c0: fa fa fa fa 00 00 00 00 00 00 00 00 02 fa fa fa
  0x0c0e7fff81d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0e7fff81e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0e7fff81f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0e7fff8200: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
