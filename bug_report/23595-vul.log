Accepting input from '/tmp/poc'
Usage for fuzzing: honggfuzz -P [flags] -- /out/svg_dom
=================================================================
==13==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f15afeb0330 at pc 0x000000b4e26a bp 0x7ffe6bcfdd90 sp 0x7ffe6bcfdd88
WRITE of size 4 at 0x7f15afeb0330 thread T0
SCARINESS: 51 (4-byte-write-stack-buffer-overflow)
    #0 0xb4e269 in SkParse::FindNamedColor(char const*, unsigned long, unsigned int*) /src/skia/out/Fuzz/../../src/utils/SkParseColor.cpp:186:24
    #1 0x84f047 in SkSVGAttributeParser::parseNamedColorToken(unsigned int*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGAttributeParser.cpp:124:28
    #2 0x84fdb8 in SkSVGAttributeParser::parseColor(unsigned int*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGAttributeParser.cpp:226:18
    #3 0x851d07 in SkSVGAttributeParser::parsePaint(SkSVGPaint*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGAttributeParser.cpp:462:15
    #4 0x860f15 in (anonymous namespace)::SetPaintAttribute(sk_sp<SkSVGNode> const&, SkSVGAttribute, char const*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:43:17
    #5 0x85ad10 in (anonymous namespace)::set_string_attribute(sk_sp<SkSVGNode> const&, char const*, char const*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:424:10
    #6 0x8621bb in (anonymous namespace)::SetStyleAttributes(sk_sp<SkSVGNode> const&, SkSVGAttribute, char const*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:311:9
    #7 0x85ad10 in (anonymous namespace)::set_string_attribute(sk_sp<SkSVGNode> const&, char const*, char const*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:424:10
    #8 0x85b1ff in (anonymous namespace)::parse_node_attributes(SkDOM const&, SkDOMNode const*, sk_sp<SkSVGNode> const&, SkTHashMap<SkString, sk_sp<SkSVGNode>, SkGoodHash>*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:444:9
    #9 0x859dd6 in (anonymous namespace)::construct_svg_node(SkDOM const&, (anonymous namespace)::ConstructionContext const&, SkDOMNode const*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:473:5
    #10 0x859e49 in (anonymous namespace)::construct_svg_node(SkDOM const&, (anonymous namespace)::ConstructionContext const&, SkDOMNode const*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:478:38
    #11 0x859e49 in (anonymous namespace)::construct_svg_node(SkDOM const&, (anonymous namespace)::ConstructionContext const&, SkDOMNode const*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:478:38
    #12 0x859a92 in SkSVGDOM::MakeFromDOM(SkDOM const&) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:497:18
    #13 0x85a40a in SkSVGDOM::MakeFromStream(SkStream&) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:511:12
    #14 0x84b88b in FuzzSVG(sk_sp<SkData>) /src/skia/out/Fuzz/../../fuzz/oss_fuzz/FuzzSVG.cpp:18:27
    #15 0x84bd80 in LLVMFuzzerTestOneInput /src/skia/out/Fuzz/../../fuzz/oss_fuzz/FuzzSVG.cpp:37:5
    #16 0x83c3dd in main (/out/svg_dom+0x83c3dd)
    #17 0x7f15aaf9483f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #18 0x7984d8 in _start (/out/svg_dom+0x7984d8)

DEDUP_TOKEN: SkParse::FindNamedColor(char const*, unsigned long, unsigned int*)--SkSVGAttributeParser::parseNamedColorToken(unsigned int*)--SkSVGAttributeParser::parseColor(unsigned int*)
Address 0x7f15afeb0330 is located in stack of thread T0 at offset 48 in frame
    #0 0xb4e00f in SkParse::FindNamedColor(char const*, unsigned long, unsigned int*) /src/skia/out/Fuzz/../../src/utils/SkParseColor.cpp:155

DEDUP_TOKEN: SkParse::FindNamedColor(char const*, unsigned long, unsigned int*)
  This frame has 1 object(s):
    [32, 48) 'sixMatches' (line 157) <== Memory access at offset 48 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /src/skia/out/Fuzz/../../src/utils/SkParseColor.cpp:186:24 in SkParse::FindNamedColor(char const*, unsigned long, unsigned int*)
Shadow bytes around the buggy address:
  0x0fe335fce010: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0fe335fce020: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0fe335fce030: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0fe335fce040: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0fe335fce050: f1 f1 f1 f1 04 f3 f3 f3 f5 f5 f5 f5 f5 f5 f5 f5
=>0x0fe335fce060: f1 f1 f1 f1 00 00[f3]f3 00 00 00 00 00 00 00 00
  0x0fe335fce070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0fe335fce080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0fe335fce090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0fe335fce0a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0fe335fce0b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
