=================================================================
==13==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x782ef4563038 at pc 0x000000675ad6 bp 0x7ffce5139020 sp 0x7ffce5139018
READ of size 1 at 0x782ef4563038 thread T0
SCARINESS: 27 (1-byte-read-stack-buffer-overflow)
    #0 0x675ad5 in PfxEntry::test_condition(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /src/hunspell/src/hunspell/affentry.cxx:177:13
    #1 0x6686ae in PfxEntry::checkword(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, int, char, unsigned short) /src/hunspell/src/hunspell/affentry.cxx:242:9
    #2 0x5c4809 in AffixMgr::prefix_check(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, int, char, unsigned short) /src/hunspell/src/hunspell/affixmgr.cxx:1128:20
    #3 0x542a46 in SuggestMgr::checkword(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, int*, long*) /src/hunspell/src/hunspell/suggestmgr.cxx:1669:19
    #4 0x55c9e1 in SuggestMgr::twowords(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, char const*, int, bool) /src/hunspell/src/hunspell/suggestmgr.cxx:849:16
    #5 0x546a82 in SuggestMgr::suggest(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, char const*, int*) /src/hunspell/src/hunspell/suggestmgr.cxx:336:25
    #6 0x4fb747 in HunspellImpl::suggest_internal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool&, unsigned long&, int&) /src/hunspell/src/hunspell/hunspell.cxx:1031:22
    #7 0x4f7709 in HunspellImpl::suggest(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /src/hunspell/src/hunspell/hunspell.cxx:882:35
    #8 0x52b311 in Hunspell::suggest(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /src/hunspell/src/hunspell/hunspell.cxx:2043:18
    #9 0x4dfbdf in LLVMFuzzerTestOneInput /src/hunspell/./src/tools/affdicfuzzer.cxx:66:14
    #10 0x4de59a in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:234:7
    #11 0x4de36c in main /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:318:12
    #12 0x782ef4c73082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #13 0x41f71d in _start (/out/affdicfuzzer+0x41f71d)

DEDUP_TOKEN: PfxEntry::test_condition(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)--PfxEntry::checkword(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, int, char, unsigned short)--AffixMgr::prefix_check(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, int, char, unsigned short)
Address 0x782ef4563038 is located in stack of thread T0 at offset 56 in frame
    #0 0x66837f in PfxEntry::checkword(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, int, char, unsigned short) /src/hunspell/src/hunspell/affentry.cxx:217

DEDUP_TOKEN: PfxEntry::checkword(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, int, char, unsigned short)
  This frame has 1 object(s):
    [32, 56) 'tmpword' (line 231) <== Memory access at offset 56 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /src/hunspell/src/hunspell/affentry.cxx:177:13 in PfxEntry::test_condition(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
Shadow bytes around the buggy address:
  0x0f065e8a45b0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0f065e8a45c0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0f065e8a45d0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0f065e8a45e0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0f065e8a45f0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
=>0x0f065e8a4600: f1 f1 f1 f1 00 00 00[f3]f3 f3 f3 f3 00 00 00 00
  0x0f065e8a4610: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0f065e8a4620: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0f065e8a4630: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0f065e8a4640: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x0f065e8a4650: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
