Accepting input from '/tmp/poc'
Usage for fuzzing: honggfuzz -P [flags] -- /out/skruntimeeffect
=================================================================
==12==ERROR: AddressSanitizer: use-after-poison on address 0x631000000bb8 at pc 0x000000867257 bp 0x7ffd0e45a050 sp 0x7ffd0e45a048
READ of size 8 at 0x631000000bb8 thread T0
SCARINESS: 33 (8-byte-read-use-after-poison)
    #0 0x867256 in SkTArray<std::__1::unique_ptr<SkSL::Expression, std::__1::default_delete<SkSL::Expression> >, false>::begin() const /src/skia/out/Fuzz/../../include/private/SkTArray.h:360:16
    #1 0x9d142f in int SkSL::Constructor::getVecComponent<int>(int) const /src/skia/out/Fuzz/../../src/sksl/ir/SkSLConstructor.cpp:81:49
    #2 0x899c43 in SkSL::Constructor::getIVecComponent(int) const /src/skia/out/Fuzz/../../src/sksl/ir/SkSLConstructor.h:110:22
    #3 0x9d27c4 in SkSL::Constructor::compareConstant(SkSL::Context const&, SkSL::Expression const&) const /src/skia/out/Fuzz/../../src/sksl/ir/SkSLConstructor.cpp:46:55
    #4 0x9d420b in SkSL::PrefixExpression::compareConstant(SkSL::Context const&, SkSL::Expression const&) const /src/skia/out/Fuzz/../../src/sksl/ir/SkSLPrefixExpression.h:95:33
    #5 0x90a7b5 in std::__1::unique_ptr<SkSL::Expression, std::__1::default_delete<SkSL::Expression> > SkSL::IRGenerator::constantFoldVector<int>(SkSL::Expression const&, SkSL::Token::Kind, SkSL::Expression const&) const /src/skia/out/Fuzz/../../src/sksl/SkSLIRGenerator.cpp:1779:32
    #6 0x907af1 in SkSL::IRGenerator::constantFold(SkSL::Expression const&, SkSL::Token::Kind, SkSL::Expression const&) const /src/skia/out/Fuzz/../../src/sksl/SkSLIRGenerator.cpp:1939:20
    #7 0x8ff834 in SkSL::IRGenerator::convertBinaryExpression(SkSL::ASTNode const&) /src/skia/out/Fuzz/../../src/sksl/SkSLIRGenerator.cpp:2014:48
    #8 0x8ea713 in SkSL::IRGenerator::convertExpression(SkSL::ASTNode const&) /src/skia/out/Fuzz/../../src/sksl/SkSLIRGenerator.cpp:1350:26
    #9 0x8e1d98 in SkSL::IRGenerator::convertExpressionStatement(SkSL::ASTNode const&) /src/skia/out/Fuzz/../../src/sksl/SkSLIRGenerator.cpp:672:43
    #10 0x8dd959 in SkSL::IRGenerator::convertSingleStatement(SkSL::ASTNode const&) /src/skia/out/Fuzz/../../src/sksl/SkSLIRGenerator.cpp:206:55
    #11 0x8e3154 in SkSL::IRGenerator::convertStatement(SkSL::ASTNode const&) /src/skia/out/Fuzz/../../src/sksl/SkSLIRGenerator.cpp:228:47
    #12 0x8ddef1 in SkSL::IRGenerator::convertBlock(SkSL::ASTNode const&) /src/skia/out/Fuzz/../../src/sksl/SkSLIRGenerator.cpp:249:54
    #13 0x8f7472 in SkSL::IRGenerator::convertFunction(SkSL::ASTNode const&) /src/skia/out/Fuzz/../../src/sksl/SkSLIRGenerator.cpp:1091:45
    #14 0x91a21e in SkSL::IRGenerator::convertProgram(SkSL::Program::Kind, SkSL::Program::Settings const*, GrShaderCaps const*, SkSL::ParsedModule const&, bool, char const*, unsigned long, std::__1::vector<std::__1::unique_ptr<SkSL::ExternalValue, std::__1::default_delete<SkSL::ExternalValue> >, std::__1::allocator<std::__1::unique_ptr<SkSL::ExternalValue, std::__1::default_delete<SkSL::ExternalValue> > > > const*) /src/skia/out/Fuzz/../../src/sksl/SkSLIRGenerator.cpp:3079:23
    #15 0x885ac9 in SkSL::Compiler::convertProgram(SkSL::Program::Kind, SkSL::String, SkSL::Program::Settings const&, std::__1::vector<std::__1::unique_ptr<SkSL::ExternalValue, std::__1::default_delete<SkSL::ExternalValue> >, std::__1::allocator<std::__1::unique_ptr<SkSL::ExternalValue, std::__1::default_delete<SkSL::ExternalValue> > > > const*) /src/skia/out/Fuzz/../../src/sksl/SkSLCompiler.cpp:1596:46
    #16 0x6f82b5 in SkRuntimeEffect::Make(SkString) /src/skia/out/Fuzz/../../src/core/SkRuntimeEffect.cpp:159:30
    #17 0x501948 in FuzzSkRuntimeEffect_Once(sk_sp<SkData>) /src/skia/out/Fuzz/../../fuzz/oss_fuzz/FuzzSkRuntimeEffect.cpp:39:43
    #18 0x5016b3 in FuzzSkRuntimeEffect(sk_sp<SkData>) /src/skia/out/Fuzz/../../fuzz/oss_fuzz/FuzzSkRuntimeEffect.cpp:68:19
    #19 0x501dd2 in LLVMFuzzerTestOneInput /src/skia/out/Fuzz/../../fuzz/oss_fuzz/FuzzSkRuntimeEffect.cpp:83:5
    #20 0x4f7abb in main (/out/skruntimeeffect+0x4f7abb)
    #21 0x78d69964683f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #22 0x450d68 in _start (/out/skruntimeeffect+0x450d68)

DEDUP_TOKEN: SkTArray<std::__1::unique_ptr<SkSL::Expression, std::__1::default_delete<SkSL::Expression> >, false>::begin() const--int SkSL::Constructor::getVecComponent<int>(int) const--SkSL::Constructor::getIVecComponent(int) const
0x631000000bb8 is located 952 bytes inside of 65536-byte region [0x631000000800,0x631000010800)
allocated by thread T0 here:
    #0 0x4f4bcd in operator new(unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:99:3
    #1 0xa36d4c in GrMemoryPool::Make(unsigned long, unsigned long) /src/skia/out/Fuzz/../../src/gpu/GrMemoryPool.cpp:27:17
    #2 0x9b8efc in SkSL::Pool::Create() /src/skia/out/Fuzz/../../src/sksl/SkSLPool.cpp:67:22
    #3 0x8859fa in SkSL::Compiler::convertProgram(SkSL::Program::Kind, SkSL::String, SkSL::Program::Settings const&, std::__1::vector<std::__1::unique_ptr<SkSL::ExternalValue, std::__1::default_delete<SkSL::ExternalValue> >, std::__1::allocator<std::__1::unique_ptr<SkSL::ExternalValue, std::__1::default_delete<SkSL::ExternalValue> > > > const*) /src/skia/out/Fuzz/../../src/sksl/SkSLCompiler.cpp:1594:34
    #4 0x6f82b5 in SkRuntimeEffect::Make(SkString) /src/skia/out/Fuzz/../../src/core/SkRuntimeEffect.cpp:159:30
    #5 0x501948 in FuzzSkRuntimeEffect_Once(sk_sp<SkData>) /src/skia/out/Fuzz/../../fuzz/oss_fuzz/FuzzSkRuntimeEffect.cpp:39:43
    #6 0x5016b3 in FuzzSkRuntimeEffect(sk_sp<SkData>) /src/skia/out/Fuzz/../../fuzz/oss_fuzz/FuzzSkRuntimeEffect.cpp:68:19
    #7 0x501dd2 in LLVMFuzzerTestOneInput /src/skia/out/Fuzz/../../fuzz/oss_fuzz/FuzzSkRuntimeEffect.cpp:83:5
    #8 0x4f7abb in main (/out/skruntimeeffect+0x4f7abb)

DEDUP_TOKEN: operator new(unsigned long)--GrMemoryPool::Make(unsigned long, unsigned long)--SkSL::Pool::Create()
SUMMARY: AddressSanitizer: use-after-poison /src/skia/out/Fuzz/../../include/private/SkTArray.h:360:16 in SkTArray<std::__1::unique_ptr<SkSL::Expression, std::__1::default_delete<SkSL::Expression> >, false>::begin() const
Shadow bytes around the buggy address:
  0x0c627fff8120: 00 00 00 f7 00 04 00 00 00 00 00 00 00 f7 00 04
  0x0c627fff8130: 00 00 00 00 00 04 00 00 00 00 00 00 00 f7 00 04
  0x0c627fff8140: 00 00 00 00 00 f7 00 04 00 00 00 00 00 04 00 00
  0x0c627fff8150: 00 00 00 00 00 f7 00 04 00 00 00 00 00 00 00 f7
  0x0c627fff8160: 00 04 00 00 00 00 00 04 00 00 00 00 00 00 00 f7
=>0x0c627fff8170: 00 04 00 00 00 00 00[f7]00 04 00 00 00 00 00 f7
  0x0c627fff8180: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7
  0x0c627fff8190: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7
  0x0c627fff81a0: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7
  0x0c627fff81b0: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7
  0x0c627fff81c0: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12==ABORTING
