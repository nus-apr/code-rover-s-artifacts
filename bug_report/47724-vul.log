INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2277064791
INFO: Loaded 1 modules   (27898 inline 8-bit counters): 27898 [0xbb1f30, 0xbb8c2a), 
INFO: Loaded 1 PC tables (27898 PCs): 27898 [0xbb8c30,0xc25bd0), 
/out/fuzz_ndpi_reader: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60b000014739 at pc 0x0000004c502d bp 0x7ffdec768e00 sp 0x7ffdec768580
READ of size 12 at 0x60b000014739 thread T0
SCARINESS: 26 (multi-byte-read-heap-buffer-overflow)
    #0 0x4c502c in printf_common(void*, char const*, __va_list_tag*) /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors_format.inc:553:9
    #1 0x4c6880 in __interceptor_snprintf /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:1736:1
    #2 0x6f8cf0 in ndpi_check_http_header /src/ndpi/src/lib/protocols/http.c:982:2
    #3 0x6f8cf0 in ndpi_check_http_tcp /src/ndpi/src/lib/protocols/http.c:1219:5
    #4 0x6f8cf0 in ndpi_search_http_tcp /src/ndpi/src/lib/protocols/http.c:1402:3
    #5 0x65480b in check_ndpi_detection_func /src/ndpi/src/lib/ndpi_main.c:5150:6
    #6 0x655c66 in ndpi_check_flow_func /src/ndpi/src/lib/ndpi_main.c
    #7 0x65f1c2 in ndpi_detection_process_packet /src/ndpi/src/lib/ndpi_main.c:6076:15
    #8 0x62a897 in packet_processing /src/ndpi/example/reader_util.c:1541:31
    #9 0x62a897 in ndpi_workflow_process_packet /src/ndpi/example/reader_util.c:2110:10
    #10 0x55d65b in LLVMFuzzerTestOneInput /src/ndpi/fuzz/fuzz_ndpi_reader.c:109:7
    #11 0x4553e3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #12 0x441072 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #13 0x4468bc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #14 0x46f4b2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #15 0x795251c07082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)
    #16 0x41f89d in _start (/out/fuzz_ndpi_reader+0x41f89d)

DEDUP_TOKEN: printf_common(void*, char const*, __va_list_tag*)--__interceptor_snprintf--ndpi_check_http_header
0x60b000014739 is located 0 bytes to the right of 105-byte region [0x60b0000146d0,0x60b000014739)
allocated by thread T0 here:
    #0 0x523ccd in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:129:3
    #1 0x55d60a in LLVMFuzzerTestOneInput /src/ndpi/fuzz/fuzz_ndpi_reader.c:103:31
    #2 0x4553e3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #3 0x441072 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #4 0x4468bc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #5 0x46f4b2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #6 0x795251c07082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)

DEDUP_TOKEN: __interceptor_malloc--LLVMFuzzerTestOneInput--fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors_format.inc:553:9 in printf_common(void*, char const*, __va_list_tag*)
Shadow bytes around the buggy address:
  0x0c167fffa890: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c167fffa8a0: 00 00 00 00 00 00 fa fa fa fa fa fa fa fa fd fd
  0x0c167fffa8b0: fd fd fd fd fd fd fd fd fd fd fd fd fa fa fa fa
  0x0c167fffa8c0: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c167fffa8d0: fd fd fa fa fa fa fa fa fa fa 00 00 00 00 00 00
=>0x0c167fffa8e0: 00 00 00 00 00 00 00[01]fa fa fa fa fa fa fa fa
  0x0c167fffa8f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c167fffa900: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c167fffa910: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c167fffa920: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c167fffa930: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
