INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2249734540
INFO: Loaded 1 modules   (7657 inline 8-bit counters): 7657 [0x6a2fd0, 0x6a4db9), 
INFO: Loaded 1 PC tables (7657 PCs): 7657 [0x62fce0,0x64db70), 
/out/cms_profile_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000001f4 at pc 0x0000005aadf6 bp 0x7ffe9af96700 sp 0x7ffe9af966f8
READ of size 2 at 0x6020000001f4 thread T0
SCARINESS: 14 (2-byte-read-heap-buffer-overflow)
    #0 0x5aadf5 in Write16bitTables /src/lcms/src/cmstypes.c:2081:19
    #1 0x59b925 in Type_LUT16_Write /src/lcms/src/cmstypes.c:2276:14
    #2 0x564597 in SaveTags /src/lcms/src/cmsio0.c:1305:18
    #3 0x563517 in cmsSaveProfileToIOhandler /src/lcms/src/cmsio0.c:1378:10
    #4 0x564aea in cmsSaveProfileToFile /src/lcms/src/cmsio0.c:1419:11
    #5 0x55d131 in LLVMFuzzerTestOneInput /src/cms_profile_fuzzer.c:45:5
    #6 0x455293 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #7 0x440f22 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #8 0x44676c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #9 0x46f362 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #10 0x7116ceace082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)
    #11 0x41f74d in _start (/out/cms_profile_fuzzer+0x41f74d)

DEDUP_TOKEN: Write16bitTables--Type_LUT16_Write--SaveTags
0x6020000001f4 is located 0 bytes to the right of 4-byte region [0x6020000001f0,0x6020000001f4)
allocated by thread T0 here:
    #0 0x523b7d in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:129:3
    #1 0x5c8cbc in _cmsMallocDefaultFn /src/lcms/src/cmserr.c:97:20
    #2 0x5c8d27 in _cmsMalloc /src/lcms/src/cmserr.c:267:12
    #3 0x5c8d27 in _cmsMallocZeroDefaultFn /src/lcms/src/cmserr.c:106:16
    #4 0x5c8f17 in _cmsMallocZero /src/lcms/src/cmserr.c:274:12
    #5 0x5c8f17 in _cmsCallocDefaultFn /src/lcms/src/cmserr.c:160:12
    #6 0x5c9902 in _cmsCalloc /src/lcms/src/cmserr.c:281:12
    #7 0x5cbc4a in AllocateToneCurveStruct /src/lcms/src/cmsgamma.c:256:42
    #8 0x5ce520 in cmsDupToneCurve /src/lcms/src/cmsgamma.c:956:13
    #9 0x5ed5e2 in cmsStageAllocToneCurves /src/lcms/src/cmslut.c:280:38
    #10 0x5aba1c in ReadSetOfCurves /src/lcms/src/cmstypes.c:2486:11
    #11 0x5a14c4 in Type_LUTB2A_Read /src/lcms/src/cmstypes.c:2872:56
    #12 0x565b0c in cmsReadTag /src/lcms/src/cmsio0.c:1637:25
    #13 0x55d124 in LLVMFuzzerTestOneInput /src/cms_profile_fuzzer.c:42:5
    #14 0x455293 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #15 0x440f22 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #16 0x44676c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #17 0x46f362 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0x7116ceace082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)

DEDUP_TOKEN: __interceptor_malloc--_cmsMallocDefaultFn--_cmsMalloc
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/lcms/src/cmstypes.c:2081:19 in Write16bitTables
Shadow bytes around the buggy address:
  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff8000: fa fa 00 00 fa fa 00 fa fa fa 00 fa fa fa 00 fa
  0x0c047fff8010: fa fa 00 07 fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff8020: fa fa fd fa fa fa fd fa fa fa 00 00 fa fa 00 00
=>0x0c047fff8030: fa fa 00 fa fa fa 00 fa fa fa 00 fa fa fa[04]fa
  0x0c047fff8040: fa fa 00 fa fa fa 04 fa fa fa fa fa fa fa fa fa
  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
