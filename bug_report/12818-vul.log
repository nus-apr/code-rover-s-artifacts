======================= INFO =========================
This binary is built for AFL-fuzz.
To run the target function on individual input(s) execute this:
  /out/kimgio_fuzzer < INPUT_FILE
or
  /out/kimgio_fuzzer INPUT_FILE1 [INPUT_FILE2 ... ]
To fuzz with afl-fuzz execute this:
  afl-fuzz [afl-flags] /out/kimgio_fuzzer [-N]
afl-fuzz will run N iterations before re-spawning the process (default: 1000)
======================================================
Reading 65 bytes from /tmp/poc
QBuffer::seek: Invalid pos: -1879048160
QIODevice::read (QBuffer): Called with maxSize < 0
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x780da74017ff at pc 0x0000004f330d bp 0x7ffceaee5d10 sp 0x7ffceaee54c0
WRITE of size 3543977217 at 0x780da74017ff thread T0
SCARINESS: 45 (multi-byte-write-heap-buffer-overflow)
    #0 0x4f330c in __asan_memset /src/llvm/projects/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cc:26
    #1 0x560781 in (anonymous namespace)::LoadTGA(QDataStream&, (anonymous namespace)::TgaHeader const&, QImage&) /src/kimageformats/src/imageformats/tga.cpp:264:13
    #2 0x55fb8a in TGAHandler::read(QImage*) /src/kimageformats/src/imageformats/tga.cpp:372:19
    #3 0x539de2 in LLVMFuzzerTestOneInput /src/kimgio_fuzzer.cc:60:12
    #4 0x19cc84a in ExecuteFilesOnyByOne(int, char**) /src/libfuzzer/afl/afl_driver.cpp:156:5
    #5 0x19ccab1 in main /src/libfuzzer/afl/afl_driver.cpp:193:12
    #6 0x780f50eb283f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #7 0x4219a8 in _start (/out/kimgio_fuzzer+0x4219a8)

DEDUP_TOKEN: __asan_memset--(anonymous namespace)::LoadTGA(QDataStream&, (anonymous namespace)::TgaHeader const&, QImage&)--TGAHandler::read(QImage*)
0x780da74017ff is located 1 bytes to the left of 3543977216-byte region [0x780da7401800,0x780e7a7ce500)
allocated by thread T0 here:
    #0 0x4f41cf in __interceptor_malloc /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:145
    #1 0x560566 in (anonymous namespace)::LoadTGA(QDataStream&, (anonymous namespace)::TgaHeader const&, QImage&) /src/kimageformats/src/imageformats/tga.cpp:215:51
    #2 0x55fb8a in TGAHandler::read(QImage*) /src/kimageformats/src/imageformats/tga.cpp:372:19
    #3 0x539de2 in LLVMFuzzerTestOneInput /src/kimgio_fuzzer.cc:60:12
    #4 0x19cc84a in ExecuteFilesOnyByOne(int, char**) /src/libfuzzer/afl/afl_driver.cpp:156:5
    #5 0x19ccab1 in main /src/libfuzzer/afl/afl_driver.cpp:193:12
    #6 0x780f50eb283f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: __interceptor_malloc--(anonymous namespace)::LoadTGA(QDataStream&, (anonymous namespace)::TgaHeader const&, QImage&)--TGAHandler::read(QImage*)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/llvm/projects/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cc:26 in __asan_memset
Shadow bytes around the buggy address:
  0x0f0234e782a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0f0234e782b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0f0234e782c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0f0234e782d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0f0234e782e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x0f0234e782f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa[fa]
  0x0f0234e78300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f0234e78310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f0234e78320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f0234e78330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f0234e78340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
