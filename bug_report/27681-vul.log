INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2319463062
INFO: Loaded 1 modules   (18740 inline 8-bit counters): 18740 [0xaf02f8, 0xaf4c2c), 
INFO: Loaded 1 PC tables (18740 PCs): 18740 [0x7e7968,0x830ca8), 
/out/sleuthkit_fls_hfs_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6040000002b5 at pc 0x0000005654ef bp 0x7ffc06a861d0 sp 0x7ffc06a861c8
READ of size 1 at 0x6040000002b5 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x5654ee in hfs_cat_compare_keys /src/sleuthkit/tsk/fs/hfs.c:695:13
    #1 0x57c226 in hfs_cat_get_record_offset_cb /src/sleuthkit/tsk/fs/hfs.c:1039:20
    #2 0x566711 in hfs_cat_traverse /src/sleuthkit/tsk/fs/hfs.c:971:21
    #3 0x56aa72 in hfs_cat_get_record_offset /src/sleuthkit/tsk/fs/hfs.c:1069:9
    #4 0x569929 in hfs_cat_file_lookup /src/sleuthkit/tsk/fs/hfs.c:1489:11
    #5 0x56bcb0 in hfs_inode_lookup /src/sleuthkit/tsk/fs/hfs.c:2478:9
    #6 0x55e99b in tsk_fs_file_open_meta /src/sleuthkit/tsk/fs/fs_file.c:128:9
    #7 0x56e136 in hfs_open /src/sleuthkit/tsk/fs/hfs.c:6655:12
    #8 0x564af0 in tsk_fs_open_img_decrypt /src/sleuthkit/tsk/fs/fs_open.c:214:16
    #9 0x564cc5 in tsk_fs_open_img /src/sleuthkit/tsk/fs/fs_open.c:106:12
    #10 0x556215 in LLVMFuzzerTestOneInput /src/sleuthkit_fls_fuzzer.cc:33:8
    #11 0x45abb1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #12 0x444932 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #13 0x44ac75 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #14 0x474b92 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #15 0x742139d2983f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #16 0x41f948 in _start (/out/sleuthkit_fls_hfs_fuzzer+0x41f948)

DEDUP_TOKEN: hfs_cat_compare_keys--hfs_cat_get_record_offset_cb--hfs_cat_traverse
0x6040000002b5 is located 1 bytes to the right of 36-byte region [0x604000000290,0x6040000002b4)
allocated by thread T0 here:
    #0 0x5232dd in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x60dc99 in tsk_malloc /src/sleuthkit/tsk/base/mymalloc.c:32:16
    #2 0x565671 in hfs_cat_traverse /src/sleuthkit/tsk/fs/hfs.c:731:26
    #3 0x56aa72 in hfs_cat_get_record_offset /src/sleuthkit/tsk/fs/hfs.c:1069:9
    #4 0x569929 in hfs_cat_file_lookup /src/sleuthkit/tsk/fs/hfs.c:1489:11
    #5 0x56bcb0 in hfs_inode_lookup /src/sleuthkit/tsk/fs/hfs.c:2478:9
    #6 0x55e99b in tsk_fs_file_open_meta /src/sleuthkit/tsk/fs/fs_file.c:128:9
    #7 0x56e136 in hfs_open /src/sleuthkit/tsk/fs/hfs.c:6655:12
    #8 0x564af0 in tsk_fs_open_img_decrypt /src/sleuthkit/tsk/fs/fs_open.c:214:16
    #9 0x564cc5 in tsk_fs_open_img /src/sleuthkit/tsk/fs/fs_open.c:106:12
    #10 0x556215 in LLVMFuzzerTestOneInput /src/sleuthkit_fls_fuzzer.cc:33:8
    #11 0x45abb1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #12 0x444932 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #13 0x44ac75 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #14 0x474b92 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #15 0x742139d2983f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--tsk_malloc--hfs_cat_traverse
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/sleuthkit/tsk/fs/hfs.c:695:13 in hfs_cat_compare_keys
Shadow bytes around the buggy address:
  0x0c087fff8000: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x0c087fff8010: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x0c087fff8020: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00
  0x0c087fff8030: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00
  0x0c087fff8040: fa fa 00 00 00 00 00 00 fa fa fd fd fd fd fd fa
=>0x0c087fff8050: fa fa 00 00 00 00[04]fa fa fa fa fa fa fa fa fa
  0x0c087fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
