======================= INFO =========================
This binary is built for AFL-fuzz.
To run the target function on individual input(s) execute this:
  /out/config_fuzzer < INPUT_FILE
or
  /out/config_fuzzer INPUT_FILE1 [INPUT_FILE2 ... ]
To fuzz with afl-fuzz execute this:
  afl-fuzz [afl-flags] /out/config_fuzzer [-N]
afl-fuzz will run N iterations before re-spawning the process (default: 1000)
======================================================
Reading 49780 bytes from /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: global-buffer-overflow on address 0x00000114d3e0 at pc 0x000000435979 bp 0x7ffcdb4712c0 sp 0x7ffcdb470a60
READ of size 1 at 0x00000114d3e0 thread T0
SCARINESS: 12 (1-byte-read-global-buffer-overflow)
    #0 0x435978 in strncmp /src/llvm/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:476:3
    #1 0x4da5dd in lex_multiline_string /src/lwan/src/lib/lwan-config.c:345:14
    #2 0x4d8b14 in lex_next /src/lwan/src/lib/lwan-config.c:484:24
    #3 0x4d8feb in parse_key_value /src/lwan/src/lib/lwan-config.c:520:12
    #4 0x4d7dbe in parser_next /src/lwan/src/lib/lwan-config.c:695:25
    #5 0x4d7c81 in config_read_line /src/lwan/src/lib/lwan-config.c:809:11
    #6 0x50e0d2 in dump(config*, config_line*, int) /src/lwan/src/bin/fuzz/config_fuzzer.cc:13:12
    #7 0x50dfff in LLVMFuzzerTestOneInput /src/lwan/src/bin/fuzz/config_fuzzer.cc:57:19
    #8 0x50e63e in ExecuteFilesOnyByOne /src/libfuzzer/afl/afl_driver.cpp:216:5
    #9 0x50e63e in main /src/libfuzzer/afl/afl_driver.cpp:253:12
    #10 0x735a2548883f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #11 0x421ba8 in _start (/out/config_fuzzer+0x421ba8)

DEDUP_TOKEN: strncmp--lex_multiline_string--lex_next
0x00000114d3e0 is located 0 bytes to the right of global variable 'static_data' defined in '/src/lwan/src/bin/fuzz/config_fuzzer.cc:44:20' (0x11453e0) of size 32768
SUMMARY: AddressSanitizer: global-buffer-overflow /src/llvm/projects/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:476:3 in strncmp
Shadow bytes around the buggy address:
  0x000080221a20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x000080221a30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x000080221a40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x000080221a50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x000080221a60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x000080221a70: 00 00 00 00 00 00 00 00 00 00 00 00[f9]f9 f9 f9
  0x000080221a80: f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9
  0x000080221a90: f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9
  0x000080221aa0: f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9
  0x000080221ab0: f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9
  0x000080221ac0: f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9 f9
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
