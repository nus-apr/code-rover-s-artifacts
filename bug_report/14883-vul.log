======================= INFO =========================
This binary is built for AFL-fuzz.
To run the target function on individual input(s) execute this:
  /out/fuzz_client < INPUT_FILE
or
  /out/fuzz_client INPUT_FILE1 [INPUT_FILE2 ... ]
To fuzz with afl-fuzz execute this:
  afl-fuzz [afl-flags] /out/fuzz_client [-N]
afl-fuzz will run N iterations before re-spawning the process (default: 1000)
======================================================
Reading 683 bytes from /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-use-after-free on address 0x603000000028 at pc 0x0000004cd2b8 bp 0x7ffe0b276c10 sp 0x7ffe0b276c08
READ of size 8 at 0x603000000028 thread T0
SCARINESS: 51 (8-byte-read-heap-use-after-free)
    #0 0x4cd2b7 in mbedtls_x509_crt_free /src/mbedtls/library/x509_crt.c:3280:32
    #1 0x4cda54 in x509_crt_parse_der_core /src/mbedtls/library/x509_crt.c
    #2 0x4c7e29 in mbedtls_x509_crt_parse_der_internal /src/mbedtls/library/x509_crt.c:1351:17
    #3 0x4e8504 in ssl_parse_certificate_chain /src/mbedtls/library/ssl_tls.c:6179:15
    #4 0x4e7b25 in mbedtls_ssl_parse_certificate /src/mbedtls/library/ssl_tls.c:6607:11
    #5 0x4eecba in mbedtls_ssl_handshake_step /src/mbedtls/library/ssl_tls.c:9099:15
    #6 0x4eee34 in mbedtls_ssl_handshake /src/mbedtls/library/ssl_tls.c:9123:15
    #7 0x4c77c6 in LLVMFuzzerTestOneInput /src/mbedtls/tests/fuzz/fuzz_client.c:202:11
    #8 0x58c6ca in ExecuteFilesOnyByOne /src/libfuzzer/afl/afl_driver.cpp:216:5
    #9 0x58c6ca in main /src/libfuzzer/afl/afl_driver.cpp:253
    #10 0x711ac784583f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #11 0x41dd78 in _start (/out/fuzz_client+0x41dd78)

DEDUP_TOKEN: mbedtls_x509_crt_free--x509_crt_parse_der_core--mbedtls_x509_crt_parse_der_internal
0x603000000028 is located 24 bytes inside of 32-byte region [0x603000000010,0x603000000030)
freed by thread T0 here:
    #0 0x4957bd in free /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:123:3
    #1 0x4cfd7d in x509_get_subject_alt_name /src/mbedtls/library/x509_crt.c:682:17
    #2 0x4cec45 in x509_get_crt_ext /src/mbedtls/library/x509_crt.c:996:25
    #3 0x4cddc2 in x509_crt_parse_der_core /src/mbedtls/library/x509_crt.c:1256:15
    #4 0x4c7e29 in mbedtls_x509_crt_parse_der_internal /src/mbedtls/library/x509_crt.c:1351:17
    #5 0x4e8504 in ssl_parse_certificate_chain /src/mbedtls/library/ssl_tls.c:6179:15
    #6 0x4e7b25 in mbedtls_ssl_parse_certificate /src/mbedtls/library/ssl_tls.c:6607:11
    #7 0x4eecba in mbedtls_ssl_handshake_step /src/mbedtls/library/ssl_tls.c:9099:15
    #8 0x4eee34 in mbedtls_ssl_handshake /src/mbedtls/library/ssl_tls.c:9123:15
    #9 0x4c77c6 in LLVMFuzzerTestOneInput /src/mbedtls/tests/fuzz/fuzz_client.c:202:11
    #10 0x58c6ca in ExecuteFilesOnyByOne /src/libfuzzer/afl/afl_driver.cpp:216:5
    #11 0x58c6ca in main /src/libfuzzer/afl/afl_driver.cpp:253
    #12 0x711ac784583f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: free--x509_get_subject_alt_name--x509_get_crt_ext
previously allocated by thread T0 here:
    #0 0x495bb2 in calloc /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:154:3
    #1 0x4cfb3a in x509_get_subject_alt_name /src/mbedtls/library/x509_crt.c:693:25
    #2 0x4cec45 in x509_get_crt_ext /src/mbedtls/library/x509_crt.c:996:25
    #3 0x4cddc2 in x509_crt_parse_der_core /src/mbedtls/library/x509_crt.c:1256:15
    #4 0x4c7e29 in mbedtls_x509_crt_parse_der_internal /src/mbedtls/library/x509_crt.c:1351:17
    #5 0x4e8504 in ssl_parse_certificate_chain /src/mbedtls/library/ssl_tls.c:6179:15
    #6 0x4e7b25 in mbedtls_ssl_parse_certificate /src/mbedtls/library/ssl_tls.c:6607:11
    #7 0x4eecba in mbedtls_ssl_handshake_step /src/mbedtls/library/ssl_tls.c:9099:15
    #8 0x4eee34 in mbedtls_ssl_handshake /src/mbedtls/library/ssl_tls.c:9123:15
    #9 0x4c77c6 in LLVMFuzzerTestOneInput /src/mbedtls/tests/fuzz/fuzz_client.c:202:11
    #10 0x58c6ca in ExecuteFilesOnyByOne /src/libfuzzer/afl/afl_driver.cpp:216:5
    #11 0x58c6ca in main /src/libfuzzer/afl/afl_driver.cpp:253
    #12 0x711ac784583f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: calloc--x509_get_subject_alt_name--x509_get_crt_ext
SUMMARY: AddressSanitizer: heap-use-after-free /src/mbedtls/library/x509_crt.c:3280:32 in mbedtls_x509_crt_free
Shadow bytes around the buggy address:
  0x0c067fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c067fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c067fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c067fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c067fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c067fff8000: fa fa fd fd fd[fd]fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
