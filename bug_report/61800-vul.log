=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000000090 at pc 0x0000005151f7 bp 0x7ffdb4f2a330 sp 0x7ffdb4f2a328
READ of size 4 at 0x603000000090 thread T0
SCARINESS: 17 (4-byte-read-heap-buffer-overflow)
    #0 0x5151f6 in rawspeed::NotARational<int>::operator float<float, true>() const /src/librawspeed/src/librawspeed/adt/NotARational.h:40:15
    #1 0x5151f6 in rawspeed::DngDecoder::decodeMetaDataInternal(rawspeed::CameraMetaData const*) /src/librawspeed/src/librawspeed/decoders/DngDecoder.cpp:694:21
    #2 0x573b3c in rawspeed::RawDecoder::decodeMetaData(rawspeed::CameraMetaData const*) /src/librawspeed/src/librawspeed/decoders/RawDecoder.cpp:318:5
    #3 0x4d4aeb in LLVMFuzzerTestOneInput /src/librawspeed/fuzz/librawspeed/decoders/TiffDecoders/main.cpp:77:14
    #4 0x71240d in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:255:7
    #5 0x712218 in LLVMFuzzerRunDriver /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c
    #6 0x711dd8 in main /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:300:10
    #7 0x77714db20082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #8 0x4217ad in _start (/out/TiffDecoderFuzzer-DngDecoder+0x4217ad)

DEDUP_TOKEN: rawspeed::NotARational<int>::operator float<float, true>() const--rawspeed::DngDecoder::decodeMetaDataInternal(rawspeed::CameraMetaData const*)--rawspeed::RawDecoder::decodeMetaData(rawspeed::CameraMetaData const*)
0x603000000090 is located 0 bytes to the right of 32-byte region [0x603000000070,0x603000000090)
allocated by thread T0 here:
    #0 0x4d21ed in operator new(unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:95:3
    #1 0x50be1a in void* std::__1::__libcpp_operator_new<unsigned long>(unsigned long) /usr/local/bin/../include/c++/v1/new:245:10
    #2 0x50be1a in std::__1::__libcpp_allocate(unsigned long, unsigned long) /usr/local/bin/../include/c++/v1/new:271:10
    #3 0x50be1a in std::__1::allocator<rawspeed::NotARational<int> >::allocate(unsigned long) /usr/local/bin/../include/c++/v1/__memory/allocator.h:105:38
    #4 0x50be1a in std::__1::allocator_traits<std::__1::allocator<rawspeed::NotARational<int> > >::allocate(std::__1::allocator<rawspeed::NotARational<int> >&, unsigned long) /usr/local/bin/../include/c++/v1/__memory/allocator_traits.h:262:20
    #5 0x50be1a in std::__1::__split_buffer<rawspeed::NotARational<int>, std::__1::allocator<rawspeed::NotARational<int> >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<rawspeed::NotARational<int> >&) /usr/local/bin/../include/c++/v1/__split_buffer:306:29
    #6 0x50be1a in std::__1::vector<rawspeed::NotARational<int>, std::__1::allocator<rawspeed::NotARational<int> > >::reserve(unsigned long) /usr/local/bin/../include/c++/v1/vector:1489:53
    #7 0x50b562 in rawspeed::DngDecoder::parseColorMatrix() const /src/librawspeed/src/librawspeed/decoders/DngDecoder.cpp:276:30
    #8 0x514198 in rawspeed::DngDecoder::decodeMetaDataInternal(rawspeed::CameraMetaData const*) /src/librawspeed/src/librawspeed/decoders/DngDecoder.cpp:665:3
    #9 0x573b3c in rawspeed::RawDecoder::decodeMetaData(rawspeed::CameraMetaData const*) /src/librawspeed/src/librawspeed/decoders/RawDecoder.cpp:318:5
    #10 0x4d4aeb in LLVMFuzzerTestOneInput /src/librawspeed/fuzz/librawspeed/decoders/TiffDecoders/main.cpp:77:14
    #11 0x71240d in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:255:7

DEDUP_TOKEN: operator new(unsigned long)--void* std::__1::__libcpp_operator_new<unsigned long>(unsigned long)--std::__1::__libcpp_allocate(unsigned long, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/librawspeed/src/librawspeed/adt/NotARational.h:40:15 in rawspeed::NotARational<int>::operator float<float, true>() const
Shadow bytes around the buggy address:
  0x0c067fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c067fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c067fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c067fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c067fff8000: fa fa 00 00 00 fa fa fa fd fd fd fd fa fa 00 00
=>0x0c067fff8010: 00 00[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
