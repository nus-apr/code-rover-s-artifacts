======================= INFO =========================
This binary is built for AFL-fuzz.
To run the target function on individual input(s) execute this:
  /out/arrow-ipc-stream-fuzz < INPUT_FILE
or
  /out/arrow-ipc-stream-fuzz INPUT_FILE1 [INPUT_FILE2 ... ]
To fuzz with afl-fuzz execute this:
  afl-fuzz [afl-flags] /out/arrow-ipc-stream-fuzz [-N]
afl-fuzz will run N iterations before re-spawning the process (default: 1000)
======================================================
Reading 1124 bytes from /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6190000004e4 at pc 0x000000aab23f bp 0x7ffd1082b4a0 sp 0x7ffd1082b498
READ of size 8 at 0x6190000004e4 thread T0
SCARINESS: 23 (8-byte-read-heap-buffer-overflow)
    #0 0xaab23e in SafeLoadAs<unsigned long> /src/arrow/cpp/src/arrow/util/ubsan.h:59:3
    #1 0xaab23e in load<unsigned long> /src/arrow/cpp/src/arrow/util/bitmap_ops.cc:176:36
    #2 0xaab23e in NextWord /src/arrow/cpp/src/arrow/util/bitmap_ops.cc:98:28
    #3 0xaab23e in void arrow::internal::TransferBitmap<(arrow::internal::TransferMode)0>(unsigned char const*, long, long, long, unsigned char*) /src/arrow/cpp/src/arrow/util/bitmap_ops.cc:297:26
    #4 0x737172 in arrow::ConcatenateBitmaps(std::__1::vector<arrow::Bitmap, std::__1::allocator<arrow::Bitmap> > const&, arrow::MemoryPool*, std::__1::shared_ptr<arrow::Buffer>*) /src/arrow/cpp/src/arrow/array/concatenate.cc:83:7
    #5 0x734e7b in arrow::ConcatenateImpl::Concatenate(std::__1::shared_ptr<arrow::ArrayData>*) && /src/arrow/cpp/src/arrow/array/concatenate.cc:192:7
    #6 0x7461ca in arrow::ConcatenateImpl::Visit(arrow::FixedSizeListType const&) /src/arrow/cpp/src/arrow/array/concatenate.cc:249:47
    #7 0x739041 in arrow::Status arrow::VisitTypeInline<arrow::ConcatenateImpl>(arrow::DataType const&, arrow::ConcatenateImpl*) /src/arrow/cpp/src/arrow/visitor_inline.h:88:5
    #8 0x735110 in arrow::ConcatenateImpl::Concatenate(std::__1::shared_ptr<arrow::ArrayData>*) && /src/arrow/cpp/src/arrow/array/concatenate.cc:194:5
    #9 0x730f9e in arrow::Concatenate(std::__1::vector<std::__1::shared_ptr<arrow::Array>, std::__1::allocator<std::__1::shared_ptr<arrow::Array> > > const&, arrow::MemoryPool*) /src/arrow/cpp/src/arrow/array/concatenate.cc:425:3
    #10 0xb67b23 in arrow::ipc::DictionaryMemo::AddDictionaryDelta(long, std::__1::shared_ptr<arrow::ArrayData> const&, arrow::MemoryPool*) /src/arrow/cpp/src/arrow/ipc/dictionary.cc:217:3
    #11 0x5eb385 in arrow::ipc::ReadDictionary(arrow::Buffer const&, arrow::ipc::DictionaryMemo*, arrow::ipc::IpcReadOptions const&, arrow::io::RandomAccessFile*) /src/arrow/cpp/src/arrow/ipc/reader.cc:714:29
    #12 0x5edc6f in arrow::ipc::ReadDictionary(arrow::ipc::Message const&, arrow::ipc::DictionaryMemo*, arrow::ipc::IpcReadOptions const&) /src/arrow/cpp/src/arrow/ipc/reader.cc:725:10
    #13 0x6b8f08 in arrow::ipc::RecordBatchStreamReaderImpl::ReadInitialDictionaries() /src/arrow/cpp/src/arrow/ipc/reader.cc:817:7
    #14 0x6b3a94 in arrow::ipc::RecordBatchStreamReaderImpl::ReadNext(std::__1::shared_ptr<arrow::RecordBatch>*) /src/arrow/cpp/src/arrow/ipc/reader.cc:751:7
    #15 0x6439ed in arrow::ipc::internal::FuzzIpcStream(unsigned char const*, long) /src/arrow/cpp/src/arrow/ipc/reader.cc:1633:5
    #16 0x5c5b99 in LLVMFuzzerTestOneInput /src/arrow/cpp/src/arrow/ipc/stream_fuzz.cc:25:17
    #17 0x5c422e in ExecuteFilesOnyByOne /src/libfuzzer/afl/afl_driver.cpp:217:5
    #18 0x5c422e in main /src/libfuzzer/afl/afl_driver.cpp:254:12
    #19 0x75d97235483f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #20 0x516118 in _start (/out/arrow-ipc-stream-fuzz+0x516118)

DEDUP_TOKEN: SafeLoadAs<unsigned long>--load<unsigned long>--NextWord
0x6190000004e4 is located 0 bytes to the right of 1124-byte region [0x619000000080,0x6190000004e4)
allocated by thread T0 here:
    #0 0x5c151d in operator new(unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:99:3
    #1 0x5c41c7 in __libcpp_allocate /usr/local/bin/../include/c++/v1/new:253:10
    #2 0x5c41c7 in allocate /usr/local/bin/../include/c++/v1/memory:1789:34
    #3 0x5c41c7 in allocate /usr/local/bin/../include/c++/v1/memory:1525:21
    #4 0x5c41c7 in __vallocate /usr/local/bin/../include/c++/v1/vector:996:37
    #5 0x5c41c7 in vector /usr/local/bin/../include/c++/v1/vector:1129:9
    #6 0x5c41c7 in ExecuteFilesOnyByOne /src/libfuzzer/afl/afl_driver.cpp:214:23
    #7 0x5c41c7 in main /src/libfuzzer/afl/afl_driver.cpp:254:12
    #8 0x75d97235483f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: operator new(unsigned long)--__libcpp_allocate--allocate
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/arrow/cpp/src/arrow/util/ubsan.h:59:3 in SafeLoadAs<unsigned long>
Shadow bytes around the buggy address:
  0x0c327fff8040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c327fff8050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c327fff8060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c327fff8070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c327fff8080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c327fff8090: 00 00 00 00 00 00 00 00 00 00 00 00[04]fa fa fa
  0x0c327fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c327fff80b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c327fff80c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c327fff80d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c327fff80e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
