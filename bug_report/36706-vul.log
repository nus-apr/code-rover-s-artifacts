INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2185944253
INFO: Loaded 1 modules   (64324 inline 8-bit counters): 64324 [0x125c928, 0x126c46c), 
INFO: Loaded 1 PC tables (64324 PCs): 64324 [0x126c470,0x13678b0), 
/out/FuzzJs: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
First byte doesn't make sense: 0xa0.
First byte doesn't make sense: 0x80.
First byte doesn't make sense: 0xb4.
Extension byte 0xf3 in 3 position after first byte 0xf3 doesn't make sense.
First byte doesn't make sense: 0xa0.
First byte doesn't make sense: 0x80.
First byte doesn't make sense: 0xff.
First byte doesn't make sense: 0xff.
First byte doesn't make sense: 0xff.
First byte doesn't make sense: 0xff.
First byte doesn't make sense: 0xb4.
=================================================================
==13==ERROR: AddressSanitizer: use-after-poison on address 0x62d000340610 at pc 0x00000068c593 bp 0x7ffcdae4f790 sp 0x7ffcdae4f788
WRITE of size 8 at 0x62d000340610 thread T0
SCARINESS: 52 (8-byte-write-use-after-poison)
    #0 0x68c592 in AK::Atomic<unsigned long, (AK::MemoryOrder)5>::fetch_or(unsigned long, AK::MemoryOrder) volatile /src/serenity/Meta/Lagom/build/../../../AK/Atomic.h:302:16
    #1 0x68c592 in AK::RefPtrTraits<AK::StringImpl>::lock(AK::Atomic<unsigned long, (AK::MemoryOrder)5>&) /src/serenity/Meta/Lagom/build/../../../AK/RefPtr.h:94:31
    #2 0x68c592 in AK::RefPtr<AK::StringImpl, AK::RefPtrTraits<AK::StringImpl> >::add_ref_raw() const /src/serenity/Meta/Lagom/build/../../../AK/RefPtr.h:414:24
    #3 0x68c592 in AK::RefPtr<AK::StringImpl, AK::RefPtrTraits<AK::StringImpl> >::RefPtr(AK::RefPtr<AK::StringImpl, AK::RefPtrTraits<AK::StringImpl> > const&) /src/serenity/Meta/Lagom/build/../../../AK/RefPtr.h:172:24
    #4 0x68c500 in AK::String::String(AK::String const&) /src/serenity/Meta/Lagom/build/../../../AK/String.h:52:11
    #5 0x9f11a0 in JS::abstract_relation(JS::GlobalObject&, bool, JS::Value, JS::Value) /src/serenity/Userland/Libraries/LibJS/Runtime/Value.cpp:1478:25
    #6 0x9f29fd in JS::less_than(JS::GlobalObject&, JS::Value, JS::Value) /src/serenity/Userland/Libraries/LibJS/Runtime/Value.cpp:872:25
    #7 0xb26e6f in JS::BinaryExpression::execute(JS::Interpreter&, JS::GlobalObject&) const /src/serenity/Userland/Libraries/LibJS/AST.cpp:679:16
    #8 0xb26a2a in JS::BinaryExpression::execute(JS::Interpreter&, JS::GlobalObject&) const /src/serenity/Userland/Libraries/LibJS/AST.cpp:646:30
    #9 0xb26a2a in JS::BinaryExpression::execute(JS::Interpreter&, JS::GlobalObject&) const /src/serenity/Userland/Libraries/LibJS/AST.cpp:646:30
    #10 0xb49e47 in JS::SequenceExpression::execute(JS::Interpreter&, JS::GlobalObject&) const /src/serenity/Userland/Libraries/LibJS/AST.cpp:2407:33
    #11 0xb18547 in JS::ExpressionStatement::execute(JS::Interpreter&, JS::GlobalObject&) const /src/serenity/Userland/Libraries/LibJS/AST.cpp:125:26
    #12 0x699584 in JS::Interpreter::execute_statement(JS::GlobalObject&, JS::Statement const&, JS::ScopeType) /src/serenity/Userland/Libraries/LibJS/Interpreter.cpp:180:27
    #13 0xb17a16 in JS::Program::execute(JS::Interpreter&, JS::GlobalObject&) const /src/serenity/Userland/Libraries/LibJS/AST.cpp:93:24
    #14 0x695699 in JS::Interpreter::run(JS::GlobalObject&, JS::Program const&) /src/serenity/Userland/Libraries/LibJS/Interpreter.cpp:60:26
    #15 0x68ae30 in LLVMFuzzerTestOneInput /src/serenity/Meta/Lagom/build/../Fuzzers/FuzzJs.cpp:24:22
    #16 0x58df43 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #17 0x5796b2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #18 0x57f37e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #19 0x5a8e32 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #20 0x7f5e0040a83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #21 0x554768 in _start (/out/FuzzJs+0x554768)

DEDUP_TOKEN: AK::Atomic<unsigned long, (AK::MemoryOrder)5>::fetch_or(unsigned long, AK::MemoryOrder) volatile--AK::RefPtrTraits<AK::StringImpl>::lock(AK::Atomic<unsigned long, (AK::MemoryOrder)5>&)--AK::RefPtr<AK::StringImpl, AK::RefPtrTraits<AK::StringImpl> >::add_ref_raw() const
0x62d000340610 is located 1552 bytes inside of 16384-byte region [0x62d000340000,0x62d000344000)
allocated by thread T0 here:
    #0 0x657772 in aligned_alloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:192:3
    #1 0xb6929c in JS::BlockAllocator::allocate_block(char const*) /src/serenity/Userland/Libraries/LibJS/Heap/BlockAllocator.cpp:58:31
    #2 0x80d37d in JS::HeapBlock::create_with_cell_size(JS::Heap&, unsigned long) /src/serenity/Userland/Libraries/LibJS/Heap/HeapBlock.cpp:29:66
    #3 0xb6a353 in JS::CellAllocator::allocate_cell(JS::Heap&) /src/serenity/Userland/Libraries/LibJS/Heap/CellAllocator.cpp:27:22
    #4 0x7fcc5d in JS::Heap::allocate_cell(unsigned long) /src/serenity/Userland/Libraries/LibJS/Heap/Heap.cpp:67:22
    #5 0x8b98c4 in JS::PrimitiveString* JS::Heap::allocate_without_global_object<JS::PrimitiveString, AK::String>(AK::String&&) /src/serenity/Meta/Lagom/build/../../../Userland/Libraries/LibJS/Heap/Heap.h:37:24
    #6 0x8b9fb9 in JS::js_string(JS::Heap&, AK::String) /src/serenity/Userland/Libraries/LibJS/Runtime/PrimitiveString.cpp:77:17
    #7 0x8ba301 in JS::js_string(JS::VM&, AK::String) /src/serenity/Userland/Libraries/LibJS/Runtime/PrimitiveString.cpp:82:12
    #8 0x8e9ecc in JS::RegExpPrototype::to_string(JS::VM&, JS::GlobalObject&) /src/serenity/Userland/Libraries/LibJS/Runtime/RegExpPrototype.cpp:462:12
    #9 0x836981 in AK::Function<JS::Value (JS::VM&, JS::GlobalObject&)>::CallableWrapper<JS::Value (*)(JS::VM&, JS::GlobalObject&)>::call(JS::VM&, JS::GlobalObject&) /src/serenity/Meta/Lagom/build/../../../AK/Function.h:151:20
    #10 0x880bba in AK::Function<JS::Value (JS::VM&, JS::GlobalObject&)>::operator()(JS::VM&, JS::GlobalObject&) const /src/serenity/Meta/Lagom/build/../../../AK/Function.h:91:25
    #11 0x880a49 in JS::NativeFunction::call() /src/serenity/Userland/Libraries/LibJS/Runtime/NativeFunction.cpp:42:12
    #12 0x9dcd29 in JS::VM::call_internal(JS::FunctionObject&, JS::Value, AK::Optional<JS::MarkedValueList>) /src/serenity/Userland/Libraries/LibJS/Runtime/VM.cpp:655:21
    #13 0x89ba57 in JS::Value JS::VM::call<AK::Optional<JS::MarkedValueList> >(JS::FunctionObject&, JS::Value, AK::Optional<JS::MarkedValueList>) /src/serenity/Meta/Lagom/build/../../../Userland/Libraries/LibJS/Runtime/VM.h:304:134
    #14 0x89ba57 in JS::Value JS::VM::call<>(JS::FunctionObject&, JS::Value) /src/serenity/Meta/Lagom/build/../../../Userland/Libraries/LibJS/Runtime/VM.h:307:97
    #15 0x89ba57 in JS::Object::ordinary_to_primitive(JS::Value::PreferredType) const /src/serenity/Userland/Libraries/LibJS/Runtime/Object.cpp:1195:30
    #16 0x9ea781 in JS::Value::to_primitive(JS::GlobalObject&, JS::Value::PreferredType) const /src/serenity/Userland/Libraries/LibJS/Runtime/Value.cpp:444:28
    #17 0x9f0fc5 in JS::abstract_relation(JS::GlobalObject&, bool, JS::Value, JS::Value) /src/serenity/Userland/Libraries/LibJS/Runtime/Value.cpp:1465:27
    #18 0x9f29fd in JS::less_than(JS::GlobalObject&, JS::Value, JS::Value) /src/serenity/Userland/Libraries/LibJS/Runtime/Value.cpp:872:25
    #19 0xb26e6f in JS::BinaryExpression::execute(JS::Interpreter&, JS::GlobalObject&) const /src/serenity/Userland/Libraries/LibJS/AST.cpp:679:16
    #20 0xb26a2a in JS::BinaryExpression::execute(JS::Interpreter&, JS::GlobalObject&) const /src/serenity/Userland/Libraries/LibJS/AST.cpp:646:30
    #21 0xb26a2a in JS::BinaryExpression::execute(JS::Interpreter&, JS::GlobalObject&) const /src/serenity/Userland/Libraries/LibJS/AST.cpp:646:30
    #22 0xb49e47 in JS::SequenceExpression::execute(JS::Interpreter&, JS::GlobalObject&) const /src/serenity/Userland/Libraries/LibJS/AST.cpp:2407:33
    #23 0xb18547 in JS::ExpressionStatement::execute(JS::Interpreter&, JS::GlobalObject&) const /src/serenity/Userland/Libraries/LibJS/AST.cpp:125:26
    #24 0x699584 in JS::Interpreter::execute_statement(JS::GlobalObject&, JS::Statement const&, JS::ScopeType) /src/serenity/Userland/Libraries/LibJS/Interpreter.cpp:180:27
    #25 0xb17a16 in JS::Program::execute(JS::Interpreter&, JS::GlobalObject&) const /src/serenity/Userland/Libraries/LibJS/AST.cpp:93:24
    #26 0x695699 in JS::Interpreter::run(JS::GlobalObject&, JS::Program const&) /src/serenity/Userland/Libraries/LibJS/Interpreter.cpp:60:26
    #27 0x68ae30 in LLVMFuzzerTestOneInput /src/serenity/Meta/Lagom/build/../Fuzzers/FuzzJs.cpp:24:22
    #28 0x58df43 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #29 0x5796b2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #30 0x57f37e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #31 0x5a8e32 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10

DEDUP_TOKEN: aligned_alloc--JS::BlockAllocator::allocate_block(char const*)--JS::HeapBlock::create_with_cell_size(JS::Heap&, unsigned long)
SUMMARY: AddressSanitizer: use-after-poison /src/serenity/Meta/Lagom/build/../../../AK/Atomic.h:302:16 in AK::Atomic<unsigned long, (AK::MemoryOrder)5>::fetch_or(unsigned long, AK::MemoryOrder) volatile
Shadow bytes around the buggy address:
  0x0c5a80060070: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7
  0x0c5a80060080: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7
  0x0c5a80060090: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7
  0x0c5a800600a0: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7
  0x0c5a800600b0: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7
=>0x0c5a800600c0: f7 f7[f7]f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7
  0x0c5a800600d0: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7
  0x0c5a800600e0: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7
  0x0c5a800600f0: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7
  0x0c5a80060100: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7
  0x0c5a80060110: f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7 f7
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING
