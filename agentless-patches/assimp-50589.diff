diff --git a/assimp/include/assimp/IOStreamBuffer.h b/assimp/include/assimp/IOStreamBuffer.h
index e68fcda..d185595 100644
--- a/assimp/include/assimp/IOStreamBuffer.h
+++ b/assimp/include/assimp/IOStreamBuffer.h
@@ -288,23 +288,26 @@ static AI_FORCE_INLINE bool isEndOfCache(size_t pos, size_t cacheSize) {
 
 template <class T>
 AI_FORCE_INLINE bool IOStreamBuffer<T>::getNextLine(std::vector<T> &buffer) {
-    buffer.resize(m_cacheSize);
+    buffer.clear();
     if (isEndOfCache(m_cachePos, m_cacheSize) || 0 == m_filePos) {
         if (!readNextBlock()) {
             return false;
         }
     }
 
-    if (IsLineEnd(m_cache[m_cachePos])) {
+    while (!isEndOfCache(m_cachePos, m_cacheSize) && !IsLineEnd(m_cache[m_cachePos])) {
+        buffer.push_back(m_cache[m_cachePos]);
+        ++m_cachePos;
+    }
+
+    if (!isEndOfCache(m_cachePos, m_cacheSize) && IsLineEnd(m_cache[m_cachePos])) {
         // skip line end
-        while (m_cache[m_cachePos] != '\n') {
-            ++m_cachePos;
-        }
         ++m_cachePos;
-        if (isEndOfCache(m_cachePos, m_cacheSize)) {
-            if (!readNextBlock()) {
-                return false;
-            }
+    }
+
+    if (isEndOfCache(m_cachePos, m_cacheSize)) {
+        if (!readNextBlock()) {
+            return false;
         }
     }
 
